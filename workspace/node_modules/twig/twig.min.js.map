{"version":3,"sources":["webpack://Twig/webpack/universalModuleDefinition","webpack://Twig/webpack/bootstrap","webpack://Twig/./node_modules/@babel/runtime/helpers/interopRequireDefault.js","webpack://Twig/./node_modules/@babel/runtime/helpers/typeof.js","webpack://Twig/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://Twig/./node_modules/locutus/php/strings/sprintf.js","webpack://Twig/./node_modules/path-browserify/index.js","webpack://Twig/./src/twig.js","webpack://Twig/./src/twig.factory.js","webpack://Twig/./src/twig.core.js","webpack://Twig/./src/twig.compiler.js","webpack://Twig/./src/twig.expression.js","webpack://Twig/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://Twig/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://Twig/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://Twig/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://Twig/./src/twig.expression.operator.js","webpack://Twig/./src/twig.filters.js","webpack://Twig/./src/twig.functions.js","webpack://Twig/./src/twig.lib.js","webpack://Twig/./node_modules/locutus/php/strings/vsprintf.js","webpack://Twig/./node_modules/locutus/php/math/round.js","webpack://Twig/./node_modules/locutus/php/math/max.js","webpack://Twig/./node_modules/locutus/php/math/min.js","webpack://Twig/./node_modules/locutus/php/strings/strip_tags.js","webpack://Twig/./node_modules/locutus/php/_helpers/_phpCastString.js","webpack://Twig/./node_modules/locutus/php/datetime/strtotime.js","webpack://Twig/./node_modules/locutus/php/datetime/date.js","webpack://Twig/./node_modules/locutus/php/var/boolval.js","webpack://Twig/./src/twig.loader.ajax.js","webpack://Twig/./src/twig.loader.fs.js","webpack://Twig/./node_modules/process/browser.js","webpack://Twig/./src/twig.logic.js","webpack://Twig/./src/twig.parser.source.js","webpack://Twig/./src/twig.parser.twig.js","webpack://Twig/./src/twig.path.js","webpack://Twig/./src/twig.tests.js","webpack://Twig/./src/twig.async.js","webpack://Twig/./src/twig.exports.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","obj","_typeof","iterator","constructor","configurable","writable","regex","args","arguments","format","_pad","str","len","chr","leftJustify","padding","length","Array","join","justify","prefix","minWidth","padChar","diff","slice","_formatBaseX","base","precision","toString","_formatString","customPadChar","doFormat","substring","argIndex","modifiers","specifier","number","method","textTransform","j","positiveNumberPrefix","charAt","isFinite","Error","indexOf","undefined","String","fromCharCode","toUpperCase","Math","round","abs","toLowerCase","replace","err","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","filter","xs","f","res","push","resolve","resolvedPath","resolvedAbsolute","path","process","cwd","TypeError","split","normalize","isAbsolute","trailingSlash","substr","paths","index","relative","from","to","trim","arr","start","end","fromParts","toParts","min","samePartsLength","outputParts","concat","sep","delimiter","dirname","code","charCodeAt","hasRoot","matchedSlash","basename","ext","extname","startDot","startPart","preDotState","require","Twig","VERSION","handleException","state","ex","template","options","rethrow","type","file","id","log","error","stack","debug","trace","cache","noop","merge","target","source","onlyChanged","keys","forEach","message","this","console","token","output","logic","comment","raw","outputWhitespacePre","outputWhitespacePost","outputWhitespaceBoth","logicWhitespacePre","logicWhitespacePost","logicWhitespaceBoth","definitions","open","close","strings","findStart","tokenTemplate","firstKeyPosition","closeKeyPosition","position","def","closePosition","findEnd","tokenDef","found","offset","strPos","strFound","pos","endOffset","thisStrPos","endStrPos","tokenize","tokens","errorOffset","foundToken","max","compile","self","intermediateOutput","logicToken","unclosedToken","prevToken","prevOutput","prevIntermediateOutput","nextToken","tokOutput","next","compileOutput","expression","compileLogic","handler","pop","includes","shift","trimEnd","trimStart","prepare","data","rawTokens","autoescape","strategy","escapedOutput","map","twigMarkup","filters","escape","joinedOutput","Markup","Templates","loaders","parsers","registry","validateId","registerLoader","methodName","func","scope","unRegisterLoader","isRegisteredLoader","registerParser","unRegisterParser","isRegisteredParser","save","load","loadRemote","location","params","callback","errorCallback","cached","parser","async","fs","Block","render","parseState","context","originalTemplate","parseAsync","then","string","ParseState","blockOverrides","renderedBlocks","overrideBlocks","macros","nestingStack","getBlock","checkOnlyInheritedBlocks","block","parentTemplate","getBlocks","includeParentBlocks","blocks","getNestingStackToken","matchingToken","parse","allowAsync","promise","isAsync","chain","outputPush","parseTokenLogic","Template","clas","url","defined","imported","checkImports","potentiallyAsync","allowInlineIncludes","parsePath","getLoaderMethod","renderAsync","isInclude","valueOf","importFile","subTemplate","compiler","content","JSON","stringify","twig","wrap","pathToTwig","node","cjs2","parseParams","Promise","reservedWords","comma","operator","unary","binary","bool","array","parameter","subexpression","period","brackets","_function","variable","_null","test","set","operations","expressions","operationsExtended","fn","pushBoth","pushValue","match","modifier","result","stackToken","Number","transform","lookup","associativity","leftToRight","precidence","rightToLeft","temp","keyToken","loop","validate","foundSubexpressionStart","nextSubexpressionStartInvalid","unclosedParameterCount","endToken","paramStack","lastToken","newArray","arrayEnded","sliceRange","sliceStart","parseInt","sliceEnd","input","newObject","objectEnded","hasValue","_keys","functions","apply","resolveAsync","strictVariables","capitalize","parameters","cleanup","extendType","extend","definition","regexI","tokenNext","matchFound","expOffset","invalidMatches","matchFunction","matchI","isArray","rawToken","tokensAreParameters","loopTokenFixups","binaryOperator","loopTokenFixup","arrayWithoutHoles","iterableToArray","nonIterableSpread","arr2","iter","containment","a","b","el","reParts","reBody","reFlags","RegExp","lib","boolval","parseFloat","floor","range","is","upper","lower","title","p1","p2","reverse","sort","sortedKeys","a1","b1","isNaN","keyset","url_encode","serialize","resultKey","resultValue","encodeURIComponent","joinStr","json_encode","v","toISOString","arrIndex","param","val","intKey","date","Boolean","date_modify","time","modifyText","strtotime","getTime","Date","tag","pairs","replaceAll","vsprintf","striptags","allowed","stripTags","rawValue","char","charCode","shortMap","sprintf","e","nl2br","br","number_format","decimals","dec","prec","k","toFixedFix","whitespace","truncate","preserve","separator","startIndex","first","limit","limitedSplit","batch","items","missing","size","fill","ceil","chunkArray","spaceless","low","high","step","inival","endval","matrix","walker","chars","cycle","dump","argsCopy","EOL","indentChar","indentTimes","out","indent","times","ind","displayVar","dumpVar","dateObj","blockName","parent","attribute","values","Reflect","template_from_string","random","getRandomNumber","LIMIT_INT31","ignoreMissing","templateSource","templateFound","fetchTemplateSource","search","searchEscaped","returnVal","x","isHalf","sgn","pow","ar","retVal","argv","argc","_obj2Array","_compare","current","tmp","nl","cl","_phpCastString","tags","commentsAndPhpTags","after","before","$0","$1","reMeridian","reHour24","reHour24lz","reHour12","reMinute","reMinutelz","reSecond","reSecondlz","reDayfull","reDaytext","reReltextnumber","reReltextunit","reYear","reYear4","reMonth","reMonthlz","reDay","reDaylz","reMonthFull","reMonthAbbr","reMonthText","reTzCorrection","processMeridian","hour","meridian","processYear","yearStr","year","lookupMonth","monthStr","jan","january","feb","february","ii","mar","march","iii","apr","april","iv","may","jun","june","vi","jul","july","vii","aug","august","viii","sept","september","ix","oct","october","nov","november","xi","december","xii","lookupWeekday","dayStr","desiredSundayNumber","dayNumbers","mon","monday","tue","tuesday","wed","wednesday","thu","thursday","fri","friday","sat","saturday","sun","sunday","processTzCorrection","tzOffset","oldValue","sign","hours","minutes","formats","yesterday","rd","resetTime","now","noon","midnightOrToday","tomorrow","timestamp","rs","y","dates","zone","firstOrLastDay","day","firstOrLastDayOfMonth","backOrFrontOf","side","minute","weekdayOf","mssqltime","second","frac","timeLong12","timeShort12","timeTiny12","soap","month","tzCorrection","ymd","wddx","exif","xmlRpc","xmlRpcNoColon","clf","iso8601long","dateTextual","pointedDate4","pointedDate2","timeLong24","dateNoColon","pgydotd","timeShort24","iso8601noColon","iso8601dateSlash","dateSlash","american","americanShort","gnuDateShortOrIso8601date2","iso8601date4","gnuNoColon","gnuDateShorter","pgTextReverse","dateFull","dateNoDay","dateNoDayRev","pgTextShort","dateNoYear","dateNoYearRev","isoWeekDay","week","dayOfWeek","getDay","relativeText","relValue","relUnit","relTextLower","_lookupRelative","amount","previous","third","fourth","fifth","sixth","seventh","eight","eighth","ninth","tenth","eleventh","twelfth","behavior","ri","rh","rm","ry","weekday","weekdayBehavior","signs","minuses","dayText","relativeTextWeek","relText","monthFullOrMonthAbbr","ago","rf","gnuNoColon2","year4","any","resultProto","NaN","h","z","zones","toDate","relativeTo","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setFullYear","setHours","dow","setDate","setMonth","getTimezoneOffset","setUTCFullYear","setUTCHours","rules","jsdate","txtWords","formatChr","formatChrCb","D","w","N","S","Y","W","F","M","L","A","B","H","getUTCHours","getUTCMinutes","getUTCSeconds","g","G","u","I","UTC","O","tzo","P","T","Z","U","_date","mixedVar","precompiled","XMLHttpRequest","xmlhttp","onreadystatechange","readyState","status","cordova","responseText","send","warn","loadTemplateFn","stat","stats","isFile","readFile","statSync","readFileSync","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","nextTick","browser","env","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","chdir","dir","umask","if_","endif","for_","endfor","else_","elseif","setcapture","endset","endfilter","endapply","do","shortblock","endblock","extends_","use","include","endspaceless","macro","endmacro","import_","embed","endembed","with","endwith","deprecated","keyValue","conditional","kvSplit","keyVar","valueVar","continueChain","innerContext","isConditional","index0","revindex","revindex0","buildLoop","condition","tokenOutput","expressionStack","fileName","filePath","useTemplate","useState","withContext","only","withStack","reduce","acc","lastError","macroName","rawParameters","rawParameter","parametersCount","uniq","defaults","pair","macroContext","_self","prop","contextName","importTemplate","importState","macroExpressions","macroNames","macroMatch","embedContext","embedOverrideTemplate","tokenTemplateType","tokenType","tokenRegex","regexArray","regexLen","exec","isPromise","_file","namespaces","colon","atSign","namespacePath","relativePath","basePath","sepChr","newPath","tests","empty","odd","even","divisibleby","none","sameas","iterable","that","action","potentiallyAsyncSlow","Thenable","_value","_state","onRejected","resolvedThen","onResolved","reject","rejectedThen","executor","changeState","nextState","nextValue","FullPromise","handlers","resolved","rejected","append","pending","newState","hasResolved","hasRejected","defaultResolved","emptyStringResolved","all","promises","results","resp","strict_variables","ref","href","extendFilter","extendFunction","extendTest","extendTag","markup","filename","settings","renderFile","viewOptions","views","option","__express"],"mappings":"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","file":"twig.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Twig\"] = factory();\n\telse\n\t\troot[\"Twig\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","'use strict';\n\nmodule.exports = function sprintf() {\n  //  discuss at: http://locutus.io/php/sprintf/\n  // original by: Ash Searle (http://hexmen.com/blog/)\n  // improved by: Michael White (http://getsprink.com)\n  // improved by: Jack\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Dj\n  // improved by: Allidylls\n  //    input by: Paulo Freitas\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Rafał Kukawski (http://kukawski.pl)\n  //   example 1: sprintf(\"%01.2f\", 123.1)\n  //   returns 1: '123.10'\n  //   example 2: sprintf(\"[%10s]\", 'monkey')\n  //   returns 2: '[    monkey]'\n  //   example 3: sprintf(\"[%'#10s]\", 'monkey')\n  //   returns 3: '[####monkey]'\n  //   example 4: sprintf(\"%d\", 123456789012345)\n  //   returns 4: '123456789012345'\n  //   example 5: sprintf('%-03s', 'E')\n  //   returns 5: 'E00'\n  //   example 6: sprintf('%+010d', 9)\n  //   returns 6: '+000000009'\n  //   example 7: sprintf('%+0\\'@10d', 9)\n  //   returns 7: '@@@@@@@@+9'\n  //   example 8: sprintf('%.f', 3.14)\n  //   returns 8: '3.140000'\n  //   example 9: sprintf('%% %2$d', 1, 2)\n  //   returns 9: '% 2'\n\n  var regex = /%%|%(?:(\\d+)\\$)?((?:[-+#0 ]|'[\\s\\S])*)(\\d+)?(?:\\.(\\d*))?([\\s\\S])/g;\n  var args = arguments;\n  var i = 0;\n  var format = args[i++];\n\n  var _pad = function _pad(str, len, chr, leftJustify) {\n    if (!chr) {\n      chr = ' ';\n    }\n    var padding = str.length >= len ? '' : new Array(1 + len - str.length >>> 0).join(chr);\n    return leftJustify ? str + padding : padding + str;\n  };\n\n  var justify = function justify(value, prefix, leftJustify, minWidth, padChar) {\n    var diff = minWidth - value.length;\n    if (diff > 0) {\n      // when padding with zeros\n      // on the left side\n      // keep sign (+ or -) in front\n      if (!leftJustify && padChar === '0') {\n        value = [value.slice(0, prefix.length), _pad('', diff, '0', true), value.slice(prefix.length)].join('');\n      } else {\n        value = _pad(value, minWidth, padChar, leftJustify);\n      }\n    }\n    return value;\n  };\n\n  var _formatBaseX = function _formatBaseX(value, base, leftJustify, minWidth, precision, padChar) {\n    // Note: casts negative numbers to positive ones\n    var number = value >>> 0;\n    value = _pad(number.toString(base), precision || 0, '0', false);\n    return justify(value, '', leftJustify, minWidth, padChar);\n  };\n\n  // _formatString()\n  var _formatString = function _formatString(value, leftJustify, minWidth, precision, customPadChar) {\n    if (precision !== null && precision !== undefined) {\n      value = value.slice(0, precision);\n    }\n    return justify(value, '', leftJustify, minWidth, customPadChar);\n  };\n\n  // doFormat()\n  var doFormat = function doFormat(substring, argIndex, modifiers, minWidth, precision, specifier) {\n    var number, prefix, method, textTransform, value;\n\n    if (substring === '%%') {\n      return '%';\n    }\n\n    // parse modifiers\n    var padChar = ' '; // pad with spaces by default\n    var leftJustify = false;\n    var positiveNumberPrefix = '';\n    var j, l;\n\n    for (j = 0, l = modifiers.length; j < l; j++) {\n      switch (modifiers.charAt(j)) {\n        case ' ':\n        case '0':\n          padChar = modifiers.charAt(j);\n          break;\n        case '+':\n          positiveNumberPrefix = '+';\n          break;\n        case '-':\n          leftJustify = true;\n          break;\n        case \"'\":\n          if (j + 1 < l) {\n            padChar = modifiers.charAt(j + 1);\n            j++;\n          }\n          break;\n      }\n    }\n\n    if (!minWidth) {\n      minWidth = 0;\n    } else {\n      minWidth = +minWidth;\n    }\n\n    if (!isFinite(minWidth)) {\n      throw new Error('Width must be finite');\n    }\n\n    if (!precision) {\n      precision = specifier === 'd' ? 0 : 'fFeE'.indexOf(specifier) > -1 ? 6 : undefined;\n    } else {\n      precision = +precision;\n    }\n\n    if (argIndex && +argIndex === 0) {\n      throw new Error('Argument number must be greater than zero');\n    }\n\n    if (argIndex && +argIndex >= args.length) {\n      throw new Error('Too few arguments');\n    }\n\n    value = argIndex ? args[+argIndex] : args[i++];\n\n    switch (specifier) {\n      case '%':\n        return '%';\n      case 's':\n        return _formatString(value + '', leftJustify, minWidth, precision, padChar);\n      case 'c':\n        return _formatString(String.fromCharCode(+value), leftJustify, minWidth, precision, padChar);\n      case 'b':\n        return _formatBaseX(value, 2, leftJustify, minWidth, precision, padChar);\n      case 'o':\n        return _formatBaseX(value, 8, leftJustify, minWidth, precision, padChar);\n      case 'x':\n        return _formatBaseX(value, 16, leftJustify, minWidth, precision, padChar);\n      case 'X':\n        return _formatBaseX(value, 16, leftJustify, minWidth, precision, padChar).toUpperCase();\n      case 'u':\n        return _formatBaseX(value, 10, leftJustify, minWidth, precision, padChar);\n      case 'i':\n      case 'd':\n        number = +value || 0;\n        // Plain Math.round doesn't just truncate\n        number = Math.round(number - number % 1);\n        prefix = number < 0 ? '-' : positiveNumberPrefix;\n        value = prefix + _pad(String(Math.abs(number)), precision, '0', false);\n\n        if (leftJustify && padChar === '0') {\n          // can't right-pad 0s on integers\n          padChar = ' ';\n        }\n        return justify(value, prefix, leftJustify, minWidth, padChar);\n      case 'e':\n      case 'E':\n      case 'f': // @todo: Should handle locales (as per setlocale)\n      case 'F':\n      case 'g':\n      case 'G':\n        number = +value;\n        prefix = number < 0 ? '-' : positiveNumberPrefix;\n        method = ['toExponential', 'toFixed', 'toPrecision']['efg'.indexOf(specifier.toLowerCase())];\n        textTransform = ['toString', 'toUpperCase']['eEfFgG'.indexOf(specifier) % 2];\n        value = prefix + Math.abs(number)[method](precision);\n        return justify(value, prefix, leftJustify, minWidth, padChar)[textTransform]();\n      default:\n        // unknown specifier, consume that char and return empty\n        return '';\n    }\n  };\n\n  try {\n    return format.replace(regex, doFormat);\n  } catch (err) {\n    return false;\n  }\n};\n//# sourceMappingURL=sprintf.js.map","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","/**\n * Twig.js\n *\n * @copyright 2011-2020 John Roepke and the Twig.js Contributors\n * @license   Available under the BSD 2-Clause License\n * @link      https://github.com/twigjs/twig.js\n */\n\nmodule.exports = require('./twig.factory')();\n","// ## twig.factory.js\n//\n// This file handles creating the Twig library\nmodule.exports = function factory() {\n    const Twig = {\n        VERSION: '1.14.0'\n    };\n\n    require('./twig.core')(Twig);\n    require('./twig.compiler')(Twig);\n    require('./twig.expression')(Twig);\n    require('./twig.filters')(Twig);\n    require('./twig.functions')(Twig);\n    require('./twig.lib')(Twig);\n    require('./twig.loader.ajax')(Twig);\n    require('./twig.loader.fs')(Twig);\n    require('./twig.logic')(Twig);\n    require('./twig.parser.source')(Twig);\n    require('./twig.parser.twig')(Twig);\n    require('./twig.path')(Twig);\n    require('./twig.tests')(Twig);\n    require('./twig.async')(Twig);\n    require('./twig.exports')(Twig);\n\n    Twig.exports.factory = factory;\n\n    return Twig.exports;\n};\n","// ## twig.core.js\n//\n// This file handles template level tokenizing, compiling and parsing.\nmodule.exports = function (Twig) {\n    'use strict';\n\n    Twig.trace = false;\n    Twig.debug = false;\n\n    // Default caching to true for the improved performance it offers\n    Twig.cache = true;\n\n    Twig.noop = function () {};\n\n    Twig.merge = function (target, source, onlyChanged) {\n        Object.keys(source).forEach(key => {\n            if (onlyChanged && !(key in target)) {\n                return;\n            }\n\n            target[key] = source[key];\n        });\n\n        return target;\n    };\n\n    /**\n     * Exception thrown by twig.js.\n     */\n    Twig.Error = function (message, file) {\n        this.message = message;\n        this.name = 'TwigException';\n        this.type = 'TwigException';\n        this.file = file;\n    };\n\n    /**\n     * Get the string representation of a Twig error.\n     */\n    Twig.Error.prototype.toString = function () {\n        const output = this.name + ': ' + this.message;\n\n        return output;\n    };\n\n    /**\n     * Wrapper for logging to the console.\n     */\n    Twig.log = {\n        trace(...args) {\n            if (Twig.trace && console) {\n                console.log(Array.prototype.slice.call(args));\n            }\n        },\n        debug(...args) {\n            if (Twig.debug && console) {\n                console.log(Array.prototype.slice.call(args));\n            }\n        }\n    };\n\n    if (typeof console === 'undefined') {\n        Twig.log.error = function () {};\n    } else if (typeof console.error !== 'undefined') {\n        Twig.log.error = function (...args) {\n            console.error(...args);\n        };\n    } else if (typeof console.log !== 'undefined') {\n        Twig.log.error = function (...args) {\n            console.log(...args);\n        };\n    }\n\n    /**\n     * Container for methods related to handling high level template tokens\n     *      (for example: {{ expression }}, {% logic %}, {# comment #}, raw data)\n     */\n    Twig.token = {};\n\n    /**\n     * Token types.\n     */\n    Twig.token.type = {\n        output: 'output',\n        logic: 'logic',\n        comment: 'comment',\n        raw: 'raw',\n        outputWhitespacePre: 'output_whitespace_pre',\n        outputWhitespacePost: 'output_whitespace_post',\n        outputWhitespaceBoth: 'output_whitespace_both',\n        logicWhitespacePre: 'logic_whitespace_pre',\n        logicWhitespacePost: 'logic_whitespace_post',\n        logicWhitespaceBoth: 'logic_whitespace_both'\n    };\n\n    /**\n     * Token syntax definitions.\n     */\n    Twig.token.definitions = [\n        {\n            type: Twig.token.type.raw,\n            open: '{% raw %}',\n            close: '{% endraw %}'\n        },\n        {\n            type: Twig.token.type.raw,\n            open: '{% verbatim %}',\n            close: '{% endverbatim %}'\n        },\n        // *Whitespace type tokens*\n        //\n        // These typically take the form `{{- expression -}}` or `{{- expression }}` or `{{ expression -}}`.\n        {\n            type: Twig.token.type.outputWhitespacePre,\n            open: '{{-',\n            close: '}}'\n        },\n        {\n            type: Twig.token.type.outputWhitespacePost,\n            open: '{{',\n            close: '-}}'\n        },\n        {\n            type: Twig.token.type.outputWhitespaceBoth,\n            open: '{{-',\n            close: '-}}'\n        },\n        {\n            type: Twig.token.type.logicWhitespacePre,\n            open: '{%-',\n            close: '%}'\n        },\n        {\n            type: Twig.token.type.logicWhitespacePost,\n            open: '{%',\n            close: '-%}'\n        },\n        {\n            type: Twig.token.type.logicWhitespaceBoth,\n            open: '{%-',\n            close: '-%}'\n        },\n        // *Output type tokens*\n        //\n        // These typically take the form `{{ expression }}`.\n        {\n            type: Twig.token.type.output,\n            open: '{{',\n            close: '}}'\n        },\n        // *Logic type tokens*\n        //\n        // These typically take a form like `{% if expression %}` or `{% endif %}`\n        {\n            type: Twig.token.type.logic,\n            open: '{%',\n            close: '%}'\n        },\n        // *Comment type tokens*\n        //\n        // These take the form `{# anything #}`\n        {\n            type: Twig.token.type.comment,\n            open: '{#',\n            close: '#}'\n        }\n    ];\n\n    /**\n     * What characters start \"strings\" in token definitions. We need this to ignore token close\n     * strings inside an expression.\n     */\n    Twig.token.strings = ['\"', '\\''];\n\n    Twig.token.findStart = function (template) {\n        const output = {\n            position: null,\n            def: null\n        };\n        let closePosition = null;\n        const len = Twig.token.definitions.length;\n        let i;\n        let tokenTemplate;\n        let firstKeyPosition;\n        let closeKeyPosition;\n\n        for (i = 0; i < len; i++) {\n            tokenTemplate = Twig.token.definitions[i];\n            firstKeyPosition = template.indexOf(tokenTemplate.open);\n            closeKeyPosition = template.indexOf(tokenTemplate.close);\n\n            Twig.log.trace('Twig.token.findStart: ', 'Searching for ', tokenTemplate.open, ' found at ', firstKeyPosition);\n\n            // Special handling for mismatched tokens\n            if (firstKeyPosition >= 0) {\n                // This token matches the template\n                if (tokenTemplate.open.length !== tokenTemplate.close.length) {\n                    // This token has mismatched closing and opening tags\n                    if (closeKeyPosition < 0) {\n                        // This token's closing tag does not match the template\n                        continue;\n                    }\n                }\n            }\n            // Does this token occur before any other types?\n\n            if (firstKeyPosition >= 0 && (output.position === null || firstKeyPosition < output.position)) {\n                output.position = firstKeyPosition;\n                output.def = tokenTemplate;\n                closePosition = closeKeyPosition;\n            } else if (firstKeyPosition >= 0 && output.position !== null && firstKeyPosition === output.position) {\n                /* This token exactly matches another token,\n                greedily match to check if this token has a greater specificity */\n                if (tokenTemplate.open.length > output.def.open.length) {\n                    // This token's opening tag is more specific than the previous match\n                    output.position = firstKeyPosition;\n                    output.def = tokenTemplate;\n                    closePosition = closeKeyPosition;\n                } else if (tokenTemplate.open.length === output.def.open.length) {\n                    if (tokenTemplate.close.length > output.def.close.length) {\n                        // This token's opening tag is as specific as the previous match,\n                        // but the closing tag has greater specificity\n                        if (closeKeyPosition >= 0 && closeKeyPosition < closePosition) {\n                            // This token's closing tag exists in the template,\n                            // and it occurs sooner than the previous match\n                            output.position = firstKeyPosition;\n                            output.def = tokenTemplate;\n                            closePosition = closeKeyPosition;\n                        }\n                    } else if (closeKeyPosition >= 0 && closeKeyPosition < closePosition) {\n                        // This token's closing tag is not more specific than the previous match,\n                        // but it occurs sooner than the previous match\n                        output.position = firstKeyPosition;\n                        output.def = tokenTemplate;\n                        closePosition = closeKeyPosition;\n                    }\n                }\n            }\n        }\n\n        return output;\n    };\n\n    Twig.token.findEnd = function (template, tokenDef, start) {\n        let end = null;\n        let found = false;\n        let offset = 0;\n\n        // String position variables\n        let strPos = null;\n        let strFound = null;\n        let pos = null;\n        let endOffset = null;\n        let thisStrPos = null;\n        let endStrPos = null;\n\n        // For loop variables\n        let i;\n        let l;\n\n        while (!found) {\n            strPos = null;\n            strFound = null;\n            pos = template.indexOf(tokenDef.close, offset);\n\n            if (pos >= 0) {\n                end = pos;\n                found = true;\n            } else {\n                // Throw an exception\n                throw new Twig.Error('Unable to find closing bracket \\'' + tokenDef.close +\n                                '\\' opened near template position ' + start);\n            }\n\n            // Ignore quotes within comments; just look for the next comment close sequence,\n            // regardless of what comes before it. https://github.com/justjohn/twig.js/issues/95\n            if (tokenDef.type === Twig.token.type.comment) {\n                break;\n            }\n            // Ignore quotes within raw tag\n            // Fixes #283\n\n            if (tokenDef.type === Twig.token.type.raw) {\n                break;\n            }\n\n            l = Twig.token.strings.length;\n            for (i = 0; i < l; i += 1) {\n                thisStrPos = template.indexOf(Twig.token.strings[i], offset);\n\n                if (thisStrPos > 0 && thisStrPos < pos &&\n                        (strPos === null || thisStrPos < strPos)) {\n                    strPos = thisStrPos;\n                    strFound = Twig.token.strings[i];\n                }\n            }\n\n            // We found a string before the end of the token, now find the string's end and set the search offset to it\n            if (strPos !== null) {\n                endOffset = strPos + 1;\n                end = null;\n                found = false;\n                for (;;) {\n                    endStrPos = template.indexOf(strFound, endOffset);\n                    if (endStrPos < 0) {\n                        throw Twig.Error('Unclosed string in template');\n                    }\n                    // Ignore escaped quotes\n\n                    if (template.slice(endStrPos - 1, endStrPos) === '\\\\') {\n                        endOffset = endStrPos + 1;\n                    } else {\n                        offset = endStrPos + 1;\n                        break;\n                    }\n                }\n            }\n        }\n\n        return end;\n    };\n\n    /**\n     * Convert a template into high-level tokens.\n     */\n    Twig.tokenize = function (template) {\n        const tokens = [];\n        // An offset for reporting errors locations in the template.\n        let errorOffset = 0;\n\n        // The start and type of the first token found in the template.\n        let foundToken = null;\n        // The end position of the matched token.\n        let end = null;\n\n        while (template.length > 0) {\n            // Find the first occurance of any token type in the template\n            foundToken = Twig.token.findStart(template);\n\n            Twig.log.trace('Twig.tokenize: ', 'Found token: ', foundToken);\n\n            if (foundToken.position === null) {\n                // No more tokens -> add the rest of the template as a raw-type token\n                tokens.push({\n                    type: Twig.token.type.raw,\n                    value: template\n                });\n                template = '';\n            } else {\n                // Add a raw type token for anything before the start of the token\n                if (foundToken.position > 0) {\n                    tokens.push({\n                        type: Twig.token.type.raw,\n                        value: template.slice(0, Math.max(0, foundToken.position))\n                    });\n                }\n\n                template = template.slice(foundToken.position + foundToken.def.open.length);\n                errorOffset += foundToken.position + foundToken.def.open.length;\n\n                // Find the end of the token\n                end = Twig.token.findEnd(template, foundToken.def, errorOffset);\n\n                Twig.log.trace('Twig.tokenize: ', 'Token ends at ', end);\n\n                tokens.push({\n                    type: foundToken.def.type,\n                    value: template.slice(0, Math.max(0, end)).trim()\n                });\n\n                if (template.slice(end + foundToken.def.close.length, end + foundToken.def.close.length + 1) === '\\n') {\n                    switch (foundToken.def.type) {\n                        case 'logic_whitespace_pre':\n                        case 'logic_whitespace_post':\n                        case 'logic_whitespace_both':\n                        case 'logic':\n                            // Newlines directly after logic tokens are ignored\n                            end += 1;\n                            break;\n                        default:\n                            break;\n                    }\n                }\n\n                template = template.slice(end + foundToken.def.close.length);\n\n                // Increment the position in the template\n                errorOffset += end + foundToken.def.close.length;\n            }\n        }\n\n        return tokens;\n    };\n\n    Twig.compile = function (tokens) {\n        const self = this;\n        try {\n            // Output and intermediate stacks\n            const output = [];\n            const stack = [];\n            // The tokens between open and close tags\n            let intermediateOutput = [];\n\n            let token = null;\n            let logicToken = null;\n            let unclosedToken = null;\n            // Temporary previous token.\n            let prevToken = null;\n            // Temporary previous output.\n            let prevOutput = null;\n            // Temporary previous intermediate output.\n            let prevIntermediateOutput = null;\n            // The previous token's template\n            let prevTemplate = null;\n            // Token lookahead\n            let nextToken = null;\n            // The output token\n            let tokOutput = null;\n\n            // Logic Token values\n            let type = null;\n            let open = null;\n            let next = null;\n\n            const compileOutput = function (token) {\n                Twig.expression.compile.call(self, token);\n                if (stack.length > 0) {\n                    intermediateOutput.push(token);\n                } else {\n                    output.push(token);\n                }\n            };\n\n            const compileLogic = function (token) {\n                // Compile the logic token\n                logicToken = Twig.logic.compile.call(self, token);\n\n                type = logicToken.type;\n                open = Twig.logic.handler[type].open;\n                next = Twig.logic.handler[type].next;\n\n                Twig.log.trace('Twig.compile: ', 'Compiled logic token to ', logicToken,\n                    ' next is: ', next, ' open is : ', open);\n\n                // Not a standalone token, check logic stack to see if this is expected\n                if (open !== undefined && !open) {\n                    prevToken = stack.pop();\n                    prevTemplate = Twig.logic.handler[prevToken.type];\n\n                    if (!prevTemplate.next.includes(type)) {\n                        throw new Error(type + ' not expected after a ' + prevToken.type);\n                    }\n\n                    prevToken.output = prevToken.output || [];\n\n                    prevToken.output = prevToken.output.concat(intermediateOutput);\n                    intermediateOutput = [];\n\n                    tokOutput = {\n                        type: Twig.token.type.logic,\n                        token: prevToken\n                    };\n                    if (stack.length > 0) {\n                        intermediateOutput.push(tokOutput);\n                    } else {\n                        output.push(tokOutput);\n                    }\n                }\n\n                // This token requires additional tokens to complete the logic structure.\n                if (next !== undefined && next.length > 0) {\n                    Twig.log.trace('Twig.compile: ', 'Pushing ', logicToken, ' to logic stack.');\n\n                    if (stack.length > 0) {\n                        // Put any currently held output into the output list of the logic operator\n                        // currently at the head of the stack before we push a new one on.\n                        prevToken = stack.pop();\n                        prevToken.output = prevToken.output || [];\n                        prevToken.output = prevToken.output.concat(intermediateOutput);\n                        stack.push(prevToken);\n                        intermediateOutput = [];\n                    }\n\n                    // Push the new logic token onto the logic stack\n                    stack.push(logicToken);\n                } else if (open !== undefined && open) {\n                    tokOutput = {\n                        type: Twig.token.type.logic,\n                        token: logicToken\n                    };\n                    // Standalone token (like {% set ... %}\n                    if (stack.length > 0) {\n                        intermediateOutput.push(tokOutput);\n                    } else {\n                        output.push(tokOutput);\n                    }\n                }\n            };\n\n            while (tokens.length > 0) {\n                token = tokens.shift();\n                prevOutput = output[output.length - 1];\n                prevIntermediateOutput = intermediateOutput[intermediateOutput.length - 1];\n                nextToken = tokens[0];\n                Twig.log.trace('Compiling token ', token);\n                switch (token.type) {\n                    case Twig.token.type.raw:\n                        if (stack.length > 0) {\n                            intermediateOutput.push(token);\n                        } else {\n                            output.push(token);\n                        }\n\n                        break;\n\n                    case Twig.token.type.logic:\n                        compileLogic.call(self, token);\n                        break;\n\n                    // Do nothing, comments should be ignored\n                    case Twig.token.type.comment:\n                        break;\n\n                    case Twig.token.type.output:\n                        compileOutput.call(self, token);\n                        break;\n\n                    // Kill whitespace ahead and behind this token\n                    case Twig.token.type.logicWhitespacePre:\n                    case Twig.token.type.logicWhitespacePost:\n                    case Twig.token.type.logicWhitespaceBoth:\n                    case Twig.token.type.outputWhitespacePre:\n                    case Twig.token.type.outputWhitespacePost:\n                    case Twig.token.type.outputWhitespaceBoth:\n                        if (token.type !== Twig.token.type.outputWhitespacePost && token.type !== Twig.token.type.logicWhitespacePost) {\n                            if (prevOutput) {\n                                // If the previous output is raw, pop it off\n                                if (prevOutput.type === Twig.token.type.raw) {\n                                    output.pop();\n\n                                    prevOutput.value = prevOutput.value.trimEnd();\n                                    // Repush the previous output\n                                    output.push(prevOutput);\n                                }\n                            }\n\n                            if (prevIntermediateOutput) {\n                                // If the previous intermediate output is raw, pop it off\n                                if (prevIntermediateOutput.type === Twig.token.type.raw) {\n                                    intermediateOutput.pop();\n\n                                    prevIntermediateOutput.value = prevIntermediateOutput.value.trimEnd();\n                                    // Repush the previous intermediate output\n                                    intermediateOutput.push(prevIntermediateOutput);\n                                }\n                            }\n                        }\n\n                        // Compile this token\n                        switch (token.type) {\n                            case Twig.token.type.outputWhitespacePre:\n                            case Twig.token.type.outputWhitespacePost:\n                            case Twig.token.type.outputWhitespaceBoth:\n                                compileOutput.call(self, token);\n                                break;\n                            case Twig.token.type.logicWhitespacePre:\n                            case Twig.token.type.logicWhitespacePost:\n                            case Twig.token.type.logicWhitespaceBoth:\n                                compileLogic.call(self, token);\n                                break;\n                            default:\n                                break;\n                        }\n\n                        if (token.type !== Twig.token.type.outputWhitespacePre && token.type !== Twig.token.type.logicWhitespacePre) {\n                            if (nextToken) {\n                                // If the next token is raw, shift it out\n                                if (nextToken.type === Twig.token.type.raw) {\n                                    tokens.shift();\n\n                                    nextToken.value = nextToken.value.trimStart();\n                                    // Unshift the next token\n                                    tokens.unshift(nextToken);\n                                }\n                            }\n                        }\n\n                        break;\n                    default:\n                        break;\n                }\n\n                Twig.log.trace('Twig.compile: ', ' Output: ', output,\n                    ' Logic Stack: ', stack,\n                    ' Pending Output: ', intermediateOutput\n                );\n            }\n\n            // Verify that there are no logic tokens left in the stack.\n            if (stack.length > 0) {\n                unclosedToken = stack.pop();\n                throw new Error('Unable to find an end tag for ' + unclosedToken.type +\n                                ', expecting one of ' + unclosedToken.next);\n            }\n\n            return output;\n        } catch (error) {\n            if (self.options.rethrow) {\n                if (error.type === 'TwigException' && !error.file) {\n                    error.file = self.id;\n                }\n\n                throw error;\n            } else {\n                Twig.log.error('Error compiling twig template ' + self.id + ': ');\n                if (error.stack) {\n                    Twig.log.error(error.stack);\n                } else {\n                    Twig.log.error(error.toString());\n                }\n            }\n        }\n    };\n\n    function handleException(state, ex) {\n        if (state.template.options.rethrow) {\n            if (typeof ex === 'string') {\n                ex = new Twig.Error(ex);\n            }\n\n            if (ex.type === 'TwigException' && !ex.file) {\n                ex.file = state.template.id;\n            }\n\n            throw ex;\n        } else {\n            Twig.log.error('Error parsing twig template ' + state.template.id + ': ');\n            if (ex.stack) {\n                Twig.log.error(ex.stack);\n            } else {\n                Twig.log.error(ex.toString());\n            }\n\n            if (Twig.debug) {\n                return ex.toString();\n            }\n        }\n    }\n\n    /**\n     * Tokenize and compile a string template.\n     *\n     * @param {string} data The template.\n     *\n     * @return {Array} The compiled tokens.\n     */\n    Twig.prepare = function (data) {\n        // Tokenize\n        Twig.log.debug('Twig.prepare: ', 'Tokenizing ', data);\n        const rawTokens = Twig.tokenize.call(this, data);\n\n        // Compile\n        Twig.log.debug('Twig.prepare: ', 'Compiling ', rawTokens);\n        const tokens = Twig.compile.call(this, rawTokens);\n\n        Twig.log.debug('Twig.prepare: ', 'Compiled ', tokens);\n\n        return tokens;\n    };\n\n    /**\n     * Join the output token's stack and escape it if needed\n     *\n     * @param {Array} Output token's stack\n     *\n     * @return {string|String} Autoescaped output\n     */\n    Twig.output = function (output) {\n        const {autoescape} = this.options;\n\n        if (!autoescape) {\n            return output.join('');\n        }\n\n        const strategy = (typeof autoescape === 'string') ? autoescape : 'html';\n\n        const escapedOutput = output.map(str => {\n            if (\n                str &&\n                (str.twigMarkup !== true && str.twigMarkup !== strategy) &&\n                !(strategy === 'html' && str.twigMarkup === 'html_attr')\n            ) {\n                str = Twig.filters.escape(str, [strategy]);\n            }\n\n            return str;\n        });\n\n        if (escapedOutput.length === 0) {\n            return '';\n        }\n\n        const joinedOutput = escapedOutput.join('');\n        if (joinedOutput.length === 0) {\n            return '';\n        }\n\n        return new Twig.Markup(joinedOutput, true);\n    };\n\n    // Namespace for template storage and retrieval\n    Twig.Templates = {\n        /**\n         * Registered template loaders - use Twig.Templates.registerLoader to add supported loaders\n         * @type {Object}\n         */\n        loaders: {},\n\n        /**\n         * Registered template parsers - use Twig.Templates.registerParser to add supported parsers\n         * @type {Object}\n         */\n        parsers: {},\n\n        /**\n         * Cached / loaded templates\n         * @type {Object}\n         */\n        registry: {}\n    };\n\n    /**\n     * Is this id valid for a twig template?\n     *\n     * @param {string} id The ID to check.\n     *\n     * @throws {Twig.Error} If the ID is invalid or used.\n     * @return {boolean} True if the ID is valid.\n     */\n    Twig.validateId = function (id) {\n        if (id === 'prototype') {\n            throw new Twig.Error(id + ' is not a valid twig identifier');\n        } else if (Twig.cache && Object.hasOwnProperty.call(Twig.Templates.registry, id)) {\n            throw new Twig.Error('There is already a template with the ID ' + id);\n        }\n\n        return true;\n    };\n\n    /**\n     * Register a template loader\n     *\n     * @example\n     * Twig.extend(function (Twig) {\n     *    Twig.Templates.registerLoader('custom_loader', function (location, params, callback, errorCallback) {\n     *        // ... load the template ...\n     *        params.data = loadedTemplateData;\n     *        // create and return the template\n     *        var template = new Twig.Template(params);\n     *        if (typeof callback === 'function') {\n     *            callback(template);\n     *        }\n     *        return template;\n     *    });\n     * });\n     *\n     * @param {String} methodName The method this loader is intended for (ajax, fs)\n     * @param {Function} func The function to execute when loading the template\n     * @param {Object|undefined} scope Optional scope parameter to bind func to\n     *\n     * @throws Twig.Error\n     *\n     * @return {void}\n     */\n    Twig.Templates.registerLoader = function (methodName, func, scope) {\n        if (typeof func !== 'function') {\n            throw new Twig.Error('Unable to add loader for ' + methodName + ': Invalid function reference given.');\n        }\n\n        if (scope) {\n            func = func.bind(scope);\n        }\n\n        this.loaders[methodName] = func;\n    };\n\n    /**\n     * Remove a registered loader\n     *\n     * @param {String} methodName The method name for the loader you wish to remove\n     *\n     * @return {void}\n     */\n    Twig.Templates.unRegisterLoader = function (methodName) {\n        if (this.isRegisteredLoader(methodName)) {\n            delete this.loaders[methodName];\n        }\n    };\n\n    /**\n     * See if a loader is registered by its method name\n     *\n     * @param {String} methodName The name of the loader you are looking for\n     *\n     * @return {boolean}\n     */\n    Twig.Templates.isRegisteredLoader = function (methodName) {\n        return Object.hasOwnProperty.call(this.loaders, methodName);\n    };\n\n    /**\n     * Register a template parser\n     *\n     * @example\n     * Twig.extend(function (Twig) {\n     *    Twig.Templates.registerParser('custom_parser', function (params) {\n     *        // this template source can be accessed in params.data\n     *        var template = params.data\n     *\n     *        // ... custom process that modifies the template\n     *\n     *        // return the parsed template\n     *        return template;\n     *    });\n     * });\n     *\n     * @param {String} methodName The method this parser is intended for (twig, source)\n     * @param {Function} func The function to execute when parsing the template\n     * @param {Object|undefined} scope Optional scope parameter to bind func to\n     *\n     * @throws Twig.Error\n     *\n     * @return {void}\n     */\n    Twig.Templates.registerParser = function (methodName, func, scope) {\n        if (typeof func !== 'function') {\n            throw new Twig.Error('Unable to add parser for ' + methodName + ': Invalid function regerence given.');\n        }\n\n        if (scope) {\n            func = func.bind(scope);\n        }\n\n        this.parsers[methodName] = func;\n    };\n\n    /**\n     * Remove a registered parser\n     *\n     * @param {String} methodName The method name for the parser you wish to remove\n     *\n     * @return {void}\n     */\n    Twig.Templates.unRegisterParser = function (methodName) {\n        if (this.isRegisteredParser(methodName)) {\n            delete this.parsers[methodName];\n        }\n    };\n\n    /**\n     * See if a parser is registered by its method name\n     *\n     * @param {String} methodName The name of the parser you are looking for\n     *\n     * @return {boolean}\n     */\n    Twig.Templates.isRegisteredParser = function (methodName) {\n        return Object.hasOwnProperty.call(this.parsers, methodName);\n    };\n\n    /**\n     * Save a template object to the store.\n     *\n     * @param {Twig.Template} template   The twig.js template to store.\n     */\n    Twig.Templates.save = function (template) {\n        if (template.id === undefined) {\n            throw new Twig.Error('Unable to save template with no id');\n        }\n\n        Twig.Templates.registry[template.id] = template;\n    };\n\n    /**\n     * Load a previously saved template from the store.\n     *\n     * @param {string} id   The ID of the template to load.\n     *\n     * @return {Twig.Template} A twig.js template stored with the provided ID.\n     */\n    Twig.Templates.load = function (id) {\n        if (!Object.hasOwnProperty.call(Twig.Templates.registry, id)) {\n            return null;\n        }\n\n        return Twig.Templates.registry[id];\n    };\n\n    /**\n     * Load a template from a remote location using AJAX and saves in with the given ID.\n     *\n     * Available parameters:\n     *\n     *      async:       Should the HTTP request be performed asynchronously.\n     *                      Defaults to true.\n     *      method:      What method should be used to load the template\n     *                      (fs or ajax)\n     *      parser:      What method should be used to parse the template\n     *                      (twig or source)\n     *      precompiled: Has the template already been compiled.\n     *\n     * @param {string} location  The remote URL to load as a template.\n     * @param {Object} params The template parameters.\n     * @param {function} callback  A callback triggered when the template finishes loading.\n     * @param {function} errorCallback  A callback triggered if an error occurs loading the template.\n     *\n     *\n     */\n    Twig.Templates.loadRemote = function (location, params, callback, errorCallback) {\n        // Default to the URL so the template is cached.\n        const id = typeof params.id === 'undefined' ? location : params.id;\n        const cached = Twig.Templates.registry[id];\n\n        // Check for existing template\n        if (Twig.cache && typeof cached !== 'undefined') {\n            // A template is already saved with the given id.\n            if (typeof callback === 'function') {\n                callback(cached);\n            }\n            // TODO: if async, return deferred promise\n\n            return cached;\n        }\n\n        // If the parser name hasn't been set, default it to twig\n        params.parser = params.parser || 'twig';\n        params.id = id;\n\n        // Default to async\n        if (typeof params.async === 'undefined') {\n            params.async = true;\n        }\n\n        // Assume 'fs' if the loader is not defined\n        const loader = this.loaders[params.method] || this.loaders.fs;\n        return loader.call(this, location, params, callback, errorCallback);\n    };\n\n    // Determine object type\n    function is(type, obj) {\n        const clas = Object.prototype.toString.call(obj).slice(8, -1);\n        return obj !== undefined && obj !== null && clas === type;\n    }\n\n    /**\n     * A wrapper for template blocks.\n     *\n     * @param  {Twig.Template} The template that the block was originally defined in.\n     * @param  {Object} The compiled block token.\n     */\n    Twig.Block = function (template, token) {\n        this.template = template;\n        this.token = token;\n    };\n\n    /**\n     * Render the block using a specific parse state and context.\n     *\n     * @param  {Twig.ParseState} parseState\n     * @param  {Object} context\n     *\n     * @return {Promise}\n     */\n    Twig.Block.prototype.render = function (parseState, context) {\n        const originalTemplate = parseState.template;\n        let promise;\n\n        parseState.template = this.template;\n\n        if (this.token.expression) {\n            promise = Twig.expression.parseAsync.call(parseState, this.token.output, context);\n        } else {\n            promise = parseState.parseAsync(this.token.output, context);\n        }\n\n        return promise\n            .then(value => {\n                return Twig.expression.parseAsync.call(\n                    parseState,\n                    {\n                        type: Twig.expression.type.string,\n                        value\n                    },\n                    context\n                );\n            })\n            .then(output => {\n                parseState.template = originalTemplate;\n\n                return output;\n            });\n    };\n\n    /**\n     * Holds the state needed to parse a template.\n     *\n     * @param {Twig.Template} template The template that the tokens being parsed are associated with.\n     * @param {Object} blockOverrides Any blocks that should override those defined in the associated template.\n     */\n    Twig.ParseState = function (template, blockOverrides) {\n        this.renderedBlocks = {};\n        this.overrideBlocks = blockOverrides === undefined ? {} : blockOverrides;\n        this.context = {};\n        this.macros = {};\n        this.nestingStack = [];\n        this.template = template;\n    };\n\n    /**\n     * Get a block by its name, resolving in the following order:\n     *     - override blocks specified when initialized (except when excluded)\n     *     - blocks resolved from the associated template\n     *     - blocks resolved from the parent template when extending\n     *\n     * @param {String} name The name of the block to return.\n     * @param {Boolean} checkOnlyInheritedBlocks Whether to skip checking the overrides and associated template, will not skip by default.\n     *\n     * @return {Twig.Block|undefined}\n     */\n    Twig.ParseState.prototype.getBlock = function (name, checkOnlyInheritedBlocks) {\n        let block;\n\n        if (checkOnlyInheritedBlocks !== true) {\n            // Blocks specified when initialized\n            block = this.overrideBlocks[name];\n        }\n\n        if (block === undefined) {\n            // Block defined by the associated template\n            block = this.template.getBlock(name, checkOnlyInheritedBlocks);\n        }\n\n        if (block === undefined && this.template.parentTemplate !== null) {\n            // Block defined in the parent template when extending\n            block = this.template.parentTemplate.getBlock(name);\n        }\n\n        return block;\n    };\n\n    /**\n     * Get all the available blocks, resolving in the following order:\n     *     - override blocks specified when initialized\n     *     - blocks resolved from the associated template\n     *     - blocks resolved from the parent template when extending (except when excluded)\n     *\n     * @param {Boolean} includeParentBlocks Whether to get blocks from the parent template when extending, will always do so by default.\n     *\n     * @return {Object}\n     */\n    Twig.ParseState.prototype.getBlocks = function (includeParentBlocks) {\n        let blocks = {};\n\n        if (includeParentBlocks !== false &&\n            this.template.parentTemplate !== null &&\n            // Prevent infinite loop\n            this.template.parentTemplate !== this.template\n        ) {\n            // Blocks from the parent template when extending\n            blocks = this.template.parentTemplate.getBlocks();\n        }\n\n        blocks = {\n            ...blocks,\n            // Override with any blocks defined within the associated template\n            ...this.template.getBlocks(),\n            // Override with any blocks specified when initialized\n            ...this.overrideBlocks\n        };\n\n        return blocks;\n    };\n\n    /**\n     * Get the closest token of a specific type to the current nest level.\n     *\n     * @param  {String} type  The logic token type\n     *\n     * @return {Object}\n     */\n    Twig.ParseState.prototype.getNestingStackToken = function (type) {\n        let matchingToken;\n\n        this.nestingStack.forEach(token => {\n            if (matchingToken === undefined && token.type === type) {\n                matchingToken = token;\n            }\n        });\n\n        return matchingToken;\n    };\n\n    /**\n     * Parse a set of tokens using the current state.\n     *\n     * @param {Array} tokens The compiled tokens.\n     * @param {Object} context The context to set the state to while parsing.\n     * @param {Boolean} allowAsync Whether to parse asynchronously.\n     * @param {Object} blocks Blocks that should override any defined while parsing.\n     *\n     * @return {String} The rendered tokens.\n     *\n     */\n    Twig.ParseState.prototype.parse = function (tokens, context, allowAsync) {\n        const state = this;\n        let output = [];\n\n        // Store any error that might be thrown by the promise chain.\n        let err = null;\n\n        // This will be set to isAsync if template renders synchronously\n        let isAsync = true;\n        let promise = null;\n        // Track logic chains\n        let chain = true;\n\n        if (context) {\n            state.context = context;\n        }\n\n        /*\n         * Extracted into it's own function such that the function\n         * does not get recreated over and over again in the `forEach`\n         * loop below. This method can be compiled and optimized\n         * a single time instead of being recreated on each iteration.\n         */\n        function outputPush(o) {\n            output.push(o);\n        }\n\n        function parseTokenLogic(logic) {\n            if (typeof logic.chain !== 'undefined') {\n                chain = logic.chain;\n            }\n\n            if (typeof logic.context !== 'undefined') {\n                state.context = logic.context;\n            }\n\n            if (typeof logic.output !== 'undefined') {\n                output.push(logic.output);\n            }\n        }\n\n        promise = Twig.async.forEach(tokens, token => {\n            Twig.log.debug('Twig.ParseState.parse: ', 'Parsing token: ', token);\n\n            switch (token.type) {\n                case Twig.token.type.raw:\n                    output.push(Twig.filters.raw(token.value));\n                    break;\n\n                case Twig.token.type.logic:\n                    return Twig.logic.parseAsync.call(state, token.token /* logicToken */, state.context, chain)\n                        .then(parseTokenLogic);\n                case Twig.token.type.comment:\n                    // Do nothing, comments should be ignored\n                    break;\n\n                // Fall through whitespace to output\n                case Twig.token.type.outputWhitespacePre:\n                case Twig.token.type.outputWhitespacePost:\n                case Twig.token.type.outputWhitespaceBoth:\n                case Twig.token.type.output:\n                    Twig.log.debug('Twig.ParseState.parse: ', 'Output token: ', token.stack);\n                    // Parse the given expression in the given context\n                    return Twig.expression.parseAsync.call(state, token.stack, state.context)\n                        .then(outputPush);\n                default:\n                    break;\n            }\n        }).then(() => {\n            output = Twig.output.call(state.template, output);\n            isAsync = false;\n            return output;\n        }).catch(error => {\n            if (allowAsync) {\n                handleException(state, error);\n            }\n\n            err = error;\n        });\n\n        // If `allowAsync` we will always return a promise since we do not\n        // know in advance if we are going to run asynchronously or not.\n        if (allowAsync) {\n            return promise;\n        }\n\n        // Handle errors here if we fail synchronously.\n        if (err !== null) {\n            return handleException(state, err);\n        }\n\n        // If `allowAsync` is not true we should not allow the user\n        // to use asynchronous functions or filters.\n        if (isAsync) {\n            throw new Twig.Error('You are using Twig.js in sync mode in combination with async extensions.');\n        }\n\n        return output;\n    };\n\n    /**\n     * Create a new twig.js template.\n     *\n     * Parameters: {\n     *      data:   The template, either pre-compiled tokens or a string template\n     *      id:     The name of this template\n     * }\n     *\n     * @param {Object} params The template parameters.\n     */\n    Twig.Template = function (params) {\n        const {data, id, base, path, url, name, method, options} = params;\n\n        // # What is stored in a Twig.Template\n        //\n        // The Twig Template hold several chucks of data.\n        //\n        //     {\n        //          id:     The token ID (if any)\n        //          tokens: The list of tokens that makes up this template.\n        //          base:   The base template (if any)\n        //            options:  {\n        //                Compiler/parser options\n        //\n        //                strict_variables: true/false\n        //                    Should missing variable/keys emit an error message. If false, they default to null.\n        //            }\n        //     }\n        //\n\n        this.base = base;\n        this.blocks = {\n            defined: {},\n            imported: {}\n        };\n        this.id = id;\n        this.method = method;\n        this.name = name;\n        this.options = options;\n        this.parentTemplate = null;\n        this.path = path;\n        this.url = url;\n\n        if (is('String', data)) {\n            this.tokens = Twig.prepare.call(this, data);\n        } else {\n            this.tokens = data;\n        }\n\n        if (id !== undefined) {\n            Twig.Templates.save(this);\n        }\n    };\n\n    /**\n     * Get a block by its name, resolving in the following order:\n     *     - blocks defined in the template itself\n     *     - blocks imported from another template\n     *\n     * @param {String} name The name of the block to return.\n     * @param {Boolean} checkOnlyInheritedBlocks Whether to skip checking the blocks defined in the template itself, will not skip by default.\n     *\n     * @return {Twig.Block|undefined}\n     */\n    Twig.Template.prototype.getBlock = function (name, checkOnlyInheritedBlocks, checkImports = true) {\n        let block;\n\n        if (checkOnlyInheritedBlocks !== true) {\n            block = this.blocks.defined[name];\n        }\n\n        if (checkImports && block === undefined) {\n            block = this.blocks.imported[name];\n        }\n\n        if (block === undefined && this.parentTemplate !== null) {\n            /**\n             * Block defined in the parent template when extending.\n             * This recursion is useful to inherit from ascendants.\n             * But take care of not considering ascendants' {% use %}\n             */\n            block = this.parentTemplate.getBlock(name, checkOnlyInheritedBlocks, checkImports = false);\n        }\n\n        return block;\n    };\n\n    /**\n     * Get all the available blocks, resolving in the following order:\n     *     - blocks defined in the template itself\n     *     - blocks imported from other templates\n     *\n     * @return {Object}\n     */\n    Twig.Template.prototype.getBlocks = function () {\n        let blocks = {};\n\n        blocks = {\n            ...blocks,\n            // Get any blocks imported from other templates\n            ...this.blocks.imported,\n            // Override with any blocks defined within the template itself\n            ...this.blocks.defined\n        };\n\n        return blocks;\n    };\n\n    Twig.Template.prototype.render = function (context, params, allowAsync) {\n        const template = this;\n\n        params = params || {};\n\n        return Twig.async.potentiallyAsync(template, allowAsync, () => {\n            const state = new Twig.ParseState(template, params.blocks);\n\n            return state.parseAsync(template.tokens, context)\n                .then(output => {\n                    let parentTemplate;\n                    let url;\n\n                    if (template.parentTemplate !== null) {\n                        // This template extends another template\n\n                        if (template.options.allowInlineIncludes) {\n                            // The template is provided inline\n                            parentTemplate = Twig.Templates.load(template.parentTemplate);\n\n                            if (parentTemplate) {\n                                parentTemplate.options = template.options;\n                            }\n                        }\n\n                        // Check for the template file via include\n                        if (!parentTemplate) {\n                            url = Twig.path.parsePath(template, template.parentTemplate);\n\n                            parentTemplate = Twig.Templates.loadRemote(url, {\n                                method: template.getLoaderMethod(),\n                                base: template.base,\n                                async: false,\n                                id: url,\n                                options: template.options\n                            });\n                        }\n\n                        template.parentTemplate = parentTemplate;\n\n                        return template.parentTemplate.renderAsync(\n                            state.context,\n                            {\n                                blocks: state.getBlocks(false),\n                                isInclude: true\n                            }\n                        );\n                    }\n\n                    if (params.isInclude === true) {\n                        return output;\n                    }\n\n                    return output.valueOf();\n                });\n        });\n    };\n\n    Twig.Template.prototype.importFile = function (file) {\n        let url = null;\n        let subTemplate;\n        if (!this.url && this.options.allowInlineIncludes) {\n            file = this.path ? Twig.path.parsePath(this, file) : file;\n            subTemplate = Twig.Templates.load(file);\n\n            if (!subTemplate) {\n                subTemplate = Twig.Templates.loadRemote(url, {\n                    id: file,\n                    method: this.getLoaderMethod(),\n                    async: false,\n                    path: file,\n                    options: this.options\n                });\n\n                if (!subTemplate) {\n                    throw new Twig.Error('Unable to find the template ' + file);\n                }\n            }\n\n            subTemplate.options = this.options;\n\n            return subTemplate;\n        }\n\n        url = Twig.path.parsePath(this, file);\n\n        // Load blocks from an external file\n        subTemplate = Twig.Templates.loadRemote(url, {\n            method: this.getLoaderMethod(),\n            base: this.base,\n            async: false,\n            options: this.options,\n            id: url\n        });\n\n        return subTemplate;\n    };\n\n    Twig.Template.prototype.getLoaderMethod = function () {\n        if (this.path) {\n            return 'fs';\n        }\n\n        if (this.url) {\n            return 'ajax';\n        }\n\n        return this.method || 'fs';\n    };\n\n    Twig.Template.prototype.compile = function (options) {\n        // Compile the template into raw JS\n        return Twig.compiler.compile(this, options);\n    };\n\n    /**\n     * Create safe output\n     *\n     * @param {string} Content safe to output\n     *\n     * @return {String} Content wrapped into a String\n     */\n\n    Twig.Markup = function (content, strategy) {\n        if (typeof content !== 'string') {\n            return content;\n        }\n\n        /* eslint-disable no-new-wrappers, unicorn/new-for-builtins */\n        const output = new String(content);\n        /* eslint-enable */\n        output.twigMarkup = (typeof strategy === 'undefined') ? true : strategy;\n\n        return output;\n    };\n\n    return Twig;\n};\n","// ## twig.compiler.js\n//\n// This file handles compiling templates into JS\nmodule.exports = function (Twig) {\n    /**\n     * Namespace for compilation.\n     */\n    Twig.compiler = {\n        module: {}\n    };\n\n    // Compile a Twig Template to output.\n    Twig.compiler.compile = function (template, options) {\n        // Get tokens\n        const tokens = JSON.stringify(template.tokens);\n        const {id} = template;\n        let output = null;\n\n        if (options.module) {\n            if (Twig.compiler.module[options.module] === undefined) {\n                throw new Twig.Error('Unable to find module type ' + options.module);\n            }\n\n            output = Twig.compiler.module[options.module](id, tokens, options.twig);\n        } else {\n            output = Twig.compiler.wrap(id, tokens);\n        }\n\n        return output;\n    };\n\n    Twig.compiler.module = {\n        amd(id, tokens, pathToTwig) {\n            return 'define([\"' + pathToTwig + '\"], function (Twig) {\\n\\tvar twig, templates;\\ntwig = Twig.twig;\\ntemplates = ' + Twig.compiler.wrap(id, tokens) + '\\n\\treturn templates;\\n});';\n        },\n        node(id, tokens) {\n            return 'var twig = require(\"twig\").twig;\\nexports.template = ' + Twig.compiler.wrap(id, tokens);\n        },\n        cjs2(id, tokens, pathToTwig) {\n            return 'module.declare([{ twig: \"' + pathToTwig + '\" }], function (require, exports, module) {\\n\\tvar twig = require(\"twig\").twig;\\n\\texports.template = ' + Twig.compiler.wrap(id, tokens) + '\\n});';\n        }\n    };\n\n    Twig.compiler.wrap = function (id, tokens) {\n        return 'twig({id:\"' + id.replace('\"', '\\\\\"') + '\", data:' + tokens + ', precompiled: true});\\n';\n    };\n\n    return Twig;\n};\n","// ## twig.expression.js\n//\n// This file handles tokenizing, compiling and parsing expressions.\nmodule.exports = function (Twig) {\n    'use strict';\n\n    function parseParams(state, params, context) {\n        if (params) {\n            return Twig.expression.parseAsync.call(state, params, context);\n        }\n\n        return Twig.Promise.resolve(false);\n    }\n\n    /**\n     * Namespace for expression handling.\n     */\n    Twig.expression = { };\n\n    require('./twig.expression.operator')(Twig);\n\n    /**\n     * Reserved word that can't be used as variable names.\n     */\n    Twig.expression.reservedWords = [\n        'true', 'false', 'null', 'TRUE', 'FALSE', 'NULL', '_context', 'and', 'b-and', 'or', 'b-or', 'b-xor', 'in', 'not in', 'if', 'matches', 'starts', 'ends', 'with'\n    ];\n\n    /**\n     * The type of tokens used in expressions.\n     */\n    Twig.expression.type = {\n        comma: 'Twig.expression.type.comma',\n        operator: {\n            unary: 'Twig.expression.type.operator.unary',\n            binary: 'Twig.expression.type.operator.binary'\n        },\n        string: 'Twig.expression.type.string',\n        bool: 'Twig.expression.type.bool',\n        slice: 'Twig.expression.type.slice',\n        array: {\n            start: 'Twig.expression.type.array.start',\n            end: 'Twig.expression.type.array.end'\n        },\n        object: {\n            start: 'Twig.expression.type.object.start',\n            end: 'Twig.expression.type.object.end'\n        },\n        parameter: {\n            start: 'Twig.expression.type.parameter.start',\n            end: 'Twig.expression.type.parameter.end'\n        },\n        subexpression: {\n            start: 'Twig.expression.type.subexpression.start',\n            end: 'Twig.expression.type.subexpression.end'\n        },\n        key: {\n            period: 'Twig.expression.type.key.period',\n            brackets: 'Twig.expression.type.key.brackets'\n        },\n        filter: 'Twig.expression.type.filter',\n        _function: 'Twig.expression.type._function',\n        variable: 'Twig.expression.type.variable',\n        number: 'Twig.expression.type.number',\n        _null: 'Twig.expression.type.null',\n        context: 'Twig.expression.type.context',\n        test: 'Twig.expression.type.test'\n    };\n\n    Twig.expression.set = {\n        // What can follow an expression (in general)\n        operations: [\n            Twig.expression.type.filter,\n            Twig.expression.type.operator.unary,\n            Twig.expression.type.operator.binary,\n            Twig.expression.type.array.end,\n            Twig.expression.type.object.end,\n            Twig.expression.type.parameter.end,\n            Twig.expression.type.subexpression.end,\n            Twig.expression.type.comma,\n            Twig.expression.type.test\n        ],\n        expressions: [\n            Twig.expression.type._function,\n            Twig.expression.type.bool,\n            Twig.expression.type.string,\n            Twig.expression.type.variable,\n            Twig.expression.type.number,\n            Twig.expression.type._null,\n            Twig.expression.type.context,\n            Twig.expression.type.parameter.start,\n            Twig.expression.type.array.start,\n            Twig.expression.type.object.start,\n            Twig.expression.type.subexpression.start,\n            Twig.expression.type.operator.unary\n        ]\n    };\n\n    // Most expressions allow a '.' or '[' after them, so we provide a convenience set\n    Twig.expression.set.operationsExtended = Twig.expression.set.operations.concat([\n        Twig.expression.type.key.period,\n        Twig.expression.type.key.brackets,\n        Twig.expression.type.slice\n    ]);\n\n    // Some commonly used compile and parse functions.\n    Twig.expression.fn = {\n        compile: {\n            push(token, stack, output) {\n                output.push(token);\n            },\n            pushBoth(token, stack, output) {\n                output.push(token);\n                stack.push(token);\n            }\n        },\n        parse: {\n            push(token, stack) {\n                stack.push(token);\n            },\n            pushValue(token, stack) {\n                stack.push(token.value);\n            }\n        }\n    };\n\n    // The regular expressions and compile/parse logic used to match tokens in expressions.\n    //\n    // Properties:\n    //\n    //      type:  The type of expression this matches\n    //\n    //      regex: One or more regular expressions that matche the format of the token.\n    //\n    //      next:  Valid tokens that can occur next in the expression.\n    //\n    // Functions:\n    //\n    //      compile: A function that compiles the raw regular expression match into a token.\n    //\n    //      parse:   A function that parses the compiled token into output.\n    //\n    Twig.expression.definitions = [\n        {\n            type: Twig.expression.type.test,\n            regex: /^is\\s+(not)?\\s*([a-zA-Z_]\\w*(\\s?as)?)/,\n            next: Twig.expression.set.operations.concat([Twig.expression.type.parameter.start]),\n            compile(token, stack, output) {\n                token.filter = token.match[2];\n                token.modifier = token.match[1];\n                delete token.match;\n                delete token.value;\n                output.push(token);\n            },\n            parse(token, stack, context) {\n                const value = stack.pop();\n                const state = this;\n\n                return parseParams(state, token.params, context)\n                    .then(params => {\n                        const result = Twig.test(token.filter, value, params);\n\n                        if (token.modifier === 'not') {\n                            stack.push(!result);\n                        } else {\n                            stack.push(result);\n                        }\n                    });\n            }\n        },\n        {\n            type: Twig.expression.type.comma,\n            // Match a comma\n            regex: /^,/,\n            next: Twig.expression.set.expressions.concat([Twig.expression.type.array.end, Twig.expression.type.object.end]),\n            compile(token, stack, output) {\n                let i = stack.length - 1;\n                let stackToken;\n\n                delete token.match;\n                delete token.value;\n\n                // Pop tokens off the stack until the start of the object\n                for (;i >= 0; i--) {\n                    stackToken = stack.pop();\n                    if (stackToken.type === Twig.expression.type.object.start ||\n                            stackToken.type === Twig.expression.type.parameter.start ||\n                            stackToken.type === Twig.expression.type.array.start) {\n                        stack.push(stackToken);\n                        break;\n                    }\n\n                    output.push(stackToken);\n                }\n\n                output.push(token);\n            }\n        },\n        {\n            /**\n             * Match a number (integer or decimal)\n             */\n            type: Twig.expression.type.number,\n            // Match a number\n            regex: /^-?\\d+(\\.\\d+)?/,\n            next: Twig.expression.set.operations,\n            compile(token, stack, output) {\n                token.value = Number(token.value);\n                output.push(token);\n            },\n            parse: Twig.expression.fn.parse.pushValue\n        },\n        {\n            type: Twig.expression.type.operator.binary,\n            // Match any of ??, ?:, +, *, /, -, %, ~, <, <=, >, >=, !=, ==, **, ?, :, and, b-and, or, b-or, b-xor, in, not in\n            // and, or, in, not in, matches, starts with, ends with can be followed by a space or parenthesis\n            regex: /(^\\?\\?|^\\?:|^(b-and)|^(b-or)|^(b-xor)|^[+\\-~%?]|^[:](?!\\d\\])|^[!=]==?|^[!<>]=?|^\\*\\*?|^\\/\\/?|^(and)[(|\\s+]|^(or)[(|\\s+]|^(in)[(|\\s+]|^(not in)[(|\\s+]|^(matches)|^(starts with)|^(ends with)|^\\.\\.)/,\n            next: Twig.expression.set.expressions,\n            transform(match, tokens) {\n                switch (match[0]) {\n                    case 'and(':\n                    case 'or(':\n                    case 'in(':\n                    case 'not in(':\n                        // Strip off the ( if it exists\n                        tokens[tokens.length - 1].value = match[2];\n                        return match[0];\n                    default:\n                        return '';\n                }\n            },\n            compile(token, stack, output) {\n                delete token.match;\n\n                token.value = token.value.trim();\n                const {value} = token;\n                const operator = Twig.expression.operator.lookup(value, token);\n\n                Twig.log.trace('Twig.expression.compile: ', 'Operator: ', operator, ' from ', value);\n\n                while (stack.length > 0 &&\n                       (stack[stack.length - 1].type === Twig.expression.type.operator.unary || stack[stack.length - 1].type === Twig.expression.type.operator.binary) &&\n                            (\n                                (operator.associativity === Twig.expression.operator.leftToRight &&\n                                 operator.precidence >= stack[stack.length - 1].precidence) ||\n\n                                (operator.associativity === Twig.expression.operator.rightToLeft &&\n                                 operator.precidence > stack[stack.length - 1].precidence)\n                            )\n                ) {\n                    const temp = stack.pop();\n                    output.push(temp);\n                }\n\n                if (value === ':') {\n                    // Check if this is a ternary or object key being set\n                    if (stack[stack.length - 1] && stack[stack.length - 1].value === '?') {\n                        // Continue as normal for a ternary\n                    } else {\n                        // This is not a ternary so we push the token to the output where it can be handled\n                        //   when the assocated object is closed.\n                        const keyToken = output.pop();\n\n                        if (keyToken.type === Twig.expression.type.string ||\n                                keyToken.type === Twig.expression.type.variable) {\n                            token.key = keyToken.value;\n                        } else if (keyToken.type === Twig.expression.type.number) {\n                            // Convert integer keys into string keys\n                            token.key = keyToken.value.toString();\n                        } else if (keyToken.expression &&\n                            (keyToken.type === Twig.expression.type.parameter.end ||\n                            keyToken.type === Twig.expression.type.subexpression.end)) {\n                            token.params = keyToken.params;\n                        } else {\n                            throw new Twig.Error('Unexpected value before \\':\\' of ' + keyToken.type + ' = ' + keyToken.value);\n                        }\n\n                        output.push(token);\n                    }\n                } else {\n                    stack.push(operator);\n                }\n            },\n            parse(token, stack, context) {\n                const state = this;\n\n                if (token.key) {\n                    // Handle ternary ':' operator\n                    stack.push(token);\n                } else if (token.params) {\n                    // Handle \"{(expression):value}\"\n                    return Twig.expression.parseAsync.call(state, token.params, context)\n                        .then(key => {\n                            token.key = key;\n                            stack.push(token);\n\n                            // If we're in a loop, we might need token.params later, especially in this form of \"(expression):value\"\n                            if (!context.loop) {\n                                delete (token.params);\n                            }\n                        });\n                } else {\n                    Twig.expression.operator.parse(token.value, stack);\n                }\n            }\n        },\n        {\n            type: Twig.expression.type.operator.unary,\n            // Match any of not\n            regex: /(^not\\s+)/,\n            next: Twig.expression.set.expressions,\n            compile(token, stack, output) {\n                delete token.match;\n\n                token.value = token.value.trim();\n                const {value} = token;\n                const operator = Twig.expression.operator.lookup(value, token);\n\n                Twig.log.trace('Twig.expression.compile: ', 'Operator: ', operator, ' from ', value);\n\n                while (stack.length > 0 &&\n                       (stack[stack.length - 1].type === Twig.expression.type.operator.unary || stack[stack.length - 1].type === Twig.expression.type.operator.binary) &&\n                            (\n                                (operator.associativity === Twig.expression.operator.leftToRight &&\n                                 operator.precidence >= stack[stack.length - 1].precidence) ||\n\n                                (operator.associativity === Twig.expression.operator.rightToLeft &&\n                                 operator.precidence > stack[stack.length - 1].precidence)\n                            )\n                ) {\n                    const temp = stack.pop();\n                    output.push(temp);\n                }\n\n                stack.push(operator);\n            },\n            parse(token, stack) {\n                Twig.expression.operator.parse(token.value, stack);\n            }\n        },\n        {\n            /**\n             * Match a string. This is anything between a pair of single or double quotes.\n             */\n            type: Twig.expression.type.string,\n            // See: http://blog.stevenlevithan.com/archives/match-quoted-string\n            regex: /^([\"'])(?:(?=(\\\\?))\\2[\\s\\S])*?\\1/,\n            next: Twig.expression.set.operationsExtended,\n            compile(token, stack, output) {\n                let {value} = token;\n                delete token.match;\n\n                // Remove the quotes from the string\n                if (value.slice(0, 1) === '\"') {\n                    value = value.replace('\\\\\"', '\"');\n                } else {\n                    value = value.replace('\\\\\\'', '\\'');\n                }\n\n                token.value = value.slice(1, -1).replace(/\\\\n/g, '\\n').replace(/\\\\r/g, '\\r');\n                Twig.log.trace('Twig.expression.compile: ', 'String value: ', token.value);\n                output.push(token);\n            },\n            parse: Twig.expression.fn.parse.pushValue\n        },\n        {\n            /**\n             * Match a subexpression set start.\n             */\n            type: Twig.expression.type.subexpression.start,\n            regex: /^\\(/,\n            next: Twig.expression.set.expressions.concat([Twig.expression.type.subexpression.end]),\n            compile(token, stack, output) {\n                token.value = '(';\n                output.push(token);\n                stack.push(token);\n            },\n            parse: Twig.expression.fn.parse.push\n        },\n        {\n            /**\n             * Match a subexpression set end.\n             */\n            type: Twig.expression.type.subexpression.end,\n            regex: /^\\)/,\n            next: Twig.expression.set.operationsExtended,\n            validate(match, tokens) {\n                // Iterate back through previous tokens to ensure we follow a subexpression start\n                let i = tokens.length - 1;\n                let foundSubexpressionStart = false;\n                let nextSubexpressionStartInvalid = false;\n                let unclosedParameterCount = 0;\n\n                while (!foundSubexpressionStart && i >= 0) {\n                    const token = tokens[i];\n\n                    foundSubexpressionStart = token.type === Twig.expression.type.subexpression.start;\n\n                    // If we have previously found a subexpression end, then this subexpression start is the start of\n                    // that subexpression, not the subexpression we are searching for\n                    if (foundSubexpressionStart && nextSubexpressionStartInvalid) {\n                        nextSubexpressionStartInvalid = false;\n                        foundSubexpressionStart = false;\n                    }\n\n                    // Count parameter tokens to ensure we dont return truthy for a parameter opener\n                    if (token.type === Twig.expression.type.parameter.start) {\n                        unclosedParameterCount++;\n                    } else if (token.type === Twig.expression.type.parameter.end) {\n                        unclosedParameterCount--;\n                    } else if (token.type === Twig.expression.type.subexpression.end) {\n                        nextSubexpressionStartInvalid = true;\n                    }\n\n                    i--;\n                }\n\n                // If we found unclosed parameters, return false\n                // If we didnt find subexpression start, return false\n                // Otherwise return true\n\n                return (foundSubexpressionStart && (unclosedParameterCount === 0));\n            },\n            compile(token, stack, output) {\n                // This is basically a copy of parameter end compilation\n                let stackToken;\n                const endToken = token;\n\n                stackToken = stack.pop();\n                while (stack.length > 0 && stackToken.type !== Twig.expression.type.subexpression.start) {\n                    output.push(stackToken);\n                    stackToken = stack.pop();\n                }\n\n                // Move contents of parens into preceding filter\n                const paramStack = [];\n                while (token.type !== Twig.expression.type.subexpression.start) {\n                    // Add token to arguments stack\n                    paramStack.unshift(token);\n                    token = output.pop();\n                }\n\n                paramStack.unshift(token);\n\n                // If the token at the top of the *stack* is a function token, pop it onto the output queue.\n                // Get the token preceding the parameters\n                stackToken = stack[stack.length - 1];\n\n                if (stackToken === undefined ||\n                    (stackToken.type !== Twig.expression.type._function &&\n                    stackToken.type !== Twig.expression.type.filter &&\n                    stackToken.type !== Twig.expression.type.test &&\n                    stackToken.type !== Twig.expression.type.key.brackets)) {\n                    endToken.expression = true;\n\n                    // Remove start and end token from stack\n                    paramStack.pop();\n                    paramStack.shift();\n\n                    endToken.params = paramStack;\n\n                    output.push(endToken);\n                } else {\n                    // This should never be hit\n                    endToken.expression = false;\n                    stackToken.params = paramStack;\n                }\n            },\n            parse(token, stack, context) {\n                const state = this;\n\n                if (token.expression) {\n                    return Twig.expression.parseAsync.call(state, token.params, context)\n                        .then(value => {\n                            stack.push(value);\n                        });\n                }\n\n                throw new Twig.Error('Unexpected subexpression end when token is not marked as an expression');\n            }\n        },\n        {\n            /**\n             * Match a parameter set start.\n             */\n            type: Twig.expression.type.parameter.start,\n            regex: /^\\(/,\n            next: Twig.expression.set.expressions.concat([Twig.expression.type.parameter.end]),\n            validate(match, tokens) {\n                const lastToken = tokens[tokens.length - 1];\n                // We can't use the regex to test if we follow a space because expression is trimmed\n                return lastToken && (!Twig.expression.reservedWords.includes(lastToken.value.trim()));\n            },\n            compile: Twig.expression.fn.compile.pushBoth,\n            parse: Twig.expression.fn.parse.push\n        },\n        {\n            /**\n             * Match a parameter set end.\n             */\n            type: Twig.expression.type.parameter.end,\n            regex: /^\\)/,\n            next: Twig.expression.set.operationsExtended,\n            compile(token, stack, output) {\n                let stackToken;\n                const endToken = token;\n\n                stackToken = stack.pop();\n                while (stack.length > 0 && stackToken.type !== Twig.expression.type.parameter.start) {\n                    output.push(stackToken);\n                    stackToken = stack.pop();\n                }\n\n                // Move contents of parens into preceding filter\n                const paramStack = [];\n                while (token.type !== Twig.expression.type.parameter.start) {\n                    // Add token to arguments stack\n                    paramStack.unshift(token);\n                    token = output.pop();\n                }\n\n                paramStack.unshift(token);\n\n                // Get the token preceding the parameters\n                token = output[output.length - 1];\n\n                if (token === undefined ||\n                    (token.type !== Twig.expression.type._function &&\n                    token.type !== Twig.expression.type.filter &&\n                    token.type !== Twig.expression.type.test &&\n                    token.type !== Twig.expression.type.key.brackets)) {\n                    endToken.expression = true;\n\n                    // Remove start and end token from stack\n                    paramStack.pop();\n                    paramStack.shift();\n\n                    endToken.params = paramStack;\n\n                    output.push(endToken);\n                } else {\n                    endToken.expression = false;\n                    token.params = paramStack;\n                }\n            },\n            parse(token, stack, context) {\n                const newArray = [];\n                let arrayEnded = false;\n                let value = null;\n                const state = this;\n\n                if (token.expression) {\n                    return Twig.expression.parseAsync.call(state, token.params, context)\n                        .then(value => {\n                            stack.push(value);\n                        });\n                }\n\n                while (stack.length > 0) {\n                    value = stack.pop();\n                    // Push values into the array until the start of the array\n                    if (value && value.type && value.type === Twig.expression.type.parameter.start) {\n                        arrayEnded = true;\n                        break;\n                    }\n\n                    newArray.unshift(value);\n                }\n\n                if (!arrayEnded) {\n                    throw new Twig.Error('Expected end of parameter set.');\n                }\n\n                stack.push(newArray);\n            }\n        },\n        {\n            type: Twig.expression.type.slice,\n            regex: /^\\[(\\d*:\\d*)\\]/,\n            next: Twig.expression.set.operationsExtended,\n            compile(token, stack, output) {\n                const sliceRange = token.match[1].split(':');\n\n                // SliceStart can be undefined when we pass parameters to the slice filter later\n                const sliceStart = (sliceRange[0]) ? parseInt(sliceRange[0], 10) : undefined;\n                const sliceEnd = (sliceRange[1]) ? parseInt(sliceRange[1], 10) : undefined;\n\n                token.value = 'slice';\n                token.params = [sliceStart, sliceEnd];\n\n                // SliceEnd can't be undefined as the slice filter doesn't check for this, but it does check the length\n                // of the params array, so just shorten it.\n                if (!sliceEnd) {\n                    token.params = [sliceStart];\n                }\n\n                output.push(token);\n            },\n            parse(token, stack) {\n                const input = stack.pop();\n                const {params} = token;\n                const state = this;\n\n                stack.push(Twig.filter.call(state, token.value, input, params));\n            }\n        },\n        {\n            /**\n             * Match an array start.\n             */\n            type: Twig.expression.type.array.start,\n            regex: /^\\[/,\n            next: Twig.expression.set.expressions.concat([Twig.expression.type.array.end]),\n            compile: Twig.expression.fn.compile.pushBoth,\n            parse: Twig.expression.fn.parse.push\n        },\n        {\n            /**\n             * Match an array end.\n             */\n            type: Twig.expression.type.array.end,\n            regex: /^\\]/,\n            next: Twig.expression.set.operationsExtended,\n            compile(token, stack, output) {\n                let i = stack.length - 1;\n                let stackToken;\n                // Pop tokens off the stack until the start of the object\n                for (;i >= 0; i--) {\n                    stackToken = stack.pop();\n                    if (stackToken.type === Twig.expression.type.array.start) {\n                        break;\n                    }\n\n                    output.push(stackToken);\n                }\n\n                output.push(token);\n            },\n            parse(token, stack) {\n                const newArray = [];\n                let arrayEnded = false;\n                let value = null;\n\n                while (stack.length > 0) {\n                    value = stack.pop();\n                    // Push values into the array until the start of the array\n                    if (value && value.type && value.type === Twig.expression.type.array.start) {\n                        arrayEnded = true;\n                        break;\n                    }\n\n                    newArray.unshift(value);\n                }\n\n                if (!arrayEnded) {\n                    throw new Twig.Error('Expected end of array.');\n                }\n\n                stack.push(newArray);\n            }\n        },\n        // Token that represents the start of a hash map '}'\n        //\n        // Hash maps take the form:\n        //    { \"key\": 'value', \"another_key\": item }\n        //\n        // Keys must be quoted (either single or double) and values can be any expression.\n        {\n            type: Twig.expression.type.object.start,\n            regex: /^\\{/,\n            next: Twig.expression.set.expressions.concat([Twig.expression.type.object.end]),\n            compile: Twig.expression.fn.compile.pushBoth,\n            parse: Twig.expression.fn.parse.push\n        },\n\n        // Token that represents the end of a Hash Map '}'\n        //\n        // This is where the logic for building the internal\n        // representation of a hash map is defined.\n        {\n            type: Twig.expression.type.object.end,\n            regex: /^\\}/,\n            next: Twig.expression.set.operationsExtended,\n            compile(token, stack, output) {\n                let i = stack.length - 1;\n                let stackToken;\n\n                // Pop tokens off the stack until the start of the object\n                for (;i >= 0; i--) {\n                    stackToken = stack.pop();\n                    if (stackToken && stackToken.type === Twig.expression.type.object.start) {\n                        break;\n                    }\n\n                    output.push(stackToken);\n                }\n\n                output.push(token);\n            },\n            parse(endToken, stack) {\n                const newObject = {};\n                let objectEnded = false;\n                let token = null;\n                let hasValue = false;\n                let value = null;\n\n                while (stack.length > 0) {\n                    token = stack.pop();\n                    // Push values into the array until the start of the object\n                    if (token && token.type && token.type === Twig.expression.type.object.start) {\n                        objectEnded = true;\n                        break;\n                    }\n\n                    if (token && token.type && (token.type === Twig.expression.type.operator.binary || token.type === Twig.expression.type.operator.unary) && token.key) {\n                        if (!hasValue) {\n                            throw new Twig.Error('Missing value for key \\'' + token.key + '\\' in object definition.');\n                        }\n\n                        newObject[token.key] = value;\n\n                        // Preserve the order that elements are added to the map\n                        // This is necessary since JavaScript objects don't\n                        // guarantee the order of keys\n                        if (newObject._keys === undefined) {\n                            newObject._keys = [];\n                        }\n\n                        newObject._keys.unshift(token.key);\n\n                        // Reset value check\n                        value = null;\n                        hasValue = false;\n                    } else {\n                        hasValue = true;\n                        value = token;\n                    }\n                }\n\n                if (!objectEnded) {\n                    throw new Twig.Error('Unexpected end of object.');\n                }\n\n                stack.push(newObject);\n            }\n        },\n\n        // Token representing a filter\n        //\n        // Filters can follow any expression and take the form:\n        //    expression|filter(optional, args)\n        //\n        // Filter parsing is done in the Twig.filters namespace.\n        {\n            type: Twig.expression.type.filter,\n            // Match a | then a letter or _, then any number of letters, numbers, _ or -\n            regex: /^\\|\\s?([a-zA-Z_][a-zA-Z0-9_-]*)/,\n            next: Twig.expression.set.operationsExtended.concat([\n                Twig.expression.type.parameter.start\n            ]),\n            compile(token, stack, output) {\n                token.value = token.match[1];\n                output.push(token);\n            },\n            parse(token, stack, context) {\n                const input = stack.pop();\n                const state = this;\n\n                return parseParams(state, token.params, context)\n                    .then(params => {\n                        return Twig.filter.call(state, token.value, input, params);\n                    })\n                    .then(value => {\n                        stack.push(value);\n                    });\n            }\n        },\n        {\n            type: Twig.expression.type._function,\n            // Match any letter or _, then any number of letters, numbers, _ or - followed by (\n            regex: /^([a-zA-Z_]\\w*)\\s*\\(/,\n            next: Twig.expression.type.parameter.start,\n            validate(match) {\n                // Make sure this function is not a reserved word\n                return match[1] && (!Twig.expression.reservedWords.includes(match[1]));\n            },\n            transform() {\n                return '(';\n            },\n            compile(token, stack, output) {\n                const fn = token.match[1];\n                token.fn = fn;\n                // Cleanup token\n                delete token.match;\n                delete token.value;\n\n                output.push(token);\n            },\n            parse(token, stack, context) {\n                const state = this;\n                const {fn} = token;\n                let value;\n\n                return parseParams(state, token.params, context)\n                    .then(params => {\n                        if (Twig.functions[fn]) {\n                        // Get the function from the built-in functions\n                            value = Twig.functions[fn].apply(state, params);\n                        } else if (typeof context[fn] === 'function') {\n                        // Get the function from the user/context defined functions\n                            value = context[fn](...params);\n                        } else {\n                            throw new Twig.Error(fn + ' function does not exist and is not defined in the context');\n                        }\n\n                        return value;\n                    })\n                    .then(result => {\n                        stack.push(result);\n                    });\n            }\n        },\n\n        // Token representing a variable.\n        //\n        // Variables can contain letters, numbers, underscores and\n        // dashes, but must start with a letter or underscore.\n        //\n        // Variables are retrieved from the render context and take\n        // the value of 'undefined' if the given variable doesn't\n        // exist in the context.\n        {\n            type: Twig.expression.type.variable,\n            // Match any letter or _, then any number of letters, numbers, _ or -\n            regex: /^[a-zA-Z_]\\w*/,\n            next: Twig.expression.set.operationsExtended.concat([\n                Twig.expression.type.parameter.start\n            ]),\n            compile: Twig.expression.fn.compile.push,\n            validate(match) {\n                return (!Twig.expression.reservedWords.includes(match[0]));\n            },\n            parse(token, stack, context) {\n                const state = this;\n\n                // Get the variable from the context\n                return Twig.expression.resolveAsync.call(state, context[token.value], context)\n                    .then(value => {\n                        if (state.template.options.strictVariables && value === undefined) {\n                            throw new Twig.Error('Variable \"' + token.value + '\" does not exist.');\n                        }\n\n                        stack.push(value);\n                    });\n            }\n        },\n        {\n            type: Twig.expression.type.key.period,\n            regex: /^\\.(\\w+)/,\n            next: Twig.expression.set.operationsExtended.concat([\n                Twig.expression.type.parameter.start\n            ]),\n            compile(token, stack, output) {\n                token.key = token.match[1];\n                delete token.match;\n                delete token.value;\n\n                output.push(token);\n            },\n            parse(token, stack, context, nextToken) {\n                const state = this;\n                const {key} = token;\n                const object = stack.pop();\n                let value;\n\n                if (object && !Object.prototype.hasOwnProperty.call(object, key) && state.template.options.strictVariables) {\n                    const keys = Object.keys(object);\n                    if (keys.length > 0) {\n                        throw new Twig.Error('Key \"' + key + '\" for object with keys \"' + Object.keys(object).join(', ') + '\" does not exist.');\n                    } else {\n                        throw new Twig.Error('Key \"' + key + '\" does not exist as the object is empty.');\n                    }\n                }\n\n                return parseParams(state, token.params, context)\n                    .then(params => {\n                        if (object === null || object === undefined) {\n                            value = undefined;\n                        } else {\n                            const capitalize = function (value) {\n                                return value.slice(0, 1).toUpperCase() + value.slice(1);\n                            };\n\n                            // Get the variable from the context\n                            if (typeof object === 'object' && key in object) {\n                                value = object[key];\n                            } else if (object['get' + capitalize(key)]) {\n                                value = object['get' + capitalize(key)];\n                            } else if (object['is' + capitalize(key)]) {\n                                value = object['is' + capitalize(key)];\n                            } else {\n                                value = undefined;\n                            }\n                        }\n\n                        // When resolving an expression we need to pass nextToken in case the expression is a function\n                        return Twig.expression.resolveAsync.call(state, value, context, params, nextToken, object);\n                    })\n                    .then(result => {\n                        stack.push(result);\n                    });\n            }\n        },\n        {\n            type: Twig.expression.type.key.brackets,\n            regex: /^\\[([^\\]:]*)\\]/,\n            next: Twig.expression.set.operationsExtended.concat([\n                Twig.expression.type.parameter.start\n            ]),\n            compile(token, stack, output) {\n                const match = token.match[1];\n                delete token.value;\n                delete token.match;\n\n                // The expression stack for the key\n                token.stack = Twig.expression.compile({\n                    value: match\n                }).stack;\n\n                output.push(token);\n            },\n            parse(token, stack, context, nextToken) {\n                // Evaluate key\n                const state = this;\n                let params = null;\n                let object;\n                let value;\n\n                return parseParams(state, token.params, context)\n                    .then(parameters => {\n                        params = parameters;\n                        return Twig.expression.parseAsync.call(state, token.stack, context);\n                    })\n                    .then(key => {\n                        object = stack.pop();\n\n                        if (object && !Object.prototype.hasOwnProperty.call(object, key) && state.template.options.strictVariables) {\n                            const keys = Object.keys(object);\n                            if (keys.length > 0) {\n                                throw new Twig.Error('Key \"' + key + '\" for array with keys \"' + keys.join(', ') + '\" does not exist.');\n                            } else {\n                                throw new Twig.Error('Key \"' + key + '\" does not exist as the array is empty.');\n                            }\n                        } else if (object === null || object === undefined) {\n                            return null;\n                        }\n\n                        // Get the variable from the context\n                        if (typeof object === 'object' && key in object) {\n                            value = object[key];\n                        } else {\n                            value = null;\n                        }\n\n                        // When resolving an expression we need to pass nextToken in case the expression is a function\n                        return Twig.expression.resolveAsync.call(state, value, object, params, nextToken);\n                    })\n                    .then(result => {\n                        stack.push(result);\n                    });\n            }\n        },\n        {\n            /**\n             * Match a null value.\n             */\n            type: Twig.expression.type._null,\n            // Match a number\n            regex: /^(null|NULL|none|NONE)/,\n            next: Twig.expression.set.operations,\n            compile(token, stack, output) {\n                delete token.match;\n                token.value = null;\n                output.push(token);\n            },\n            parse: Twig.expression.fn.parse.pushValue\n        },\n        {\n            /**\n             * Match the context\n             */\n            type: Twig.expression.type.context,\n            regex: /^_context/,\n            next: Twig.expression.set.operationsExtended.concat([\n                Twig.expression.type.parameter.start\n            ]),\n            compile: Twig.expression.fn.compile.push,\n            parse(token, stack, context) {\n                stack.push(context);\n            }\n        },\n        {\n            /**\n             * Match a boolean\n             */\n            type: Twig.expression.type.bool,\n            regex: /^(true|TRUE|false|FALSE)/,\n            next: Twig.expression.set.operations,\n            compile(token, stack, output) {\n                token.value = (token.match[0].toLowerCase() === 'true');\n                delete token.match;\n                output.push(token);\n            },\n            parse: Twig.expression.fn.parse.pushValue\n        }\n    ];\n\n    /**\n     * Resolve a context value.\n     *\n     * If the value is a function, it is executed with a context parameter.\n     *\n     * @param {string} key The context object key.\n     * @param {Object} context The render context.\n     */\n    Twig.expression.resolveAsync = function (value, context, params, nextToken, object) {\n        const state = this;\n\n        if (typeof value !== 'function') {\n            return Twig.Promise.resolve(value);\n        }\n\n        let promise = Twig.Promise.resolve(params);\n\n        /*\n        If value is a function, it will have been impossible during the compile stage to determine that a following\n        set of parentheses were parameters for this function.\n\n        Those parentheses will have therefore been marked as an expression, with their own parameters, which really\n        belong to this function.\n\n        Those parameters will also need parsing in case they are actually an expression to pass as parameters.\n            */\n        if (nextToken && nextToken.type === Twig.expression.type.parameter.end) {\n            // When parsing these parameters, we need to get them all back, not just the last item on the stack.\n            const tokensAreParameters = true;\n\n            promise = promise.then(() => {\n                return nextToken.params && Twig.expression.parseAsync.call(state, nextToken.params, context, tokensAreParameters);\n            })\n                .then(p => {\n                // Clean up the parentheses tokens on the next loop\n                    nextToken.cleanup = true;\n\n                    return p;\n                });\n        }\n\n        return promise.then(params => {\n            return value.apply(object || context, params || []);\n        });\n    };\n\n    Twig.expression.resolve = function (value, context, params, nextToken, object) {\n        return Twig.async.potentiallyAsync(this, false, function () {\n            return Twig.expression.resolveAsync.call(this, value, context, params, nextToken, object);\n        });\n    };\n\n    /**\n     * Registry for logic handlers.\n     */\n    Twig.expression.handler = {};\n\n    /**\n     * Define a new expression type, available at Twig.logic.type.{type}\n     *\n     * @param {string} type The name of the new type.\n     */\n    Twig.expression.extendType = function (type) {\n        Twig.expression.type[type] = 'Twig.expression.type.' + type;\n    };\n\n    /**\n     * Extend the expression parsing functionality with a new definition.\n     *\n     * Token definitions follow this format:\n     *  {\n     *      type:     One of Twig.expression.type.[type], either pre-defined or added using\n     *                    Twig.expression.extendType\n     *\n     *      next:     Array of types from Twig.expression.type that can follow this token,\n     *\n     *      regex:    A regex or array of regex's that should match the token.\n     *\n     *      compile: function(token, stack, output) called when this token is being compiled.\n     *                   Should return an object with stack and output set.\n     *\n     *      parse:   function(token, stack, context) called when this token is being parsed.\n     *                   Should return an object with stack and context set.\n     *  }\n     *\n     * @param {Object} definition A token definition.\n     */\n    Twig.expression.extend = function (definition) {\n        if (!definition.type) {\n            throw new Twig.Error('Unable to extend logic definition. No type provided for ' + definition);\n        }\n\n        Twig.expression.handler[definition.type] = definition;\n    };\n\n    // Extend with built-in expressions\n    while (Twig.expression.definitions.length > 0) {\n        Twig.expression.extend(Twig.expression.definitions.shift());\n    }\n\n    /**\n     * Break an expression into tokens defined in Twig.expression.definitions.\n     *\n     * @param {string} expression The string to tokenize.\n     *\n     * @return {Array} An array of tokens.\n     */\n    Twig.expression.tokenize = function (expression) {\n        const tokens = [];\n        // Keep an offset of the location in the expression for error messages.\n        let expOffset = 0;\n        // The valid next tokens of the previous token\n        let next = null;\n        // Match information\n        let type;\n        let regex;\n        let regexI;\n        // The possible next token for the match\n        let tokenNext;\n        // Has a match been found from the definitions\n        let matchFound;\n        let invalidMatches = [];\n\n        const matchFunction = function (...args) {\n            // Don't pass arguments to `Array.slice`, that is a performance killer\n            let matchI = arguments.length - 2;\n            const match = new Array(matchI);\n\n            while (matchI-- > 0) {\n                match[matchI] = args[matchI];\n            }\n\n            Twig.log.trace('Twig.expression.tokenize',\n                'Matched a ', type, ' regular expression of ', match);\n\n            if (next && !next.includes(type)) {\n                invalidMatches.push(\n                    type + ' cannot follow a ' + tokens[tokens.length - 1].type +\n                           ' at template:' + expOffset + ' near \\'' + match[0].slice(0, 20) +\n                           '...\\''\n                );\n\n                // Not a match, don't change the expression\n                return match[0];\n            }\n\n            const handler = Twig.expression.handler[type];\n\n            // Validate the token if a validation function is provided\n            if (handler.validate && !handler.validate(match, tokens)) {\n                return match[0];\n            }\n\n            invalidMatches = [];\n\n            tokens.push({\n                type,\n                value: match[0],\n                match\n            });\n\n            matchFound = true;\n            next = tokenNext;\n            expOffset += match[0].length;\n\n            // Does the token need to return output back to the expression string\n            // e.g. a function match of cycle( might return the '(' back to the expression\n            // This allows look-ahead to differentiate between token types (e.g. functions and variable names)\n            if (handler.transform) {\n                return handler.transform(match, tokens);\n            }\n\n            return '';\n        };\n\n        Twig.log.debug('Twig.expression.tokenize', 'Tokenizing expression ', expression);\n\n        while (expression.length > 0) {\n            expression = expression.trim();\n            for (type in Twig.expression.handler) {\n                if (Object.hasOwnProperty.call(Twig.expression.handler, type)) {\n                    tokenNext = Twig.expression.handler[type].next;\n                    regex = Twig.expression.handler[type].regex;\n                    Twig.log.trace('Checking type ', type, ' on ', expression);\n\n                    matchFound = false;\n\n                    if (Array.isArray(regex)) {\n                        regexI = regex.length;\n                        while (regexI-- > 0) {\n                            expression = expression.replace(regex[regexI], matchFunction);\n                        }\n                    } else {\n                        expression = expression.replace(regex, matchFunction);\n                    }\n\n                    // An expression token has been matched. Break the for loop and start trying to\n                    //  match the next template (if expression isn't empty.)\n                    if (matchFound) {\n                        break;\n                    }\n                }\n            }\n\n            if (!matchFound) {\n                if (invalidMatches.length > 0) {\n                    throw new Twig.Error(invalidMatches.join(' OR '));\n                } else {\n                    throw new Twig.Error('Unable to parse \\'' + expression + '\\' at template position' + expOffset);\n                }\n            }\n        }\n\n        Twig.log.trace('Twig.expression.tokenize', 'Tokenized to ', tokens);\n        return tokens;\n    };\n\n    /**\n     * Compile an expression token.\n     *\n     * @param {Object} rawToken The uncompiled token.\n     *\n     * @return {Object} The compiled token.\n     */\n    Twig.expression.compile = function (rawToken) {\n        const expression = rawToken.value;\n        // Tokenize expression\n        const tokens = Twig.expression.tokenize(expression);\n        let token = null;\n        const output = [];\n        const stack = [];\n        let tokenTemplate = null;\n\n        Twig.log.trace('Twig.expression.compile: ', 'Compiling ', expression);\n\n        // Push tokens into RPN stack using the Shunting-yard algorithm\n        // See http://en.wikipedia.org/wiki/Shunting_yard_algorithm\n\n        while (tokens.length > 0) {\n            token = tokens.shift();\n            tokenTemplate = Twig.expression.handler[token.type];\n\n            Twig.log.trace('Twig.expression.compile: ', 'Compiling ', token);\n\n            // Compile the template\n            tokenTemplate.compile(token, stack, output);\n\n            Twig.log.trace('Twig.expression.compile: ', 'Stack is', stack);\n            Twig.log.trace('Twig.expression.compile: ', 'Output is', output);\n        }\n\n        while (stack.length > 0) {\n            output.push(stack.pop());\n        }\n\n        Twig.log.trace('Twig.expression.compile: ', 'Final output is', output);\n\n        rawToken.stack = output;\n        delete rawToken.value;\n\n        return rawToken;\n    };\n\n    /**\n     * Parse an RPN expression stack within a context.\n     *\n     * @param {Array} tokens An array of compiled expression tokens.\n     * @param {Object} context The render context to parse the tokens with.\n     *\n     * @return {Object} The result of parsing all the tokens. The result\n     *                  can be anything, String, Array, Object, etc... based on\n     *                  the given expression.\n     */\n    Twig.expression.parse = function (tokens, context, tokensAreParameters, allowAsync) {\n        const state = this;\n\n        // If the token isn't an array, make it one.\n        if (!Array.isArray(tokens)) {\n            tokens = [tokens];\n        }\n\n        // The output stack\n        const stack = [];\n        const loopTokenFixups = [];\n        const binaryOperator = Twig.expression.type.operator.binary;\n\n        return Twig.async.potentiallyAsync(state, allowAsync, () => {\n            return Twig.async.forEach(tokens, (token, index) => {\n                let tokenTemplate = null;\n                let nextToken = null;\n                let result;\n\n                // If the token is marked for cleanup, we don't need to parse it\n                if (token.cleanup) {\n                    return;\n                }\n\n                // Determine the token that follows this one so that we can pass it to the parser\n                if (tokens.length > index + 1) {\n                    nextToken = tokens[index + 1];\n                }\n\n                tokenTemplate = Twig.expression.handler[token.type];\n\n                if (tokenTemplate.parse) {\n                    result = tokenTemplate.parse.call(state, token, stack, context, nextToken);\n                }\n\n                // Store any binary tokens for later if we are in a loop.\n                if (token.type === binaryOperator && context.loop) {\n                    loopTokenFixups.push(token);\n                }\n\n                return result;\n            })\n                .then(() => {\n                // Check every fixup and remove \"key\" as long as they still have \"params\". This covers the use case where\n                // a \":\" operator is used in a loop with a \"(expression):\" statement. We need to be able to evaluate the expression\n                    let len = loopTokenFixups.length;\n                    let loopTokenFixup = null;\n\n                    while (len-- > 0) {\n                        loopTokenFixup = loopTokenFixups[len];\n                        if (loopTokenFixup.params && loopTokenFixup.key) {\n                            delete loopTokenFixup.key;\n                        }\n                    }\n\n                    // If parse has been called with a set of tokens that are parameters, we need to return the whole stack,\n                    // wrapped in an Array.\n                    if (tokensAreParameters) {\n                        const params = stack.splice(0);\n\n                        stack.push(params);\n                    }\n\n                    // Pop the final value off the stack\n                    return stack.pop();\n                });\n        });\n    };\n\n    return Twig;\n};\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","// ## twig.expression.operator.js\n//\n// This file handles operator lookups and parsing.\nmodule.exports = function (Twig) {\n    'use strict';\n\n    /**\n     * Operator associativity constants.\n     */\n    Twig.expression.operator = {\n        leftToRight: 'leftToRight',\n        rightToLeft: 'rightToLeft'\n    };\n\n    const containment = function (a, b) {\n        if (b === undefined || b === null) {\n            return null;\n        }\n\n        if (b.indexOf !== undefined) {\n            // String\n            return (a === b || a !== '') && b.includes(a);\n        }\n\n        let el;\n        for (el in b) {\n            if (Object.hasOwnProperty.call(b, el) && b[el] === a) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n\n    /**\n     * Get the precidence and associativity of an operator. These follow the order that C/C++ use.\n     * See http://en.wikipedia.org/wiki/Operators_in_C_and_C++ for the table of values.\n     */\n    Twig.expression.operator.lookup = function (operator, token) {\n        switch (operator) {\n            case '..':\n                token.precidence = 20;\n                token.associativity = Twig.expression.operator.leftToRight;\n                break;\n\n            case ',':\n                token.precidence = 18;\n                token.associativity = Twig.expression.operator.leftToRight;\n                break;\n\n            // Ternary\n            case '?:':\n            case '?':\n            case ':':\n                token.precidence = 16;\n                token.associativity = Twig.expression.operator.rightToLeft;\n                break;\n\n            // Null-coalescing operator\n            case '??':\n                token.precidence = 15;\n                token.associativity = Twig.expression.operator.rightToLeft;\n                break;\n\n            case 'or':\n                token.precidence = 14;\n                token.associativity = Twig.expression.operator.leftToRight;\n                break;\n\n            case 'and':\n                token.precidence = 13;\n                token.associativity = Twig.expression.operator.leftToRight;\n                break;\n\n            case 'b-or':\n                token.precidence = 12;\n                token.associativity = Twig.expression.operator.leftToRight;\n                break;\n\n            case 'b-xor':\n                token.precidence = 11;\n                token.associativity = Twig.expression.operator.leftToRight;\n                break;\n\n            case 'b-and':\n                token.precidence = 10;\n                token.associativity = Twig.expression.operator.leftToRight;\n                break;\n\n            case '==':\n            case '!=':\n                token.precidence = 9;\n                token.associativity = Twig.expression.operator.leftToRight;\n                break;\n\n            case '<':\n            case '<=':\n            case '>':\n            case '>=':\n            case 'not in':\n            case 'in':\n                token.precidence = 8;\n                token.associativity = Twig.expression.operator.leftToRight;\n                break;\n\n            case '~': // String concatination\n            case '+':\n            case '-':\n                token.precidence = 6;\n                token.associativity = Twig.expression.operator.leftToRight;\n                break;\n\n            case '//':\n            case '**':\n            case '*':\n            case '/':\n            case '%':\n                token.precidence = 5;\n                token.associativity = Twig.expression.operator.leftToRight;\n                break;\n\n            case 'not':\n                token.precidence = 3;\n                token.associativity = Twig.expression.operator.rightToLeft;\n                break;\n\n            case 'matches':\n                token.precidence = 8;\n                token.associativity = Twig.expression.operator.leftToRight;\n                break;\n\n            case 'starts with':\n                token.precidence = 8;\n                token.associativity = Twig.expression.operator.leftToRight;\n                break;\n\n            case 'ends with':\n                token.precidence = 8;\n                token.associativity = Twig.expression.operator.leftToRight;\n                break;\n\n            default:\n                throw new Twig.Error('Failed to lookup operator: ' + operator + ' is an unknown operator.');\n        }\n\n        token.operator = operator;\n        return token;\n    };\n\n    /**\n     * Handle operations on the RPN stack.\n     *\n     * Returns the updated stack.\n     */\n    Twig.expression.operator.parse = function (operator, stack) {\n        Twig.log.trace('Twig.expression.operator.parse: ', 'Handling ', operator);\n        let a;\n        let b;\n        let c;\n\n        if (operator === '?') {\n            c = stack.pop();\n        }\n\n        b = stack.pop();\n        if (operator !== 'not') {\n            a = stack.pop();\n        }\n\n        if (operator !== 'in' && operator !== 'not in' && operator !== '??') {\n            if (a && Array.isArray(a)) {\n                a = a.length;\n            }\n\n            if (b && Array.isArray(b)) {\n                b = b.length;\n            }\n        }\n\n        if (operator === 'matches') {\n            if (b && typeof b === 'string') {\n                const reParts = b.match(/^\\/(.*)\\/([gims]?)$/);\n                const reBody = reParts[1];\n                const reFlags = reParts[2];\n                b = new RegExp(reBody, reFlags);\n            }\n        }\n\n        switch (operator) {\n            case ':':\n                // Ignore\n                break;\n\n            case '??':\n                if (a === undefined) {\n                    a = b;\n                    b = c;\n                    c = undefined;\n                }\n\n                if (a !== undefined && a !== null) {\n                    stack.push(a);\n                } else {\n                    stack.push(b);\n                }\n\n                break;\n            case '?:':\n                if (Twig.lib.boolval(a)) {\n                    stack.push(a);\n                } else {\n                    stack.push(b);\n                }\n\n                break;\n            case '?':\n                if (a === undefined) {\n                    // An extended ternary.\n                    a = b;\n                    b = c;\n                    c = undefined;\n                }\n\n                if (Twig.lib.boolval(a)) {\n                    stack.push(b);\n                } else {\n                    stack.push(c);\n                }\n\n                break;\n\n            case '+':\n                b = parseFloat(b);\n                a = parseFloat(a);\n                stack.push(a + b);\n                break;\n\n            case '-':\n                b = parseFloat(b);\n                a = parseFloat(a);\n                stack.push(a - b);\n                break;\n\n            case '*':\n                b = parseFloat(b);\n                a = parseFloat(a);\n                stack.push(a * b);\n                break;\n\n            case '/':\n                b = parseFloat(b);\n                a = parseFloat(a);\n                stack.push(a / b);\n                break;\n\n            case '//':\n                b = parseFloat(b);\n                a = parseFloat(a);\n                stack.push(Math.floor(a / b));\n                break;\n\n            case '%':\n                b = parseFloat(b);\n                a = parseFloat(a);\n                stack.push(a % b);\n                break;\n\n            case '~':\n                stack.push((typeof a !== 'undefined' && a !== null ? a.toString() : '') +\n                          (typeof b !== 'undefined' && b !== null ? b.toString() : ''));\n                break;\n\n            case 'not':\n            case '!':\n                stack.push(!Twig.lib.boolval(b));\n                break;\n\n            case '<':\n                stack.push(a < b);\n                break;\n\n            case '<=':\n                stack.push(a <= b);\n                break;\n\n            case '>':\n                stack.push(a > b);\n                break;\n\n            case '>=':\n                stack.push(a >= b);\n                break;\n\n            case '===':\n                stack.push(a === b);\n                break;\n\n            case '==':\n                /* eslint-disable-next-line eqeqeq */\n                stack.push(a == b);\n                break;\n\n            case '!==':\n                stack.push(a !== b);\n                break;\n\n            case '!=':\n                /* eslint-disable-next-line eqeqeq */\n                stack.push(a != b);\n                break;\n\n            case 'or':\n                stack.push(Twig.lib.boolval(a) || Twig.lib.boolval(b));\n                break;\n\n            case 'b-or':\n                stack.push(a | b);\n                break;\n\n            case 'b-xor':\n                stack.push(a ^ b);\n                break;\n\n            case 'and':\n                stack.push(Twig.lib.boolval(a) && Twig.lib.boolval(b));\n                break;\n\n            case 'b-and':\n                stack.push(a & b);\n                break;\n\n            case '**':\n                stack.push(a ** b);\n                break;\n\n            case 'not in':\n                stack.push(!containment(a, b));\n                break;\n\n            case 'in':\n                stack.push(containment(a, b));\n                break;\n\n            case 'matches':\n                stack.push(b.test(a));\n                break;\n\n            case 'starts with':\n                stack.push(typeof a === 'string' && a.indexOf(b) === 0);\n                break;\n\n            case 'ends with':\n                stack.push(typeof a === 'string' && a.includes(b, a.length - b.length));\n                break;\n\n            case '..':\n                stack.push(Twig.functions.range(a, b));\n                break;\n\n            default:\n                throw new Twig.Error('Failed to parse operator: ' + operator + ' is an unknown operator.');\n        }\n    };\n\n    return Twig;\n};\n","// ## twig.filters.js\n//\n// This file handles parsing filters.\nmodule.exports = function (Twig) {\n    // Determine object type\n    function is(type, obj) {\n        const clas = Object.prototype.toString.call(obj).slice(8, -1);\n        return obj !== undefined && obj !== null && clas === type;\n    }\n\n    Twig.filters = {\n        // String Filters\n        upper(value) {\n            if (typeof value !== 'string') {\n                return value;\n            }\n\n            return value.toUpperCase();\n        },\n        lower(value) {\n            if (typeof value !== 'string') {\n                return value;\n            }\n\n            return value.toLowerCase();\n        },\n        capitalize(value) {\n            if (typeof value !== 'string') {\n                return value;\n            }\n\n            return value.slice(0, 1).toUpperCase() + value.toLowerCase().slice(1);\n        },\n        title(value) {\n            if (typeof value !== 'string') {\n                return value;\n            }\n\n            return value.toLowerCase().replace(/(^|\\s)([a-z])/g, (m, p1, p2) => {\n                return p1 + p2.toUpperCase();\n            });\n        },\n        length(value) {\n            if (Twig.lib.is('Array', value) || typeof value === 'string') {\n                return value.length;\n            }\n\n            if (Twig.lib.is('Object', value)) {\n                if (value._keys === undefined) {\n                    return Object.keys(value).length;\n                }\n\n                return value._keys.length;\n            }\n\n            return 0;\n        },\n\n        // Array/Object Filters\n        reverse(value) {\n            if (is('Array', value)) {\n                return value.reverse();\n            }\n\n            if (is('String', value)) {\n                return value.split('').reverse().join('');\n            }\n\n            if (is('Object', value)) {\n                const keys = value._keys || Object.keys(value).reverse();\n                value._keys = keys;\n                return value;\n            }\n        },\n        sort(value) {\n            if (is('Array', value)) {\n                return value.sort();\n            }\n\n            if (is('Object', value)) {\n                // Sorting objects isn't obvious since the order of\n                // returned keys isn't guaranteed in JavaScript.\n                // Because of this we use a \"hidden\" key called _keys to\n                // store the keys in the order we want to return them.\n\n                delete value._keys;\n                const keys = Object.keys(value);\n                const sortedKeys = keys.sort((a, b) => {\n                    let a1;\n                    let b1;\n\n                    // If a and b are comparable, we're fine :-)\n                    if ((value[a] > value[b]) === !(value[a] <= value[b])) {\n                        return value[a] > value[b] ? 1 :\n                            (value[a] < value[b] ? -1 : 0);\n                    }\n\n                    // If a and b can be parsed as numbers, we can compare\n                    // their numeric value\n                    if (!isNaN(a1 = parseFloat(value[a])) &&\n                                !isNaN(b1 = parseFloat(value[b]))) {\n                        return a1 > b1 ? 1 : (a1 < b1 ? -1 : 0);\n                    }\n\n                    // If one of the values is a string, we convert the\n                    // other value to string as well\n                    if (typeof value[a] === 'string') {\n                        return value[a] > value[b].toString() ? 1 :\n                            (value[a] < value[b].toString() ? -1 : 0);\n                    }\n\n                    if (typeof value[b] === 'string') {\n                        return value[a].toString() > value[b] ? 1 :\n                            (value[a].toString() < value[b] ? -1 : 0);\n                    }\n                    // Everything failed - return 'null' as sign, that\n                    // the values are not comparable\n\n                    return null;\n                });\n                value._keys = sortedKeys;\n                return value;\n            }\n        },\n        keys(value) {\n            if (value === undefined || value === null) {\n                return;\n            }\n\n            const keyset = value._keys || Object.keys(value);\n            const output = [];\n\n            keyset.forEach(key => {\n                if (key === '_keys') {\n                    return;\n                } // Ignore the _keys property\n\n                if (Object.hasOwnProperty.call(value, key)) {\n                    output.push(key);\n                }\n            });\n            return output;\n        },\n        /* eslint-disable-next-line camelcase */\n        url_encode(value) {\n            if (value === undefined || value === null) {\n                return;\n            }\n\n            if (Twig.lib.is('Object', value)) {\n                const serialize = function (obj, prefix) {\n                    const result = [];\n                    const keyset = obj._keys || Object.keys(obj);\n\n                    keyset.forEach(key => {\n                        if (!Object.prototype.hasOwnProperty.call(obj, key)) {\n                            return;\n                        }\n\n                        const resultKey = prefix ? prefix + '[' + key + ']' : key;\n                        const resultValue = obj[key];\n\n                        result.push(\n                            (Twig.lib.is('Object', resultValue) || Array.isArray(resultValue)) ?\n                                serialize(resultValue, resultKey) :\n                                encodeURIComponent(resultKey) + '=' + encodeURIComponent(resultValue)\n                        );\n                    });\n\n                    return result.join('&amp;');\n                };\n\n                return serialize(value);\n            }\n\n            let result = encodeURIComponent(value);\n            result = result.replace('\\'', '%27');\n            return result;\n        },\n        join(value, params) {\n            if (value === undefined || value === null) {\n                return;\n            }\n\n            let joinStr = '';\n            let output = [];\n            let keyset = null;\n\n            if (params && params[0]) {\n                joinStr = params[0];\n            }\n\n            if (is('Array', value)) {\n                output = value;\n            } else {\n                keyset = value._keys || Object.keys(value);\n                keyset.forEach(key => {\n                    if (key === '_keys') {\n                        return;\n                    } // Ignore the _keys property\n\n                    if (Object.hasOwnProperty.call(value, key)) {\n                        output.push(value[key]);\n                    }\n                });\n            }\n\n            return output.join(joinStr);\n        },\n        default(value, params) {\n            if (params !== undefined && params.length > 1) {\n                throw new Twig.Error('default filter expects one argument');\n            }\n\n            if (value === undefined || value === null || value === '') {\n                if (params === undefined) {\n                    return '';\n                }\n\n                return params[0];\n            }\n\n            return value;\n        },\n        /* eslint-disable-next-line camelcase */\n        json_encode(value) {\n            if (value === undefined || value === null) {\n                return 'null';\n            }\n\n            if ((typeof value === 'object') && (is('Array', value))) {\n                const output = [];\n\n                value.forEach(v => {\n                    output.push(Twig.filters.json_encode(v));\n                });\n\n                return '[' + output.join(',') + ']';\n            }\n\n            if ((typeof value === 'object') && (is('Date', value))) {\n                return '\"' + value.toISOString() + '\"';\n            }\n\n            if (typeof value === 'object') {\n                const keyset = value._keys || Object.keys(value);\n                const output = [];\n\n                keyset.forEach(key => {\n                    output.push(JSON.stringify(key) + ':' + Twig.filters.json_encode(value[key]));\n                });\n\n                return '{' + output.join(',') + '}';\n            }\n\n            return JSON.stringify(value);\n        },\n        merge(value, params) {\n            let obj = [];\n            let arrIndex = 0;\n            let keyset = [];\n\n            // Check to see if all the objects being merged are arrays\n            if (is('Array', value)) {\n                params.forEach(param => {\n                    if (!is('Array', param)) {\n                        obj = { };\n                    }\n                });\n            } else {\n                // Create obj as an Object\n                obj = { };\n            }\n\n            if (!is('Array', obj)) {\n                obj._keys = [];\n            }\n\n            if (is('Array', value)) {\n                value.forEach(val => {\n                    if (obj._keys) {\n                        obj._keys.push(arrIndex);\n                    }\n\n                    obj[arrIndex] = val;\n                    arrIndex++;\n                });\n            } else {\n                keyset = value._keys || Object.keys(value);\n                keyset.forEach(key => {\n                    obj[key] = value[key];\n                    obj._keys.push(key);\n\n                    // Handle edge case where a number index in an object is greater than\n                    //   the array counter. In such a case, the array counter is increased\n                    //   one past the index.\n                    //\n                    // Example {{ [\"a\", \"b\"]|merge({\"4\":\"value\"}, [\"c\", \"d\"])\n                    // Without this, d would have an index of \"4\" and overwrite the value\n                    //   of \"value\"\n                    const intKey = parseInt(key, 10);\n                    if (!isNaN(intKey) && intKey >= arrIndex) {\n                        arrIndex = intKey + 1;\n                    }\n                });\n            }\n\n            // Mixin the merge arrays\n            params.forEach(param => {\n                if (is('Array', param)) {\n                    param.forEach(val => {\n                        if (obj._keys) {\n                            obj._keys.push(arrIndex);\n                        }\n\n                        obj[arrIndex] = val;\n                        arrIndex++;\n                    });\n                } else {\n                    keyset = param._keys || Object.keys(param);\n                    keyset.forEach(key => {\n                        if (!obj[key]) {\n                            obj._keys.push(key);\n                        }\n\n                        obj[key] = param[key];\n\n                        const intKey = parseInt(key, 10);\n                        if (!isNaN(intKey) && intKey >= arrIndex) {\n                            arrIndex = intKey + 1;\n                        }\n                    });\n                }\n            });\n            if (params.length === 0) {\n                throw new Twig.Error('Filter merge expects at least one parameter');\n            }\n\n            return obj;\n        },\n\n        date(value, params) {\n            const date = Twig.functions.date(value);\n            const format = params && Boolean(params.length) ? params[0] : 'F j, Y H:i';\n            return Twig.lib.date(format.replace(/\\\\\\\\/g, '\\\\'), date);\n        },\n        /* eslint-disable-next-line camelcase */\n        date_modify(value, params) {\n            if (value === undefined || value === null) {\n                return;\n            }\n\n            if (params === undefined || params.length !== 1) {\n                throw new Twig.Error('date_modify filter expects 1 argument');\n            }\n\n            const modifyText = params[0];\n            let time;\n\n            if (Twig.lib.is('Date', value)) {\n                time = Twig.lib.strtotime(modifyText, value.getTime() / 1000);\n            }\n\n            if (Twig.lib.is('String', value)) {\n                time = Twig.lib.strtotime(modifyText, Twig.lib.strtotime(value));\n            }\n\n            if (Twig.lib.is('Number', value)) {\n                time = Twig.lib.strtotime(modifyText, value);\n            }\n\n            return new Date(time * 1000);\n        },\n\n        replace(value, params) {\n            if (value === undefined || value === null) {\n                return;\n            }\n\n            const pairs = params[0];\n            let tag;\n            for (tag in pairs) {\n                if (Object.hasOwnProperty.call(pairs, tag) && tag !== '_keys') {\n                    value = Twig.lib.replaceAll(value, tag, pairs[tag]);\n                }\n            }\n\n            return value;\n        },\n\n        format(value, params) {\n            if (value === undefined || value === null) {\n                return;\n            }\n\n            return Twig.lib.vsprintf(value, params);\n        },\n\n        striptags(value, allowed) {\n            if (value === undefined || value === null) {\n                return;\n            }\n\n            return Twig.lib.stripTags(value, allowed);\n        },\n\n        escape(value, params) {\n            if (value === undefined || value === null || value === '') {\n                return;\n            }\n\n            let strategy = 'html';\n            if (params && Boolean(params.length) && params[0] !== true) {\n                strategy = params[0];\n            }\n\n            if (strategy === 'html') {\n                const rawValue = value.toString().replace(/&/g, '&amp;')\n                    .replace(/</g, '&lt;')\n                    .replace(/>/g, '&gt;')\n                    .replace(/\"/g, '&quot;')\n                    .replace(/'/g, '&#039;');\n                return new Twig.Markup(rawValue, 'html');\n            }\n\n            if (strategy === 'js') {\n                const rawValue = value.toString();\n                let result = '';\n\n                for (let i = 0; i < rawValue.length; i++) {\n                    if (rawValue[i].match(/^[a-zA-Z0-9,._]$/)) {\n                        result += rawValue[i];\n                    } else {\n                        const char = rawValue.charAt(i);\n                        const charCode = rawValue.charCodeAt(i);\n\n                        // A few characters have short escape sequences in JSON and JavaScript.\n                        // Escape sequences supported only by JavaScript, not JSON, are ommitted.\n                        // \\\" is also supported but omitted, because the resulting string is not HTML safe.\n                        const shortMap = {\n                            '\\\\': '\\\\\\\\',\n                            '/': '\\\\/',\n                            '\\u0008': '\\\\b',\n                            '\\u000C': '\\\\f',\n                            '\\u000A': '\\\\n',\n                            '\\u000D': '\\\\r',\n                            '\\u0009': '\\\\t'\n                        };\n\n                        if (shortMap[char]) {\n                            result += shortMap[char];\n                        } else {\n                            result += Twig.lib.sprintf('\\\\u%04s', charCode.toString(16).toUpperCase());\n                        }\n                    }\n                }\n\n                return new Twig.Markup(result, 'js');\n            }\n\n            if (strategy === 'css') {\n                const rawValue = value.toString();\n                let result = '';\n\n                for (let i = 0; i < rawValue.length; i++) {\n                    if (rawValue[i].match(/^[a-zA-Z0-9]$/)) {\n                        result += rawValue[i];\n                    } else {\n                        const charCode = rawValue.charCodeAt(i);\n                        result += '\\\\' + charCode.toString(16).toUpperCase() + ' ';\n                    }\n                }\n\n                return new Twig.Markup(result, 'css');\n            }\n\n            if (strategy === 'url') {\n                const result = Twig.filters.url_encode(value);\n                return new Twig.Markup(result, 'url');\n            }\n\n            if (strategy === 'html_attr') {\n                const rawValue = value.toString();\n                let result = '';\n\n                for (let i = 0; i < rawValue.length; i++) {\n                    if (rawValue[i].match(/^[a-zA-Z0-9,.\\-_]$/)) {\n                        result += rawValue[i];\n                    } else if (rawValue[i].match(/^[&<>\"]$/)) {\n                        result += rawValue[i].replace(/&/g, '&amp;')\n                            .replace(/</g, '&lt;')\n                            .replace(/>/g, '&gt;')\n                            .replace(/\"/g, '&quot;');\n                    } else {\n                        const charCode = rawValue.charCodeAt(i);\n\n                        // The following replaces characters undefined in HTML with\n                        // the hex entity for the Unicode replacement character.\n                        if (charCode <= 0x1F && charCode !== 0x09 && charCode !== 0x0A && charCode !== 0x0D) {\n                            result += '&#xFFFD;';\n                        } else if (charCode < 0x80) {\n                            result += Twig.lib.sprintf('&#x%02s;', charCode.toString(16).toUpperCase());\n                        } else {\n                            result += Twig.lib.sprintf('&#x%04s;', charCode.toString(16).toUpperCase());\n                        }\n                    }\n                }\n\n                return new Twig.Markup(result, 'html_attr');\n            }\n\n            throw new Twig.Error('escape strategy unsupported');\n        },\n\n        /* Alias of escape */\n        e(value, params) {\n            return Twig.filters.escape(value, params);\n        },\n\n        nl2br(value) {\n            if (value === undefined || value === null || value === '') {\n                return;\n            }\n\n            const linebreakTag = 'BACKSLASH_n_replace';\n            const br = '<br />' + linebreakTag;\n\n            value = Twig.filters.escape(value)\n                .replace(/\\r\\n/g, br)\n                .replace(/\\r/g, br)\n                .replace(/\\n/g, br);\n\n            value = Twig.lib.replaceAll(value, linebreakTag, '\\n');\n\n            return new Twig.Markup(value);\n        },\n\n        /**\n         * Adapted from: http://phpjs.org/functions/number_format:481\n         */\n        /* eslint-disable-next-line camelcase */\n        number_format(value, params) {\n            let number = value;\n            const decimals = (params && params[0]) ? params[0] : undefined;\n            const dec = (params && params[1] !== undefined) ? params[1] : '.';\n            const sep = (params && params[2] !== undefined) ? params[2] : ',';\n\n            number = (String(number)).replace(/[^0-9+\\-Ee.]/g, '');\n            const n = isFinite(Number(number)) ? Number(number) : 0;\n            const prec = isFinite(Number(decimals)) ? Math.abs(decimals) : 0;\n            let s = '';\n            const toFixedFix = function (n, prec) {\n                const k = 10 ** prec;\n                return String(Math.round(n * k) / k);\n            };\n\n            // Fix for IE parseFloat(0.55).toFixed(0) = 0;\n            s = (prec ? toFixedFix(n, prec) : String(Math.round(n))).split('.');\n            if (s[0].length > 3) {\n                s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\n            }\n\n            if ((s[1] || '').length < prec) {\n                s[1] = s[1] || '';\n                s[1] += new Array(prec - s[1].length + 1).join('0');\n            }\n\n            return s.join(dec);\n        },\n\n        trim(value, params) {\n            if (value === undefined || value === null) {\n                return;\n            }\n\n            let str = String(value);\n            let whitespace;\n            if (params && params[0]) {\n                whitespace = String(params[0]);\n            } else {\n                whitespace = ' \\n\\r\\t\\f\\u000B\\u00A0\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u200b\\u2028\\u2029\\u3000';\n            }\n\n            for (let i = 0; i < str.length; i++) {\n                if (!whitespace.includes(str.charAt(i))) {\n                    str = str.slice(Math.max(0, i));\n                    break;\n                }\n            }\n\n            for (let i = str.length - 1; i >= 0; i--) {\n                if (!whitespace.includes(str.charAt(i))) {\n                    str = str.slice(0, Math.max(0, i + 1));\n                    break;\n                }\n            }\n\n            return whitespace.includes(str.charAt(0)) ? '' : str;\n        },\n\n        truncate(value, params) {\n            let length = 30;\n            let preserve = false;\n            let separator = '...';\n\n            value = String(value);\n            if (params) {\n                if (params[0]) {\n                    length = params[0];\n                }\n\n                if (params[1]) {\n                    preserve = params[1];\n                }\n\n                if (params[2]) {\n                    separator = params[2];\n                }\n            }\n\n            if (value.length > length) {\n                if (preserve) {\n                    length = value.indexOf(' ', length);\n                    if (length === -1) {\n                        return value;\n                    }\n                }\n\n                value = value.slice(0, length) + separator;\n            }\n\n            return value;\n        },\n\n        slice(value, params) {\n            if (value === undefined || value === null) {\n                return;\n            }\n\n            if (params === undefined || params.length === 0) {\n                throw new Twig.Error('slice filter expects at least 1 argument');\n            }\n\n            // Default to start of string\n            const start = params[0] || 0;\n            // Default to length of string\n            const length = params.length > 1 ? params[1] : value.length;\n            // Handle negative start values\n            const startIndex = start >= 0 ? start : Math.max(value.length + start, 0);\n\n            if (Twig.lib.is('Array', value)) {\n                const output = [];\n                for (let i = startIndex; i < startIndex + length && i < value.length; i++) {\n                    output.push(value[i]);\n                }\n\n                return output;\n            }\n\n            if (Twig.lib.is('String', value)) {\n                return value.slice(startIndex, startIndex + length);\n            }\n\n            throw new Twig.Error('slice filter expects value to be an array or string');\n        },\n\n        abs(value) {\n            if (value === undefined || value === null) {\n                return;\n            }\n\n            return Math.abs(value);\n        },\n\n        first(value) {\n            if (is('Array', value)) {\n                return value[0];\n            }\n\n            if (is('Object', value)) {\n                if ('_keys' in value) {\n                    return value[value._keys[0]];\n                }\n            } else if (typeof value === 'string') {\n                return value.slice(0, 1);\n            }\n        },\n\n        split(value, params) {\n            if (value === undefined || value === null) {\n                return;\n            }\n\n            if (params === undefined || params.length === 0 || params.length > 2) {\n                throw new Twig.Error('split filter expects 1 or 2 argument');\n            }\n\n            if (Twig.lib.is('String', value)) {\n                const delimiter = params[0];\n                const limit = params[1];\n                const split = value.split(delimiter);\n\n                if (limit === undefined) {\n                    return split;\n                }\n\n                if (limit < 0) {\n                    return value.split(delimiter, split.length + limit);\n                }\n\n                const limitedSplit = [];\n\n                if (delimiter === '') {\n                    // Empty delimiter\n                    // \"aabbcc\"|split('', 2)\n                    //     -> ['aa', 'bb', 'cc']\n\n                    while (split.length > 0) {\n                        let temp = '';\n                        for (let i = 0; i < limit && split.length > 0; i++) {\n                            temp += split.shift();\n                        }\n\n                        limitedSplit.push(temp);\n                    }\n                } else {\n                    // Non-empty delimiter\n                    // \"one,two,three,four,five\"|split(',', 3)\n                    //     -> ['one', 'two', 'three,four,five']\n\n                    for (let i = 0; i < limit - 1 && split.length > 0; i++) {\n                        limitedSplit.push(split.shift());\n                    }\n\n                    if (split.length > 0) {\n                        limitedSplit.push(split.join(delimiter));\n                    }\n                }\n\n                return limitedSplit;\n            }\n\n            throw new Twig.Error('split filter expects value to be a string');\n        },\n        last(value) {\n            if (Twig.lib.is('Object', value)) {\n                let keys;\n\n                if (value._keys === undefined) {\n                    keys = Object.keys(value);\n                } else {\n                    keys = value._keys;\n                }\n\n                return value[keys[keys.length - 1]];\n            }\n\n            if (Twig.lib.is('Number', value)) {\n                return value.toString().slice(-1);\n            }\n\n            // String|array\n            return value[value.length - 1];\n        },\n        raw(value) {\n            return new Twig.Markup(value || '');\n        },\n        batch(items, params) {\n            let size = params.shift();\n            const fill = params.shift();\n            let last;\n            let missing;\n\n            if (!Twig.lib.is('Array', items)) {\n                throw new Twig.Error('batch filter expects items to be an array');\n            }\n\n            if (!Twig.lib.is('Number', size)) {\n                throw new Twig.Error('batch filter expects size to be a number');\n            }\n\n            size = Math.ceil(size);\n\n            const result = Twig.lib.chunkArray(items, size);\n\n            if (fill && items.length % size !== 0) {\n                last = result.pop();\n                missing = size - last.length;\n\n                while (missing--) {\n                    last.push(fill);\n                }\n\n                result.push(last);\n            }\n\n            return result;\n        },\n        round(value, params) {\n            params = params || [];\n\n            const precision = params.length > 0 ? params[0] : 0;\n            const method = params.length > 1 ? params[1] : 'common';\n\n            value = parseFloat(value);\n\n            if (precision && !Twig.lib.is('Number', precision)) {\n                throw new Twig.Error('round filter expects precision to be a number');\n            }\n\n            if (method === 'common') {\n                return Twig.lib.round(value, precision);\n            }\n\n            if (!Twig.lib.is('Function', Math[method])) {\n                throw new Twig.Error('round filter expects method to be \\'floor\\', \\'ceil\\', or \\'common\\'');\n            }\n\n            return Math[method](value * (10 ** precision)) / (10 ** precision);\n        },\n        spaceless(value) {\n            return value.replace(/>\\s+</g, '><').trim();\n        }\n    };\n\n    Twig.filter = function (filter, value, params) {\n        const state = this;\n\n        if (!Twig.filters[filter]) {\n            throw new Twig.Error('Unable to find filter ' + filter);\n        }\n\n        return Twig.filters[filter].call(state, value, params);\n    };\n\n    Twig.filter.extend = function (filter, definition) {\n        Twig.filters[filter] = definition;\n    };\n\n    return Twig;\n};\n","// ## twig.functions.js\n//\n// This file handles parsing filters.\nmodule.exports = function (Twig) {\n    /**\n     * @constant\n     * @type {string}\n     */\n    const TEMPLATE_NOT_FOUND_MESSAGE = 'Template \"{name}\" is not defined.';\n\n    Twig.functions = {\n        //  Attribute, block, constant, date, dump, parent, random,.\n\n        // Range function from http://phpjs.org/functions/range:499\n        // Used under an MIT License\n        range(low, high, step) {\n            // http://kevin.vanzonneveld.net\n            // +   original by: Waldo Malqui Silva\n            // *     example 1: range ( 0, 12 );\n            // *     returns 1: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n            // *     example 2: range( 0, 100, 10 );\n            // *     returns 2: [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]\n            // *     example 3: range( 'a', 'i' );\n            // *     returns 3: ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i']\n            // *     example 4: range( 'c', 'a' );\n            // *     returns 4: ['c', 'b', 'a']\n            const matrix = [];\n            let inival;\n            let endval;\n            const walker = step || 1;\n            let chars = false;\n\n            if (!isNaN(low) && !isNaN(high)) {\n                inival = parseInt(low, 10);\n                endval = parseInt(high, 10);\n            } else if (isNaN(low) && isNaN(high)) {\n                chars = true;\n                inival = low.charCodeAt(0);\n                endval = high.charCodeAt(0);\n            } else {\n                inival = (isNaN(low) ? 0 : low);\n                endval = (isNaN(high) ? 0 : high);\n            }\n\n            const plus = (!((inival > endval)));\n            if (plus) {\n                while (inival <= endval) {\n                    matrix.push(((chars) ? String.fromCharCode(inival) : inival));\n                    inival += walker;\n                }\n            } else {\n                while (inival >= endval) {\n                    matrix.push(((chars) ? String.fromCharCode(inival) : inival));\n                    inival -= walker;\n                }\n            }\n\n            return matrix;\n        },\n        cycle(arr, i) {\n            const pos = i % arr.length;\n            return arr[pos];\n        },\n        dump(...args) {\n            // Don't pass arguments to `Array.slice`, that is a performance killer\n\n            const argsCopy = [...args];\n            const state = this;\n\n            const EOL = '\\n';\n            const indentChar = '  ';\n            let indentTimes = 0;\n            let out = '';\n            const indent = function (times) {\n                let ind = '';\n                while (times > 0) {\n                    times--;\n                    ind += indentChar;\n                }\n\n                return ind;\n            };\n\n            const displayVar = function (variable) {\n                out += indent(indentTimes);\n                if (typeof (variable) === 'object') {\n                    dumpVar(variable);\n                } else if (typeof (variable) === 'function') {\n                    out += 'function()' + EOL;\n                } else if (typeof (variable) === 'string') {\n                    out += 'string(' + variable.length + ') \"' + variable + '\"' + EOL;\n                } else if (typeof (variable) === 'number') {\n                    out += 'number(' + variable + ')' + EOL;\n                } else if (typeof (variable) === 'boolean') {\n                    out += 'bool(' + variable + ')' + EOL;\n                }\n            };\n\n            const dumpVar = function (variable) {\n                let i;\n                if (variable === null) {\n                    out += 'NULL' + EOL;\n                } else if (variable === undefined) {\n                    out += 'undefined' + EOL;\n                } else if (typeof variable === 'object') {\n                    out += indent(indentTimes) + typeof (variable);\n                    indentTimes++;\n                    out += '(' + (function (obj) {\n                        let size = 0;\n                        let key;\n                        for (key in obj) {\n                            if (Object.hasOwnProperty.call(obj, key)) {\n                                size++;\n                            }\n                        }\n\n                        return size;\n                    })(variable) + ') {' + EOL;\n                    for (i in variable) {\n                        if (Object.hasOwnProperty.call(variable, i)) {\n                            out += indent(indentTimes) + '[' + i + ']=> ' + EOL;\n                            displayVar(variable[i]);\n                        }\n                    }\n\n                    indentTimes--;\n                    out += indent(indentTimes) + '}' + EOL;\n                } else {\n                    displayVar(variable);\n                }\n            };\n\n            // Handle no argument case by dumping the entire render context\n            if (argsCopy.length === 0) {\n                argsCopy.push(state.context);\n            }\n\n            argsCopy.forEach(variable => {\n                dumpVar(variable);\n            });\n\n            return out;\n        },\n        date(date) {\n            let dateObj;\n            if (date === undefined || date === null || date === '') {\n                dateObj = new Date();\n            } else if (Twig.lib.is('Date', date)) {\n                dateObj = date;\n            } else if (Twig.lib.is('String', date)) {\n                if (date.match(/^\\d+$/)) {\n                    dateObj = new Date(date * 1000);\n                } else {\n                    dateObj = new Date(Twig.lib.strtotime(date) * 1000);\n                }\n            } else if (Twig.lib.is('Number', date)) {\n                // Timestamp\n                dateObj = new Date(date * 1000);\n            } else {\n                throw new Twig.Error('Unable to parse date ' + date);\n            }\n\n            return dateObj;\n        },\n        block(blockName) {\n            const state = this;\n\n            const block = state.getBlock(blockName);\n\n            if (block !== undefined) {\n                return block.render(state, state.context);\n            }\n        },\n        parent() {\n            const state = this;\n\n            return state.getBlock(state.getNestingStackToken(Twig.logic.type.block).blockName, true).render(state, state.context);\n        },\n        attribute(object, method, params) {\n            if (Twig.lib.is('Object', object)) {\n                if (Object.hasOwnProperty.call(object, method)) {\n                    if (typeof object[method] === 'function') {\n                        return object[method].apply(undefined, params);\n                    }\n\n                    return object[method];\n                }\n            }\n\n            // Array will return element 0-index\n            return object ? (object[method] || undefined) : undefined;\n        },\n        max(values, ...args) {\n            if (Twig.lib.is('Object', values)) {\n                delete values._keys;\n                return Twig.lib.max(values);\n            }\n\n            return Reflect.apply(Twig.lib.max, null, [values, ...args]);\n        },\n        min(values, ...args) {\n            if (Twig.lib.is('Object', values)) {\n                delete values._keys;\n                return Twig.lib.min(values);\n            }\n\n            return Reflect.apply(Twig.lib.min, null, [values, ...args]);\n        },\n        /* eslint-disable-next-line camelcase */\n        template_from_string(template) {\n            const state = this;\n\n            if (template === undefined) {\n                template = '';\n            }\n\n            return Twig.Templates.parsers.twig({\n                options: state.template.options,\n                data: template\n            });\n        },\n        random(value) {\n            const LIMIT_INT31 = 0x80000000;\n\n            function getRandomNumber(n) {\n                const random = Math.floor(Math.random() * LIMIT_INT31);\n                const min = Math.min.call(null, 0, n);\n                const max = Math.max.call(null, 0, n);\n                return min + Math.floor((max - min + 1) * random / LIMIT_INT31);\n            }\n\n            if (Twig.lib.is('Number', value)) {\n                return getRandomNumber(value);\n            }\n\n            if (Twig.lib.is('String', value)) {\n                return value.charAt(getRandomNumber(value.length - 1));\n            }\n\n            if (Twig.lib.is('Array', value)) {\n                return value[getRandomNumber(value.length - 1)];\n            }\n\n            if (Twig.lib.is('Object', value)) {\n                const keys = Object.keys(value);\n                return value[keys[getRandomNumber(keys.length - 1)]];\n            }\n\n            return getRandomNumber(LIMIT_INT31 - 1);\n        },\n\n        /**\n         * Returns the content of a template without rendering it\n         * @param {string} name\n         * @param {boolean} [ignoreMissing=false]\n         * @returns {string}\n         */\n        source(name, ignoreMissing) {\n            let templateSource;\n            let templateFound = false;\n            const isNodeEnvironment = typeof module !== 'undefined' && typeof module.exports !== 'undefined' && typeof window === 'undefined';\n            let loader;\n            const path = name;\n\n            // If we are running in a node.js environment, set the loader to 'fs'.\n            if (isNodeEnvironment) {\n                loader = 'fs';\n            } else {\n                loader = 'ajax';\n            }\n\n            // Build the params object\n            const params = {\n                id: name,\n                path,\n                method: loader,\n                parser: 'source',\n                async: false,\n                fetchTemplateSource: true\n            };\n\n            // Default ignoreMissing to false\n            if (typeof ignoreMissing === 'undefined') {\n                ignoreMissing = false;\n            }\n\n            // Try to load the remote template\n            //\n            // on exception, log it\n            try {\n                templateSource = Twig.Templates.loadRemote(name, params);\n\n                // If the template is undefined or null, set the template to an empty string and do NOT flip the\n                // boolean indicating we found the template\n                //\n                // else, all is good! flip the boolean indicating we found the template\n                if (typeof templateSource === 'undefined' || templateSource === null) {\n                    templateSource = '';\n                } else {\n                    templateFound = true;\n                }\n            } catch (error) {\n                Twig.log.debug('Twig.functions.source: ', 'Problem loading template  ', error);\n            }\n\n            // If the template was NOT found AND we are not ignoring missing templates, return the same message\n            // that is returned by the PHP implementation of the twig source() function\n            //\n            // else, return the template source\n            if (!templateFound && !ignoreMissing) {\n                return TEMPLATE_NOT_FOUND_MESSAGE.replace('{name}', name);\n            }\n\n            return templateSource;\n        }\n    };\n\n    Twig._function = function (_function, value, params) {\n        if (!Twig.functions[_function]) {\n            throw new Twig.Error('Unable to find function ' + _function);\n        }\n\n        return Twig.functions[_function](value, params);\n    };\n\n    Twig._function.extend = function (_function, definition) {\n        Twig.functions[_function] = definition;\n    };\n\n    return Twig;\n};\n","// ## twig.lib.js\n//\n// This file contains 3rd party libraries used within twig.\n//\n// Copies of the licenses for the code included here can be found in the\n// LICENSES.md file.\n//\n\nmodule.exports = function (Twig) {\n    // Namespace for libraries\n    Twig.lib = { };\n\n    Twig.lib.sprintf = require('locutus/php/strings/sprintf');\n    Twig.lib.vsprintf = require('locutus/php/strings/vsprintf');\n    Twig.lib.round = require('locutus/php/math/round');\n    Twig.lib.max = require('locutus/php/math/max');\n    Twig.lib.min = require('locutus/php/math/min');\n    Twig.lib.stripTags = require('locutus/php/strings/strip_tags');\n    Twig.lib.strtotime = require('locutus/php/datetime/strtotime');\n    Twig.lib.date = require('locutus/php/datetime/date');\n    Twig.lib.boolval = require('locutus/php/var/boolval');\n\n    Twig.lib.is = function (type, obj) {\n        if (typeof obj === 'undefined' || obj === null) {\n            return false;\n        }\n\n        switch (type) {\n            case 'Array':\n                return Array.isArray(obj);\n            case 'Date':\n                return obj instanceof Date;\n            case 'String':\n                return (typeof obj === 'string' || obj instanceof String);\n            case 'Number':\n                return (typeof obj === 'number' || obj instanceof Number);\n            case 'Function':\n                return (typeof obj === 'function');\n            case 'Object':\n                return obj instanceof Object;\n            default:\n                return false;\n        }\n    };\n\n    Twig.lib.replaceAll = function (string, search, replace) {\n        // Escape possible regular expression syntax\n        const searchEscaped = search.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n\n        return string.replace(new RegExp(searchEscaped, 'g'), replace);\n    };\n\n    // Chunk an array (arr) into arrays of (size) items, returns an array of arrays, or an empty array on invalid input\n    Twig.lib.chunkArray = function (arr, size) {\n        const returnVal = [];\n        let x = 0;\n        const len = arr.length;\n\n        if (size < 1 || !Array.isArray(arr)) {\n            return [];\n        }\n\n        while (x < len) {\n            returnVal.push(arr.slice(x, x += size));\n        }\n\n        return returnVal;\n    };\n\n    return Twig;\n};\n","'use strict';\n\nmodule.exports = function vsprintf(format, args) {\n  //  discuss at: http://locutus.io/php/vsprintf/\n  // original by: ejsanders\n  //   example 1: vsprintf('%04d-%02d-%02d', [1988, 8, 1])\n  //   returns 1: '1988-08-01'\n\n  var sprintf = require('../strings/sprintf');\n\n  return sprintf.apply(this, [format].concat(args));\n};\n//# sourceMappingURL=vsprintf.js.map","'use strict';\n\nmodule.exports = function round(value, precision, mode) {\n  //  discuss at: http://locutus.io/php/round/\n  // original by: Philip Peterson\n  //  revised by: Onno Marsman (https://twitter.com/onnomarsman)\n  //  revised by: T.Wild\n  //  revised by: Rafał Kukawski (http://blog.kukawski.pl)\n  //    input by: Greenseed\n  //    input by: meo\n  //    input by: William\n  //    input by: Josep Sanz (http://www.ws3.es/)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Great work. Ideas for improvement:\n  //      note 1: - code more compliant with developer guidelines\n  //      note 1: - for implementing PHP constant arguments look at\n  //      note 1: the pathinfo() function, it offers the greatest\n  //      note 1: flexibility & compatibility possible\n  //   example 1: round(1241757, -3)\n  //   returns 1: 1242000\n  //   example 2: round(3.6)\n  //   returns 2: 4\n  //   example 3: round(2.835, 2)\n  //   returns 3: 2.84\n  //   example 4: round(1.1749999999999, 2)\n  //   returns 4: 1.17\n  //   example 5: round(58551.799999999996, 2)\n  //   returns 5: 58551.8\n\n  var m, f, isHalf, sgn; // helper variables\n  // making sure precision is integer\n  precision |= 0;\n  m = Math.pow(10, precision);\n  value *= m;\n  // sign of the number\n  sgn = value > 0 | -(value < 0);\n  isHalf = value % 1 === 0.5 * sgn;\n  f = Math.floor(value);\n\n  if (isHalf) {\n    switch (mode) {\n      case 'PHP_ROUND_HALF_DOWN':\n        // rounds .5 toward zero\n        value = f + (sgn < 0);\n        break;\n      case 'PHP_ROUND_HALF_EVEN':\n        // rouds .5 towards the next even integer\n        value = f + f % 2 * sgn;\n        break;\n      case 'PHP_ROUND_HALF_ODD':\n        // rounds .5 towards the next odd integer\n        value = f + !(f % 2);\n        break;\n      default:\n        // rounds .5 away from zero\n        value = f + (sgn > 0);\n    }\n  }\n\n  return (isHalf ? value : Math.round(value)) / m;\n};\n//# sourceMappingURL=round.js.map","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nmodule.exports = function max() {\n  //  discuss at: http://locutus.io/php/max/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //  revised by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Jack\n  //      note 1: Long code cause we're aiming for maximum PHP compatibility\n  //   example 1: max(1, 3, 5, 6, 7)\n  //   returns 1: 7\n  //   example 2: max([2, 4, 5])\n  //   returns 2: 5\n  //   example 3: max(0, 'hello')\n  //   returns 3: 0\n  //   example 4: max('hello', 0)\n  //   returns 4: 'hello'\n  //   example 5: max(-1, 'hello')\n  //   returns 5: 'hello'\n  //   example 6: max([2, 4, 8], [2, 5, 7])\n  //   returns 6: [2, 5, 7]\n\n  var ar;\n  var retVal;\n  var i = 0;\n  var n = 0;\n  var argv = arguments;\n  var argc = argv.length;\n  var _obj2Array = function _obj2Array(obj) {\n    if (Object.prototype.toString.call(obj) === '[object Array]') {\n      return obj;\n    } else {\n      var ar = [];\n      for (var i in obj) {\n        if (obj.hasOwnProperty(i)) {\n          ar.push(obj[i]);\n        }\n      }\n      return ar;\n    }\n  };\n  var _compare = function _compare(current, next) {\n    var i = 0;\n    var n = 0;\n    var tmp = 0;\n    var nl = 0;\n    var cl = 0;\n\n    if (current === next) {\n      return 0;\n    } else if ((typeof current === 'undefined' ? 'undefined' : _typeof(current)) === 'object') {\n      if ((typeof next === 'undefined' ? 'undefined' : _typeof(next)) === 'object') {\n        current = _obj2Array(current);\n        next = _obj2Array(next);\n        cl = current.length;\n        nl = next.length;\n        if (nl > cl) {\n          return 1;\n        } else if (nl < cl) {\n          return -1;\n        }\n        for (i = 0, n = cl; i < n; ++i) {\n          tmp = _compare(current[i], next[i]);\n          if (tmp === 1) {\n            return 1;\n          } else if (tmp === -1) {\n            return -1;\n          }\n        }\n        return 0;\n      }\n      return -1;\n    } else if ((typeof next === 'undefined' ? 'undefined' : _typeof(next)) === 'object') {\n      return 1;\n    } else if (isNaN(next) && !isNaN(current)) {\n      if (current === 0) {\n        return 0;\n      }\n      return current < 0 ? 1 : -1;\n    } else if (isNaN(current) && !isNaN(next)) {\n      if (next === 0) {\n        return 0;\n      }\n      return next > 0 ? 1 : -1;\n    }\n\n    if (next === current) {\n      return 0;\n    }\n\n    return next > current ? 1 : -1;\n  };\n\n  if (argc === 0) {\n    throw new Error('At least one value should be passed to max()');\n  } else if (argc === 1) {\n    if (_typeof(argv[0]) === 'object') {\n      ar = _obj2Array(argv[0]);\n    } else {\n      throw new Error('Wrong parameter count for max()');\n    }\n    if (ar.length === 0) {\n      throw new Error('Array must contain at least one element for max()');\n    }\n  } else {\n    ar = argv;\n  }\n\n  retVal = ar[0];\n  for (i = 1, n = ar.length; i < n; ++i) {\n    if (_compare(retVal, ar[i]) === 1) {\n      retVal = ar[i];\n    }\n  }\n\n  return retVal;\n};\n//# sourceMappingURL=max.js.map","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nmodule.exports = function min() {\n  //  discuss at: http://locutus.io/php/min/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //  revised by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Jack\n  //      note 1: Long code cause we're aiming for maximum PHP compatibility\n  //   example 1: min(1, 3, 5, 6, 7)\n  //   returns 1: 1\n  //   example 2: min([2, 4, 5])\n  //   returns 2: 2\n  //   example 3: min(0, 'hello')\n  //   returns 3: 0\n  //   example 4: min('hello', 0)\n  //   returns 4: 'hello'\n  //   example 5: min(-1, 'hello')\n  //   returns 5: -1\n  //   example 6: min([2, 4, 8], [2, 5, 7])\n  //   returns 6: [2, 4, 8]\n\n  var ar;\n  var retVal;\n  var i = 0;\n  var n = 0;\n  var argv = arguments;\n  var argc = argv.length;\n  var _obj2Array = function _obj2Array(obj) {\n    if (Object.prototype.toString.call(obj) === '[object Array]') {\n      return obj;\n    }\n    var ar = [];\n    for (var i in obj) {\n      if (obj.hasOwnProperty(i)) {\n        ar.push(obj[i]);\n      }\n    }\n    return ar;\n  };\n\n  var _compare = function _compare(current, next) {\n    var i = 0;\n    var n = 0;\n    var tmp = 0;\n    var nl = 0;\n    var cl = 0;\n\n    if (current === next) {\n      return 0;\n    } else if ((typeof current === 'undefined' ? 'undefined' : _typeof(current)) === 'object') {\n      if ((typeof next === 'undefined' ? 'undefined' : _typeof(next)) === 'object') {\n        current = _obj2Array(current);\n        next = _obj2Array(next);\n        cl = current.length;\n        nl = next.length;\n        if (nl > cl) {\n          return 1;\n        } else if (nl < cl) {\n          return -1;\n        }\n        for (i = 0, n = cl; i < n; ++i) {\n          tmp = _compare(current[i], next[i]);\n          if (tmp === 1) {\n            return 1;\n          } else if (tmp === -1) {\n            return -1;\n          }\n        }\n        return 0;\n      }\n      return -1;\n    } else if ((typeof next === 'undefined' ? 'undefined' : _typeof(next)) === 'object') {\n      return 1;\n    } else if (isNaN(next) && !isNaN(current)) {\n      if (current === 0) {\n        return 0;\n      }\n      return current < 0 ? 1 : -1;\n    } else if (isNaN(current) && !isNaN(next)) {\n      if (next === 0) {\n        return 0;\n      }\n      return next > 0 ? 1 : -1;\n    }\n\n    if (next === current) {\n      return 0;\n    }\n\n    return next > current ? 1 : -1;\n  };\n\n  if (argc === 0) {\n    throw new Error('At least one value should be passed to min()');\n  } else if (argc === 1) {\n    if (_typeof(argv[0]) === 'object') {\n      ar = _obj2Array(argv[0]);\n    } else {\n      throw new Error('Wrong parameter count for min()');\n    }\n\n    if (ar.length === 0) {\n      throw new Error('Array must contain at least one element for min()');\n    }\n  } else {\n    ar = argv;\n  }\n\n  retVal = ar[0];\n\n  for (i = 1, n = ar.length; i < n; ++i) {\n    if (_compare(retVal, ar[i]) === -1) {\n      retVal = ar[i];\n    }\n  }\n\n  return retVal;\n};\n//# sourceMappingURL=min.js.map","'use strict';\n\nmodule.exports = function strip_tags(input, allowed) {\n  // eslint-disable-line camelcase\n  //  discuss at: http://locutus.io/php/strip_tags/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Luke Godfrey\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Pul\n  //    input by: Alex\n  //    input by: Marc Palau\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Bobby Drake\n  //    input by: Evertjan Garretsen\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Eric Nagel\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Tomasz Wesolowski\n  // bugfixed by: Tymon Sturgeon (https://scryptonite.com)\n  // bugfixed by: Tim de Koning (https://www.kingsquare.nl)\n  //  revised by: Rafał Kukawski (http://blog.kukawski.pl)\n  //   example 1: strip_tags('<p>Kevin</p> <br /><b>van</b> <i>Zonneveld</i>', '<i><b>')\n  //   returns 1: 'Kevin <b>van</b> <i>Zonneveld</i>'\n  //   example 2: strip_tags('<p>Kevin <img src=\"someimage.png\" onmouseover=\"someFunction()\">van <i>Zonneveld</i></p>', '<p>')\n  //   returns 2: '<p>Kevin van Zonneveld</p>'\n  //   example 3: strip_tags(\"<a href='http://kvz.io'>Kevin van Zonneveld</a>\", \"<a>\")\n  //   returns 3: \"<a href='http://kvz.io'>Kevin van Zonneveld</a>\"\n  //   example 4: strip_tags('1 < 5 5 > 1')\n  //   returns 4: '1 < 5 5 > 1'\n  //   example 5: strip_tags('1 <br/> 1')\n  //   returns 5: '1  1'\n  //   example 6: strip_tags('1 <br/> 1', '<br>')\n  //   returns 6: '1 <br/> 1'\n  //   example 7: strip_tags('1 <br/> 1', '<br><br/>')\n  //   returns 7: '1 <br/> 1'\n  //   example 8: strip_tags('<i>hello</i> <<foo>script>world<</foo>/script>')\n  //   returns 8: 'hello world'\n  //   example 9: strip_tags(4)\n  //   returns 9: '4'\n\n  var _phpCastString = require('../_helpers/_phpCastString');\n\n  // making sure the allowed arg is a string containing only tags in lowercase (<a><b><c>)\n  allowed = (((allowed || '') + '').toLowerCase().match(/<[a-z][a-z0-9]*>/g) || []).join('');\n\n  var tags = /<\\/?([a-z0-9]*)\\b[^>]*>?/gi;\n  var commentsAndPhpTags = /<!--[\\s\\S]*?-->|<\\?(?:php)?[\\s\\S]*?\\?>/gi;\n\n  var after = _phpCastString(input);\n  // removes tha '<' char at the end of the string to replicate PHP's behaviour\n  after = after.substring(after.length - 1) === '<' ? after.substring(0, after.length - 1) : after;\n\n  // recursively remove tags to ensure that the returned string doesn't contain forbidden tags after previous passes (e.g. '<<bait/>switch/>')\n  while (true) {\n    var before = after;\n    after = before.replace(commentsAndPhpTags, '').replace(tags, function ($0, $1) {\n      return allowed.indexOf('<' + $1.toLowerCase() + '>') > -1 ? $0 : '';\n    });\n\n    // return once no more tags are removed\n    if (before === after) {\n      return after;\n    }\n  }\n};\n//# sourceMappingURL=strip_tags.js.map","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nmodule.exports = function _phpCastString(value) {\n  // original by: Rafał Kukawski\n  //   example 1: _phpCastString(true)\n  //   returns 1: '1'\n  //   example 2: _phpCastString(false)\n  //   returns 2: ''\n  //   example 3: _phpCastString('foo')\n  //   returns 3: 'foo'\n  //   example 4: _phpCastString(0/0)\n  //   returns 4: 'NAN'\n  //   example 5: _phpCastString(1/0)\n  //   returns 5: 'INF'\n  //   example 6: _phpCastString(-1/0)\n  //   returns 6: '-INF'\n  //   example 7: _phpCastString(null)\n  //   returns 7: ''\n  //   example 8: _phpCastString(undefined)\n  //   returns 8: ''\n  //   example 9: _phpCastString([])\n  //   returns 9: 'Array'\n  //   example 10: _phpCastString({})\n  //   returns 10: 'Object'\n  //   example 11: _phpCastString(0)\n  //   returns 11: '0'\n  //   example 12: _phpCastString(1)\n  //   returns 12: '1'\n  //   example 13: _phpCastString(3.14)\n  //   returns 13: '3.14'\n\n  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);\n\n  switch (type) {\n    case 'boolean':\n      return value ? '1' : '';\n    case 'string':\n      return value;\n    case 'number':\n      if (isNaN(value)) {\n        return 'NAN';\n      }\n\n      if (!isFinite(value)) {\n        return (value < 0 ? '-' : '') + 'INF';\n      }\n\n      return value + '';\n    case 'undefined':\n      return '';\n    case 'object':\n      if (Array.isArray(value)) {\n        return 'Array';\n      }\n\n      if (value !== null) {\n        return 'Object';\n      }\n\n      return '';\n    case 'function':\n    // fall through\n    default:\n      throw new Error('Unsupported value type');\n  }\n};\n//# sourceMappingURL=_phpCastString.js.map","'use strict';\n\nvar reSpace = '[ \\\\t]+';\nvar reSpaceOpt = '[ \\\\t]*';\nvar reMeridian = '(?:([ap])\\\\.?m\\\\.?([\\\\t ]|$))';\nvar reHour24 = '(2[0-4]|[01]?[0-9])';\nvar reHour24lz = '([01][0-9]|2[0-4])';\nvar reHour12 = '(0?[1-9]|1[0-2])';\nvar reMinute = '([0-5]?[0-9])';\nvar reMinutelz = '([0-5][0-9])';\nvar reSecond = '(60|[0-5]?[0-9])';\nvar reSecondlz = '(60|[0-5][0-9])';\nvar reFrac = '(?:\\\\.([0-9]+))';\n\nvar reDayfull = 'sunday|monday|tuesday|wednesday|thursday|friday|saturday';\nvar reDayabbr = 'sun|mon|tue|wed|thu|fri|sat';\nvar reDaytext = reDayfull + '|' + reDayabbr + '|weekdays?';\n\nvar reReltextnumber = 'first|second|third|fourth|fifth|sixth|seventh|eighth?|ninth|tenth|eleventh|twelfth';\nvar reReltexttext = 'next|last|previous|this';\nvar reReltextunit = '(?:second|sec|minute|min|hour|day|fortnight|forthnight|month|year)s?|weeks|' + reDaytext;\n\nvar reYear = '([0-9]{1,4})';\nvar reYear2 = '([0-9]{2})';\nvar reYear4 = '([0-9]{4})';\nvar reYear4withSign = '([+-]?[0-9]{4})';\nvar reMonth = '(1[0-2]|0?[0-9])';\nvar reMonthlz = '(0[0-9]|1[0-2])';\nvar reDay = '(?:(3[01]|[0-2]?[0-9])(?:st|nd|rd|th)?)';\nvar reDaylz = '(0[0-9]|[1-2][0-9]|3[01])';\n\nvar reMonthFull = 'january|february|march|april|may|june|july|august|september|october|november|december';\nvar reMonthAbbr = 'jan|feb|mar|apr|may|jun|jul|aug|sept?|oct|nov|dec';\nvar reMonthroman = 'i[vx]|vi{0,3}|xi{0,2}|i{1,3}';\nvar reMonthText = '(' + reMonthFull + '|' + reMonthAbbr + '|' + reMonthroman + ')';\n\nvar reTzCorrection = '((?:GMT)?([+-])' + reHour24 + ':?' + reMinute + '?)';\nvar reDayOfYear = '(00[1-9]|0[1-9][0-9]|[12][0-9][0-9]|3[0-5][0-9]|36[0-6])';\nvar reWeekOfYear = '(0[1-9]|[1-4][0-9]|5[0-3])';\n\nfunction processMeridian(hour, meridian) {\n  meridian = meridian && meridian.toLowerCase();\n\n  switch (meridian) {\n    case 'a':\n      hour += hour === 12 ? -12 : 0;\n      break;\n    case 'p':\n      hour += hour !== 12 ? 12 : 0;\n      break;\n  }\n\n  return hour;\n}\n\nfunction processYear(yearStr) {\n  var year = +yearStr;\n\n  if (yearStr.length < 4 && year < 100) {\n    year += year < 70 ? 2000 : 1900;\n  }\n\n  return year;\n}\n\nfunction lookupMonth(monthStr) {\n  return {\n    jan: 0,\n    january: 0,\n    i: 0,\n    feb: 1,\n    february: 1,\n    ii: 1,\n    mar: 2,\n    march: 2,\n    iii: 2,\n    apr: 3,\n    april: 3,\n    iv: 3,\n    may: 4,\n    v: 4,\n    jun: 5,\n    june: 5,\n    vi: 5,\n    jul: 6,\n    july: 6,\n    vii: 6,\n    aug: 7,\n    august: 7,\n    viii: 7,\n    sep: 8,\n    sept: 8,\n    september: 8,\n    ix: 8,\n    oct: 9,\n    october: 9,\n    x: 9,\n    nov: 10,\n    november: 10,\n    xi: 10,\n    dec: 11,\n    december: 11,\n    xii: 11\n  }[monthStr.toLowerCase()];\n}\n\nfunction lookupWeekday(dayStr) {\n  var desiredSundayNumber = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  var dayNumbers = {\n    mon: 1,\n    monday: 1,\n    tue: 2,\n    tuesday: 2,\n    wed: 3,\n    wednesday: 3,\n    thu: 4,\n    thursday: 4,\n    fri: 5,\n    friday: 5,\n    sat: 6,\n    saturday: 6,\n    sun: 0,\n    sunday: 0\n  };\n\n  return dayNumbers[dayStr.toLowerCase()] || desiredSundayNumber;\n}\n\nfunction lookupRelative(relText) {\n  var relativeNumbers = {\n    last: -1,\n    previous: -1,\n    this: 0,\n    first: 1,\n    next: 1,\n    second: 2,\n    third: 3,\n    fourth: 4,\n    fifth: 5,\n    sixth: 6,\n    seventh: 7,\n    eight: 8,\n    eighth: 8,\n    ninth: 9,\n    tenth: 10,\n    eleventh: 11,\n    twelfth: 12\n  };\n\n  var relativeBehavior = {\n    this: 1\n  };\n\n  var relTextLower = relText.toLowerCase();\n\n  return {\n    amount: relativeNumbers[relTextLower],\n    behavior: relativeBehavior[relTextLower] || 0\n  };\n}\n\nfunction processTzCorrection(tzOffset, oldValue) {\n  var reTzCorrectionLoose = /(?:GMT)?([+-])(\\d+)(:?)(\\d{0,2})/i;\n  tzOffset = tzOffset && tzOffset.match(reTzCorrectionLoose);\n\n  if (!tzOffset) {\n    return oldValue;\n  }\n\n  var sign = tzOffset[1] === '-' ? 1 : -1;\n  var hours = +tzOffset[2];\n  var minutes = +tzOffset[4];\n\n  if (!tzOffset[4] && !tzOffset[3]) {\n    minutes = Math.floor(hours % 100);\n    hours = Math.floor(hours / 100);\n  }\n\n  return sign * (hours * 60 + minutes);\n}\n\nvar formats = {\n  yesterday: {\n    regex: /^yesterday/i,\n    name: 'yesterday',\n    callback: function callback() {\n      this.rd -= 1;\n      return this.resetTime();\n    }\n  },\n\n  now: {\n    regex: /^now/i,\n    name: 'now'\n    // do nothing\n  },\n\n  noon: {\n    regex: /^noon/i,\n    name: 'noon',\n    callback: function callback() {\n      return this.resetTime() && this.time(12, 0, 0, 0);\n    }\n  },\n\n  midnightOrToday: {\n    regex: /^(midnight|today)/i,\n    name: 'midnight | today',\n    callback: function callback() {\n      return this.resetTime();\n    }\n  },\n\n  tomorrow: {\n    regex: /^tomorrow/i,\n    name: 'tomorrow',\n    callback: function callback() {\n      this.rd += 1;\n      return this.resetTime();\n    }\n  },\n\n  timestamp: {\n    regex: /^@(-?\\d+)/i,\n    name: 'timestamp',\n    callback: function callback(match, timestamp) {\n      this.rs += +timestamp;\n      this.y = 1970;\n      this.m = 0;\n      this.d = 1;\n      this.dates = 0;\n\n      return this.resetTime() && this.zone(0);\n    }\n  },\n\n  firstOrLastDay: {\n    regex: /^(first|last) day of/i,\n    name: 'firstdayof | lastdayof',\n    callback: function callback(match, day) {\n      if (day.toLowerCase() === 'first') {\n        this.firstOrLastDayOfMonth = 1;\n      } else {\n        this.firstOrLastDayOfMonth = -1;\n      }\n    }\n  },\n\n  backOrFrontOf: {\n    regex: RegExp('^(back|front) of ' + reHour24 + reSpaceOpt + reMeridian + '?', 'i'),\n    name: 'backof | frontof',\n    callback: function callback(match, side, hours, meridian) {\n      var back = side.toLowerCase() === 'back';\n      var hour = +hours;\n      var minute = 15;\n\n      if (!back) {\n        hour -= 1;\n        minute = 45;\n      }\n\n      hour = processMeridian(hour, meridian);\n\n      return this.resetTime() && this.time(hour, minute, 0, 0);\n    }\n  },\n\n  weekdayOf: {\n    regex: RegExp('^(' + reReltextnumber + '|' + reReltexttext + ')' + reSpace + '(' + reDayfull + '|' + reDayabbr + ')' + reSpace + 'of', 'i'),\n    name: 'weekdayof'\n    // todo\n  },\n\n  mssqltime: {\n    regex: RegExp('^' + reHour12 + ':' + reMinutelz + ':' + reSecondlz + '[:.]([0-9]+)' + reMeridian, 'i'),\n    name: 'mssqltime',\n    callback: function callback(match, hour, minute, second, frac, meridian) {\n      return this.time(processMeridian(+hour, meridian), +minute, +second, +frac.substr(0, 3));\n    }\n  },\n\n  timeLong12: {\n    regex: RegExp('^' + reHour12 + '[:.]' + reMinute + '[:.]' + reSecondlz + reSpaceOpt + reMeridian, 'i'),\n    name: 'timelong12',\n    callback: function callback(match, hour, minute, second, meridian) {\n      return this.time(processMeridian(+hour, meridian), +minute, +second, 0);\n    }\n  },\n\n  timeShort12: {\n    regex: RegExp('^' + reHour12 + '[:.]' + reMinutelz + reSpaceOpt + reMeridian, 'i'),\n    name: 'timeshort12',\n    callback: function callback(match, hour, minute, meridian) {\n      return this.time(processMeridian(+hour, meridian), +minute, 0, 0);\n    }\n  },\n\n  timeTiny12: {\n    regex: RegExp('^' + reHour12 + reSpaceOpt + reMeridian, 'i'),\n    name: 'timetiny12',\n    callback: function callback(match, hour, meridian) {\n      return this.time(processMeridian(+hour, meridian), 0, 0, 0);\n    }\n  },\n\n  soap: {\n    regex: RegExp('^' + reYear4 + '-' + reMonthlz + '-' + reDaylz + 'T' + reHour24lz + ':' + reMinutelz + ':' + reSecondlz + reFrac + reTzCorrection + '?', 'i'),\n    name: 'soap',\n    callback: function callback(match, year, month, day, hour, minute, second, frac, tzCorrection) {\n      return this.ymd(+year, month - 1, +day) && this.time(+hour, +minute, +second, +frac.substr(0, 3)) && this.zone(processTzCorrection(tzCorrection));\n    }\n  },\n\n  wddx: {\n    regex: RegExp('^' + reYear4 + '-' + reMonth + '-' + reDay + 'T' + reHour24 + ':' + reMinute + ':' + reSecond),\n    name: 'wddx',\n    callback: function callback(match, year, month, day, hour, minute, second) {\n      return this.ymd(+year, month - 1, +day) && this.time(+hour, +minute, +second, 0);\n    }\n  },\n\n  exif: {\n    regex: RegExp('^' + reYear4 + ':' + reMonthlz + ':' + reDaylz + ' ' + reHour24lz + ':' + reMinutelz + ':' + reSecondlz, 'i'),\n    name: 'exif',\n    callback: function callback(match, year, month, day, hour, minute, second) {\n      return this.ymd(+year, month - 1, +day) && this.time(+hour, +minute, +second, 0);\n    }\n  },\n\n  xmlRpc: {\n    regex: RegExp('^' + reYear4 + reMonthlz + reDaylz + 'T' + reHour24 + ':' + reMinutelz + ':' + reSecondlz),\n    name: 'xmlrpc',\n    callback: function callback(match, year, month, day, hour, minute, second) {\n      return this.ymd(+year, month - 1, +day) && this.time(+hour, +minute, +second, 0);\n    }\n  },\n\n  xmlRpcNoColon: {\n    regex: RegExp('^' + reYear4 + reMonthlz + reDaylz + '[Tt]' + reHour24 + reMinutelz + reSecondlz),\n    name: 'xmlrpcnocolon',\n    callback: function callback(match, year, month, day, hour, minute, second) {\n      return this.ymd(+year, month - 1, +day) && this.time(+hour, +minute, +second, 0);\n    }\n  },\n\n  clf: {\n    regex: RegExp('^' + reDay + '/(' + reMonthAbbr + ')/' + reYear4 + ':' + reHour24lz + ':' + reMinutelz + ':' + reSecondlz + reSpace + reTzCorrection, 'i'),\n    name: 'clf',\n    callback: function callback(match, day, month, year, hour, minute, second, tzCorrection) {\n      return this.ymd(+year, lookupMonth(month), +day) && this.time(+hour, +minute, +second, 0) && this.zone(processTzCorrection(tzCorrection));\n    }\n  },\n\n  iso8601long: {\n    regex: RegExp('^t?' + reHour24 + '[:.]' + reMinute + '[:.]' + reSecond + reFrac, 'i'),\n    name: 'iso8601long',\n    callback: function callback(match, hour, minute, second, frac) {\n      return this.time(+hour, +minute, +second, +frac.substr(0, 3));\n    }\n  },\n\n  dateTextual: {\n    regex: RegExp('^' + reMonthText + '[ .\\\\t-]*' + reDay + '[,.stndrh\\\\t ]+' + reYear, 'i'),\n    name: 'datetextual',\n    callback: function callback(match, month, day, year) {\n      return this.ymd(processYear(year), lookupMonth(month), +day);\n    }\n  },\n\n  pointedDate4: {\n    regex: RegExp('^' + reDay + '[.\\\\t-]' + reMonth + '[.-]' + reYear4),\n    name: 'pointeddate4',\n    callback: function callback(match, day, month, year) {\n      return this.ymd(+year, month - 1, +day);\n    }\n  },\n\n  pointedDate2: {\n    regex: RegExp('^' + reDay + '[.\\\\t]' + reMonth + '\\\\.' + reYear2),\n    name: 'pointeddate2',\n    callback: function callback(match, day, month, year) {\n      return this.ymd(processYear(year), month - 1, +day);\n    }\n  },\n\n  timeLong24: {\n    regex: RegExp('^t?' + reHour24 + '[:.]' + reMinute + '[:.]' + reSecond),\n    name: 'timelong24',\n    callback: function callback(match, hour, minute, second) {\n      return this.time(+hour, +minute, +second, 0);\n    }\n  },\n\n  dateNoColon: {\n    regex: RegExp('^' + reYear4 + reMonthlz + reDaylz),\n    name: 'datenocolon',\n    callback: function callback(match, year, month, day) {\n      return this.ymd(+year, month - 1, +day);\n    }\n  },\n\n  pgydotd: {\n    regex: RegExp('^' + reYear4 + '\\\\.?' + reDayOfYear),\n    name: 'pgydotd',\n    callback: function callback(match, year, day) {\n      return this.ymd(+year, 0, +day);\n    }\n  },\n\n  timeShort24: {\n    regex: RegExp('^t?' + reHour24 + '[:.]' + reMinute, 'i'),\n    name: 'timeshort24',\n    callback: function callback(match, hour, minute) {\n      return this.time(+hour, +minute, 0, 0);\n    }\n  },\n\n  iso8601noColon: {\n    regex: RegExp('^t?' + reHour24lz + reMinutelz + reSecondlz, 'i'),\n    name: 'iso8601nocolon',\n    callback: function callback(match, hour, minute, second) {\n      return this.time(+hour, +minute, +second, 0);\n    }\n  },\n\n  iso8601dateSlash: {\n    // eventhough the trailing slash is optional in PHP\n    // here it's mandatory and inputs without the slash\n    // are handled by dateslash\n    regex: RegExp('^' + reYear4 + '/' + reMonthlz + '/' + reDaylz + '/'),\n    name: 'iso8601dateslash',\n    callback: function callback(match, year, month, day) {\n      return this.ymd(+year, month - 1, +day);\n    }\n  },\n\n  dateSlash: {\n    regex: RegExp('^' + reYear4 + '/' + reMonth + '/' + reDay),\n    name: 'dateslash',\n    callback: function callback(match, year, month, day) {\n      return this.ymd(+year, month - 1, +day);\n    }\n  },\n\n  american: {\n    regex: RegExp('^' + reMonth + '/' + reDay + '/' + reYear),\n    name: 'american',\n    callback: function callback(match, month, day, year) {\n      return this.ymd(processYear(year), month - 1, +day);\n    }\n  },\n\n  americanShort: {\n    regex: RegExp('^' + reMonth + '/' + reDay),\n    name: 'americanshort',\n    callback: function callback(match, month, day) {\n      return this.ymd(this.y, month - 1, +day);\n    }\n  },\n\n  gnuDateShortOrIso8601date2: {\n    // iso8601date2 is complete subset of gnudateshort\n    regex: RegExp('^' + reYear + '-' + reMonth + '-' + reDay),\n    name: 'gnudateshort | iso8601date2',\n    callback: function callback(match, year, month, day) {\n      return this.ymd(processYear(year), month - 1, +day);\n    }\n  },\n\n  iso8601date4: {\n    regex: RegExp('^' + reYear4withSign + '-' + reMonthlz + '-' + reDaylz),\n    name: 'iso8601date4',\n    callback: function callback(match, year, month, day) {\n      return this.ymd(+year, month - 1, +day);\n    }\n  },\n\n  gnuNoColon: {\n    regex: RegExp('^t' + reHour24lz + reMinutelz, 'i'),\n    name: 'gnunocolon',\n    callback: function callback(match, hour, minute) {\n      return this.time(+hour, +minute, 0, this.f);\n    }\n  },\n\n  gnuDateShorter: {\n    regex: RegExp('^' + reYear4 + '-' + reMonth),\n    name: 'gnudateshorter',\n    callback: function callback(match, year, month) {\n      return this.ymd(+year, month - 1, 1);\n    }\n  },\n\n  pgTextReverse: {\n    // note: allowed years are from 32-9999\n    // years below 32 should be treated as days in datefull\n    regex: RegExp('^' + '(\\\\d{3,4}|[4-9]\\\\d|3[2-9])-(' + reMonthAbbr + ')-' + reDaylz, 'i'),\n    name: 'pgtextreverse',\n    callback: function callback(match, year, month, day) {\n      return this.ymd(processYear(year), lookupMonth(month), +day);\n    }\n  },\n\n  dateFull: {\n    regex: RegExp('^' + reDay + '[ \\\\t.-]*' + reMonthText + '[ \\\\t.-]*' + reYear, 'i'),\n    name: 'datefull',\n    callback: function callback(match, day, month, year) {\n      return this.ymd(processYear(year), lookupMonth(month), +day);\n    }\n  },\n\n  dateNoDay: {\n    regex: RegExp('^' + reMonthText + '[ .\\\\t-]*' + reYear4, 'i'),\n    name: 'datenoday',\n    callback: function callback(match, month, year) {\n      return this.ymd(+year, lookupMonth(month), 1);\n    }\n  },\n\n  dateNoDayRev: {\n    regex: RegExp('^' + reYear4 + '[ .\\\\t-]*' + reMonthText, 'i'),\n    name: 'datenodayrev',\n    callback: function callback(match, year, month) {\n      return this.ymd(+year, lookupMonth(month), 1);\n    }\n  },\n\n  pgTextShort: {\n    regex: RegExp('^(' + reMonthAbbr + ')-' + reDaylz + '-' + reYear, 'i'),\n    name: 'pgtextshort',\n    callback: function callback(match, month, day, year) {\n      return this.ymd(processYear(year), lookupMonth(month), +day);\n    }\n  },\n\n  dateNoYear: {\n    regex: RegExp('^' + reMonthText + '[ .\\\\t-]*' + reDay + '[,.stndrh\\\\t ]*', 'i'),\n    name: 'datenoyear',\n    callback: function callback(match, month, day) {\n      return this.ymd(this.y, lookupMonth(month), +day);\n    }\n  },\n\n  dateNoYearRev: {\n    regex: RegExp('^' + reDay + '[ .\\\\t-]*' + reMonthText, 'i'),\n    name: 'datenoyearrev',\n    callback: function callback(match, day, month) {\n      return this.ymd(this.y, lookupMonth(month), +day);\n    }\n  },\n\n  isoWeekDay: {\n    regex: RegExp('^' + reYear4 + '-?W' + reWeekOfYear + '(?:-?([0-7]))?'),\n    name: 'isoweekday | isoweek',\n    callback: function callback(match, year, week, day) {\n      day = day ? +day : 1;\n\n      if (!this.ymd(+year, 0, 1)) {\n        return false;\n      }\n\n      // get day of week for Jan 1st\n      var dayOfWeek = new Date(this.y, this.m, this.d).getDay();\n\n      // and use the day to figure out the offset for day 1 of week 1\n      dayOfWeek = 0 - (dayOfWeek > 4 ? dayOfWeek - 7 : dayOfWeek);\n\n      this.rd += dayOfWeek + (week - 1) * 7 + day;\n    }\n  },\n\n  relativeText: {\n    regex: RegExp('^(' + reReltextnumber + '|' + reReltexttext + ')' + reSpace + '(' + reReltextunit + ')', 'i'),\n    name: 'relativetext',\n    callback: function callback(match, relValue, relUnit) {\n      // todo: implement handling of 'this time-unit'\n      // eslint-disable-next-line no-unused-vars\n      var _lookupRelative = lookupRelative(relValue),\n          amount = _lookupRelative.amount,\n          behavior = _lookupRelative.behavior;\n\n      switch (relUnit.toLowerCase()) {\n        case 'sec':\n        case 'secs':\n        case 'second':\n        case 'seconds':\n          this.rs += amount;\n          break;\n        case 'min':\n        case 'mins':\n        case 'minute':\n        case 'minutes':\n          this.ri += amount;\n          break;\n        case 'hour':\n        case 'hours':\n          this.rh += amount;\n          break;\n        case 'day':\n        case 'days':\n          this.rd += amount;\n          break;\n        case 'fortnight':\n        case 'fortnights':\n        case 'forthnight':\n        case 'forthnights':\n          this.rd += amount * 14;\n          break;\n        case 'week':\n        case 'weeks':\n          this.rd += amount * 7;\n          break;\n        case 'month':\n        case 'months':\n          this.rm += amount;\n          break;\n        case 'year':\n        case 'years':\n          this.ry += amount;\n          break;\n        case 'mon':case 'monday':\n        case 'tue':case 'tuesday':\n        case 'wed':case 'wednesday':\n        case 'thu':case 'thursday':\n        case 'fri':case 'friday':\n        case 'sat':case 'saturday':\n        case 'sun':case 'sunday':\n          this.resetTime();\n          this.weekday = lookupWeekday(relUnit, 7);\n          this.weekdayBehavior = 1;\n          this.rd += (amount > 0 ? amount - 1 : amount) * 7;\n          break;\n        case 'weekday':\n        case 'weekdays':\n          // todo\n          break;\n      }\n    }\n  },\n\n  relative: {\n    regex: RegExp('^([+-]*)[ \\\\t]*(\\\\d+)' + reSpaceOpt + '(' + reReltextunit + '|week)', 'i'),\n    name: 'relative',\n    callback: function callback(match, signs, relValue, relUnit) {\n      var minuses = signs.replace(/[^-]/g, '').length;\n\n      var amount = +relValue * Math.pow(-1, minuses);\n\n      switch (relUnit.toLowerCase()) {\n        case 'sec':\n        case 'secs':\n        case 'second':\n        case 'seconds':\n          this.rs += amount;\n          break;\n        case 'min':\n        case 'mins':\n        case 'minute':\n        case 'minutes':\n          this.ri += amount;\n          break;\n        case 'hour':\n        case 'hours':\n          this.rh += amount;\n          break;\n        case 'day':\n        case 'days':\n          this.rd += amount;\n          break;\n        case 'fortnight':\n        case 'fortnights':\n        case 'forthnight':\n        case 'forthnights':\n          this.rd += amount * 14;\n          break;\n        case 'week':\n        case 'weeks':\n          this.rd += amount * 7;\n          break;\n        case 'month':\n        case 'months':\n          this.rm += amount;\n          break;\n        case 'year':\n        case 'years':\n          this.ry += amount;\n          break;\n        case 'mon':case 'monday':\n        case 'tue':case 'tuesday':\n        case 'wed':case 'wednesday':\n        case 'thu':case 'thursday':\n        case 'fri':case 'friday':\n        case 'sat':case 'saturday':\n        case 'sun':case 'sunday':\n          this.resetTime();\n          this.weekday = lookupWeekday(relUnit, 7);\n          this.weekdayBehavior = 1;\n          this.rd += (amount > 0 ? amount - 1 : amount) * 7;\n          break;\n        case 'weekday':\n        case 'weekdays':\n          // todo\n          break;\n      }\n    }\n  },\n\n  dayText: {\n    regex: RegExp('^(' + reDaytext + ')', 'i'),\n    name: 'daytext',\n    callback: function callback(match, dayText) {\n      this.resetTime();\n      this.weekday = lookupWeekday(dayText, 0);\n\n      if (this.weekdayBehavior !== 2) {\n        this.weekdayBehavior = 1;\n      }\n    }\n  },\n\n  relativeTextWeek: {\n    regex: RegExp('^(' + reReltexttext + ')' + reSpace + 'week', 'i'),\n    name: 'relativetextweek',\n    callback: function callback(match, relText) {\n      this.weekdayBehavior = 2;\n\n      switch (relText.toLowerCase()) {\n        case 'this':\n          this.rd += 0;\n          break;\n        case 'next':\n          this.rd += 7;\n          break;\n        case 'last':\n        case 'previous':\n          this.rd -= 7;\n          break;\n      }\n\n      if (isNaN(this.weekday)) {\n        this.weekday = 1;\n      }\n    }\n  },\n\n  monthFullOrMonthAbbr: {\n    regex: RegExp('^(' + reMonthFull + '|' + reMonthAbbr + ')', 'i'),\n    name: 'monthfull | monthabbr',\n    callback: function callback(match, month) {\n      return this.ymd(this.y, lookupMonth(month), this.d);\n    }\n  },\n\n  tzCorrection: {\n    regex: RegExp('^' + reTzCorrection, 'i'),\n    name: 'tzcorrection',\n    callback: function callback(tzCorrection) {\n      return this.zone(processTzCorrection(tzCorrection));\n    }\n  },\n\n  ago: {\n    regex: /^ago/i,\n    name: 'ago',\n    callback: function callback() {\n      this.ry = -this.ry;\n      this.rm = -this.rm;\n      this.rd = -this.rd;\n      this.rh = -this.rh;\n      this.ri = -this.ri;\n      this.rs = -this.rs;\n      this.rf = -this.rf;\n    }\n  },\n\n  gnuNoColon2: {\n    // second instance of gnunocolon, without leading 't'\n    // it's down here, because it is very generic (4 digits in a row)\n    // thus conflicts with many rules above\n    // only year4 should come afterwards\n    regex: RegExp('^' + reHour24lz + reMinutelz, 'i'),\n    name: 'gnunocolon',\n    callback: function callback(match, hour, minute) {\n      return this.time(+hour, +minute, 0, this.f);\n    }\n  },\n\n  year4: {\n    regex: RegExp('^' + reYear4),\n    name: 'year4',\n    callback: function callback(match, year) {\n      this.y = +year;\n      return true;\n    }\n  },\n\n  whitespace: {\n    regex: /^[ .,\\t]+/,\n    name: 'whitespace'\n    // do nothing\n  },\n\n  any: {\n    regex: /^[\\s\\S]+/,\n    name: 'any',\n    callback: function callback() {\n      return false;\n    }\n  }\n};\n\nvar resultProto = {\n  // date\n  y: NaN,\n  m: NaN,\n  d: NaN,\n  // time\n  h: NaN,\n  i: NaN,\n  s: NaN,\n  f: NaN,\n\n  // relative shifts\n  ry: 0,\n  rm: 0,\n  rd: 0,\n  rh: 0,\n  ri: 0,\n  rs: 0,\n  rf: 0,\n\n  // weekday related shifts\n  weekday: NaN,\n  weekdayBehavior: 0,\n\n  // first or last day of month\n  // 0 none, 1 first, -1 last\n  firstOrLastDayOfMonth: 0,\n\n  // timezone correction in minutes\n  z: NaN,\n\n  // counters\n  dates: 0,\n  times: 0,\n  zones: 0,\n\n  // helper functions\n  ymd: function ymd(y, m, d) {\n    if (this.dates > 0) {\n      return false;\n    }\n\n    this.dates++;\n    this.y = y;\n    this.m = m;\n    this.d = d;\n    return true;\n  },\n  time: function time(h, i, s, f) {\n    if (this.times > 0) {\n      return false;\n    }\n\n    this.times++;\n    this.h = h;\n    this.i = i;\n    this.s = s;\n    this.f = f;\n\n    return true;\n  },\n  resetTime: function resetTime() {\n    this.h = 0;\n    this.i = 0;\n    this.s = 0;\n    this.f = 0;\n    this.times = 0;\n\n    return true;\n  },\n  zone: function zone(minutes) {\n    if (this.zones <= 1) {\n      this.zones++;\n      this.z = minutes;\n      return true;\n    }\n\n    return false;\n  },\n  toDate: function toDate(relativeTo) {\n    if (this.dates && !this.times) {\n      this.h = this.i = this.s = this.f = 0;\n    }\n\n    // fill holes\n    if (isNaN(this.y)) {\n      this.y = relativeTo.getFullYear();\n    }\n\n    if (isNaN(this.m)) {\n      this.m = relativeTo.getMonth();\n    }\n\n    if (isNaN(this.d)) {\n      this.d = relativeTo.getDate();\n    }\n\n    if (isNaN(this.h)) {\n      this.h = relativeTo.getHours();\n    }\n\n    if (isNaN(this.i)) {\n      this.i = relativeTo.getMinutes();\n    }\n\n    if (isNaN(this.s)) {\n      this.s = relativeTo.getSeconds();\n    }\n\n    if (isNaN(this.f)) {\n      this.f = relativeTo.getMilliseconds();\n    }\n\n    // adjust special early\n    switch (this.firstOrLastDayOfMonth) {\n      case 1:\n        this.d = 1;\n        break;\n      case -1:\n        this.d = 0;\n        this.m += 1;\n        break;\n    }\n\n    if (!isNaN(this.weekday)) {\n      var date = new Date(relativeTo.getTime());\n      date.setFullYear(this.y, this.m, this.d);\n      date.setHours(this.h, this.i, this.s, this.f);\n\n      var dow = date.getDay();\n\n      if (this.weekdayBehavior === 2) {\n        // To make \"this week\" work, where the current day of week is a \"sunday\"\n        if (dow === 0 && this.weekday !== 0) {\n          this.weekday = -6;\n        }\n\n        // To make \"sunday this week\" work, where the current day of week is not a \"sunday\"\n        if (this.weekday === 0 && dow !== 0) {\n          this.weekday = 7;\n        }\n\n        this.d -= dow;\n        this.d += this.weekday;\n      } else {\n        var diff = this.weekday - dow;\n\n        // some PHP magic\n        if (this.rd < 0 && diff < 0 || this.rd >= 0 && diff <= -this.weekdayBehavior) {\n          diff += 7;\n        }\n\n        if (this.weekday >= 0) {\n          this.d += diff;\n        } else {\n          this.d -= 7 - (Math.abs(this.weekday) - dow);\n        }\n\n        this.weekday = NaN;\n      }\n    }\n\n    // adjust relative\n    this.y += this.ry;\n    this.m += this.rm;\n    this.d += this.rd;\n\n    this.h += this.rh;\n    this.i += this.ri;\n    this.s += this.rs;\n    this.f += this.rf;\n\n    this.ry = this.rm = this.rd = 0;\n    this.rh = this.ri = this.rs = this.rf = 0;\n\n    var result = new Date(relativeTo.getTime());\n    // since Date constructor treats years <= 99 as 1900+\n    // it can't be used, thus this weird way\n    result.setFullYear(this.y, this.m, this.d);\n    result.setHours(this.h, this.i, this.s, this.f);\n\n    // note: this is done twice in PHP\n    // early when processing special relatives\n    // and late\n    // todo: check if the logic can be reduced\n    // to just one time action\n    switch (this.firstOrLastDayOfMonth) {\n      case 1:\n        result.setDate(1);\n        break;\n      case -1:\n        result.setMonth(result.getMonth() + 1, 0);\n        break;\n    }\n\n    // adjust timezone\n    if (!isNaN(this.z) && result.getTimezoneOffset() !== this.z) {\n      result.setUTCFullYear(result.getFullYear(), result.getMonth(), result.getDate());\n\n      result.setUTCHours(result.getHours(), result.getMinutes() + this.z, result.getSeconds(), result.getMilliseconds());\n    }\n\n    return result;\n  }\n};\n\nmodule.exports = function strtotime(str, now) {\n  //       discuss at: http://locutus.io/php/strtotime/\n  //      original by: Caio Ariede (http://caioariede.com)\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //      improved by: Caio Ariede (http://caioariede.com)\n  //      improved by: A. Matías Quezada (http://amatiasq.com)\n  //      improved by: preuter\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //      improved by: Mirko Faber\n  //         input by: David\n  //      bugfixed by: Wagner B. Soares\n  //      bugfixed by: Artur Tchernychev\n  //      bugfixed by: Stephan Bösch-Plepelits (http://github.com/plepe)\n  // reimplemented by: Rafał Kukawski\n  //           note 1: Examples all have a fixed timestamp to prevent\n  //           note 1: tests to fail because of variable time(zones)\n  //        example 1: strtotime('+1 day', 1129633200)\n  //        returns 1: 1129719600\n  //        example 2: strtotime('+1 week 2 days 4 hours 2 seconds', 1129633200)\n  //        returns 2: 1130425202\n  //        example 3: strtotime('last month', 1129633200)\n  //        returns 3: 1127041200\n  //        example 4: strtotime('2009-05-04 08:30:00+00')\n  //        returns 4: 1241425800\n  //        example 5: strtotime('2009-05-04 08:30:00+02:00')\n  //        returns 5: 1241418600\n  if (now == null) {\n    now = Math.floor(Date.now() / 1000);\n  }\n\n  // the rule order is very fragile\n  // as many formats are similar to others\n  // so small change can cause\n  // input misinterpretation\n  var rules = [formats.yesterday, formats.now, formats.noon, formats.midnightOrToday, formats.tomorrow, formats.timestamp, formats.firstOrLastDay, formats.backOrFrontOf,\n  // formats.weekdayOf, // not yet implemented\n  formats.mssqltime, formats.timeLong12, formats.timeShort12, formats.timeTiny12, formats.soap, formats.wddx, formats.exif, formats.xmlRpc, formats.xmlRpcNoColon, formats.clf, formats.iso8601long, formats.dateTextual, formats.pointedDate4, formats.pointedDate2, formats.timeLong24, formats.dateNoColon, formats.pgydotd, formats.timeShort24, formats.iso8601noColon,\n  // iso8601dateSlash needs to come before dateSlash\n  formats.iso8601dateSlash, formats.dateSlash, formats.american, formats.americanShort, formats.gnuDateShortOrIso8601date2, formats.iso8601date4, formats.gnuNoColon, formats.gnuDateShorter, formats.pgTextReverse, formats.dateFull, formats.dateNoDay, formats.dateNoDayRev, formats.pgTextShort, formats.dateNoYear, formats.dateNoYearRev, formats.isoWeekDay, formats.relativeText, formats.relative, formats.dayText, formats.relativeTextWeek, formats.monthFullOrMonthAbbr, formats.tzCorrection, formats.ago, formats.gnuNoColon2, formats.year4,\n  // note: the two rules below\n  // should always come last\n  formats.whitespace, formats.any];\n\n  var result = Object.create(resultProto);\n\n  while (str.length) {\n    for (var i = 0, l = rules.length; i < l; i++) {\n      var format = rules[i];\n\n      var match = str.match(format.regex);\n\n      if (match) {\n        // care only about false results. Ignore other values\n        if (format.callback && format.callback.apply(result, match) === false) {\n          return false;\n        }\n\n        str = str.substr(match[0].length);\n        break;\n      }\n    }\n  }\n\n  return Math.floor(result.toDate(new Date(now * 1000)) / 1000);\n};\n//# sourceMappingURL=strtotime.js.map","'use strict';\n\nmodule.exports = function date(format, timestamp) {\n  //  discuss at: http://locutus.io/php/date/\n  // original by: Carlos R. L. Rodrigues (http://www.jsfromhell.com)\n  // original by: gettimeofday\n  //    parts by: Peter-Paul Koch (http://www.quirksmode.org/js/beat.html)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: MeEtc (http://yass.meetcweb.com)\n  // improved by: Brad Touesnard\n  // improved by: Tim Wiel\n  // improved by: Bryan Elliott\n  // improved by: David Randall\n  // improved by: Theriault (https://github.com/Theriault)\n  // improved by: Theriault (https://github.com/Theriault)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  // improved by: Thomas Beaucourt (http://www.webapp.fr)\n  // improved by: JT\n  // improved by: Theriault (https://github.com/Theriault)\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  // improved by: Theriault (https://github.com/Theriault)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //    input by: majak\n  //    input by: Alex\n  //    input by: Martin\n  //    input by: Alex Wilson\n  //    input by: Haravikk\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: majak\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: omid (http://locutus.io/php/380:380#comment_137122)\n  // bugfixed by: Chris (http://www.devotis.nl/)\n  //      note 1: Uses global: locutus to store the default timezone\n  //      note 1: Although the function potentially allows timezone info\n  //      note 1: (see notes), it currently does not set\n  //      note 1: per a timezone specified by date_default_timezone_set(). Implementers might use\n  //      note 1: $locutus.currentTimezoneOffset and\n  //      note 1: $locutus.currentTimezoneDST set by that function\n  //      note 1: in order to adjust the dates in this function\n  //      note 1: (or our other date functions!) accordingly\n  //   example 1: date('H:m:s \\\\m \\\\i\\\\s \\\\m\\\\o\\\\n\\\\t\\\\h', 1062402400)\n  //   returns 1: '07:09:40 m is month'\n  //   example 2: date('F j, Y, g:i a', 1062462400)\n  //   returns 2: 'September 2, 2003, 12:26 am'\n  //   example 3: date('Y W o', 1062462400)\n  //   returns 3: '2003 36 2003'\n  //   example 4: var $x = date('Y m d', (new Date()).getTime() / 1000)\n  //   example 4: $x = $x + ''\n  //   example 4: var $result = $x.length // 2009 01 09\n  //   returns 4: 10\n  //   example 5: date('W', 1104534000)\n  //   returns 5: '52'\n  //   example 6: date('B t', 1104534000)\n  //   returns 6: '999 31'\n  //   example 7: date('W U', 1293750000.82); // 2010-12-31\n  //   returns 7: '52 1293750000'\n  //   example 8: date('W', 1293836400); // 2011-01-01\n  //   returns 8: '52'\n  //   example 9: date('W Y-m-d', 1293974054); // 2011-01-02\n  //   returns 9: '52 2011-01-02'\n  //        test: skip-1 skip-2 skip-5\n\n  var jsdate, f;\n  // Keep this here (works, but for code commented-out below for file size reasons)\n  // var tal= [];\n  var txtWords = ['Sun', 'Mon', 'Tues', 'Wednes', 'Thurs', 'Fri', 'Satur', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  // trailing backslash -> (dropped)\n  // a backslash followed by any character (including backslash) -> the character\n  // empty string -> empty string\n  var formatChr = /\\\\?(.?)/gi;\n  var formatChrCb = function formatChrCb(t, s) {\n    return f[t] ? f[t]() : s;\n  };\n  var _pad = function _pad(n, c) {\n    n = String(n);\n    while (n.length < c) {\n      n = '0' + n;\n    }\n    return n;\n  };\n  f = {\n    // Day\n    d: function d() {\n      // Day of month w/leading 0; 01..31\n      return _pad(f.j(), 2);\n    },\n    D: function D() {\n      // Shorthand day name; Mon...Sun\n      return f.l().slice(0, 3);\n    },\n    j: function j() {\n      // Day of month; 1..31\n      return jsdate.getDate();\n    },\n    l: function l() {\n      // Full day name; Monday...Sunday\n      return txtWords[f.w()] + 'day';\n    },\n    N: function N() {\n      // ISO-8601 day of week; 1[Mon]..7[Sun]\n      return f.w() || 7;\n    },\n    S: function S() {\n      // Ordinal suffix for day of month; st, nd, rd, th\n      var j = f.j();\n      var i = j % 10;\n      if (i <= 3 && parseInt(j % 100 / 10, 10) === 1) {\n        i = 0;\n      }\n      return ['st', 'nd', 'rd'][i - 1] || 'th';\n    },\n    w: function w() {\n      // Day of week; 0[Sun]..6[Sat]\n      return jsdate.getDay();\n    },\n    z: function z() {\n      // Day of year; 0..365\n      var a = new Date(f.Y(), f.n() - 1, f.j());\n      var b = new Date(f.Y(), 0, 1);\n      return Math.round((a - b) / 864e5);\n    },\n\n    // Week\n    W: function W() {\n      // ISO-8601 week number\n      var a = new Date(f.Y(), f.n() - 1, f.j() - f.N() + 3);\n      var b = new Date(a.getFullYear(), 0, 4);\n      return _pad(1 + Math.round((a - b) / 864e5 / 7), 2);\n    },\n\n    // Month\n    F: function F() {\n      // Full month name; January...December\n      return txtWords[6 + f.n()];\n    },\n    m: function m() {\n      // Month w/leading 0; 01...12\n      return _pad(f.n(), 2);\n    },\n    M: function M() {\n      // Shorthand month name; Jan...Dec\n      return f.F().slice(0, 3);\n    },\n    n: function n() {\n      // Month; 1...12\n      return jsdate.getMonth() + 1;\n    },\n    t: function t() {\n      // Days in month; 28...31\n      return new Date(f.Y(), f.n(), 0).getDate();\n    },\n\n    // Year\n    L: function L() {\n      // Is leap year?; 0 or 1\n      var j = f.Y();\n      return j % 4 === 0 & j % 100 !== 0 | j % 400 === 0;\n    },\n    o: function o() {\n      // ISO-8601 year\n      var n = f.n();\n      var W = f.W();\n      var Y = f.Y();\n      return Y + (n === 12 && W < 9 ? 1 : n === 1 && W > 9 ? -1 : 0);\n    },\n    Y: function Y() {\n      // Full year; e.g. 1980...2010\n      return jsdate.getFullYear();\n    },\n    y: function y() {\n      // Last two digits of year; 00...99\n      return f.Y().toString().slice(-2);\n    },\n\n    // Time\n    a: function a() {\n      // am or pm\n      return jsdate.getHours() > 11 ? 'pm' : 'am';\n    },\n    A: function A() {\n      // AM or PM\n      return f.a().toUpperCase();\n    },\n    B: function B() {\n      // Swatch Internet time; 000..999\n      var H = jsdate.getUTCHours() * 36e2;\n      // Hours\n      var i = jsdate.getUTCMinutes() * 60;\n      // Minutes\n      // Seconds\n      var s = jsdate.getUTCSeconds();\n      return _pad(Math.floor((H + i + s + 36e2) / 86.4) % 1e3, 3);\n    },\n    g: function g() {\n      // 12-Hours; 1..12\n      return f.G() % 12 || 12;\n    },\n    G: function G() {\n      // 24-Hours; 0..23\n      return jsdate.getHours();\n    },\n    h: function h() {\n      // 12-Hours w/leading 0; 01..12\n      return _pad(f.g(), 2);\n    },\n    H: function H() {\n      // 24-Hours w/leading 0; 00..23\n      return _pad(f.G(), 2);\n    },\n    i: function i() {\n      // Minutes w/leading 0; 00..59\n      return _pad(jsdate.getMinutes(), 2);\n    },\n    s: function s() {\n      // Seconds w/leading 0; 00..59\n      return _pad(jsdate.getSeconds(), 2);\n    },\n    u: function u() {\n      // Microseconds; 000000-999000\n      return _pad(jsdate.getMilliseconds() * 1000, 6);\n    },\n\n    // Timezone\n    e: function e() {\n      // Timezone identifier; e.g. Atlantic/Azores, ...\n      // The following works, but requires inclusion of the very large\n      // timezone_abbreviations_list() function.\n      /*              return that.date_default_timezone_get();\n       */\n      var msg = 'Not supported (see source code of date() for timezone on how to add support)';\n      throw new Error(msg);\n    },\n    I: function I() {\n      // DST observed?; 0 or 1\n      // Compares Jan 1 minus Jan 1 UTC to Jul 1 minus Jul 1 UTC.\n      // If they are not equal, then DST is observed.\n      var a = new Date(f.Y(), 0);\n      // Jan 1\n      var c = Date.UTC(f.Y(), 0);\n      // Jan 1 UTC\n      var b = new Date(f.Y(), 6);\n      // Jul 1\n      // Jul 1 UTC\n      var d = Date.UTC(f.Y(), 6);\n      return a - c !== b - d ? 1 : 0;\n    },\n    O: function O() {\n      // Difference to GMT in hour format; e.g. +0200\n      var tzo = jsdate.getTimezoneOffset();\n      var a = Math.abs(tzo);\n      return (tzo > 0 ? '-' : '+') + _pad(Math.floor(a / 60) * 100 + a % 60, 4);\n    },\n    P: function P() {\n      // Difference to GMT w/colon; e.g. +02:00\n      var O = f.O();\n      return O.substr(0, 3) + ':' + O.substr(3, 2);\n    },\n    T: function T() {\n      // The following works, but requires inclusion of the very\n      // large timezone_abbreviations_list() function.\n      /*              var abbr, i, os, _default;\n      if (!tal.length) {\n        tal = that.timezone_abbreviations_list();\n      }\n      if ($locutus && $locutus.default_timezone) {\n        _default = $locutus.default_timezone;\n        for (abbr in tal) {\n          for (i = 0; i < tal[abbr].length; i++) {\n            if (tal[abbr][i].timezone_id === _default) {\n              return abbr.toUpperCase();\n            }\n          }\n        }\n      }\n      for (abbr in tal) {\n        for (i = 0; i < tal[abbr].length; i++) {\n          os = -jsdate.getTimezoneOffset() * 60;\n          if (tal[abbr][i].offset === os) {\n            return abbr.toUpperCase();\n          }\n        }\n      }\n      */\n      return 'UTC';\n    },\n    Z: function Z() {\n      // Timezone offset in seconds (-43200...50400)\n      return -jsdate.getTimezoneOffset() * 60;\n    },\n\n    // Full Date/Time\n    c: function c() {\n      // ISO-8601 date.\n      return 'Y-m-d\\\\TH:i:sP'.replace(formatChr, formatChrCb);\n    },\n    r: function r() {\n      // RFC 2822\n      return 'D, d M Y H:i:s O'.replace(formatChr, formatChrCb);\n    },\n    U: function U() {\n      // Seconds since UNIX epoch\n      return jsdate / 1000 | 0;\n    }\n  };\n\n  var _date = function _date(format, timestamp) {\n    jsdate = timestamp === undefined ? new Date() // Not provided\n    : timestamp instanceof Date ? new Date(timestamp) // JS Date()\n    : new Date(timestamp * 1000) // UNIX timestamp (auto-convert to int)\n    ;\n    return format.replace(formatChr, formatChrCb);\n  };\n\n  return _date(format, timestamp);\n};\n//# sourceMappingURL=date.js.map","'use strict';\n\nmodule.exports = function boolval(mixedVar) {\n  // original by: Will Rowe\n  //   example 1: boolval(true)\n  //   returns 1: true\n  //   example 2: boolval(false)\n  //   returns 2: false\n  //   example 3: boolval(0)\n  //   returns 3: false\n  //   example 4: boolval(0.0)\n  //   returns 4: false\n  //   example 5: boolval('')\n  //   returns 5: false\n  //   example 6: boolval('0')\n  //   returns 6: false\n  //   example 7: boolval([])\n  //   returns 7: false\n  //   example 8: boolval('')\n  //   returns 8: false\n  //   example 9: boolval(null)\n  //   returns 9: false\n  //   example 10: boolval(undefined)\n  //   returns 10: false\n  //   example 11: boolval('true')\n  //   returns 11: true\n\n  if (mixedVar === false) {\n    return false;\n  }\n\n  if (mixedVar === 0 || mixedVar === 0.0) {\n    return false;\n  }\n\n  if (mixedVar === '' || mixedVar === '0') {\n    return false;\n  }\n\n  if (Array.isArray(mixedVar) && mixedVar.length === 0) {\n    return false;\n  }\n\n  if (mixedVar === null || mixedVar === undefined) {\n    return false;\n  }\n\n  return true;\n};\n//# sourceMappingURL=boolval.js.map","module.exports = function (Twig) {\n    'use strict';\n\n    Twig.Templates.registerLoader('ajax', function (location, params, callback, errorCallback) {\n        let template;\n        const {precompiled} = params;\n        const parser = this.parsers[params.parser] || this.parser.twig;\n\n        if (typeof XMLHttpRequest === 'undefined') {\n            throw new Twig.Error('Unsupported platform: Unable to do ajax requests ' +\n                                 'because there is no \"XMLHTTPRequest\" implementation');\n        }\n\n        const xmlhttp = new XMLHttpRequest();\n        xmlhttp.onreadystatechange = function () {\n            let data = null;\n\n            if (xmlhttp.readyState === 4) {\n                if (xmlhttp.status === 200 || (window.cordova && xmlhttp.status === 0)) {\n                    Twig.log.debug('Got template ', xmlhttp.responseText);\n\n                    if (precompiled === true) {\n                        data = JSON.parse(xmlhttp.responseText);\n                    } else {\n                        data = xmlhttp.responseText;\n                    }\n\n                    params.url = location;\n                    params.data = data;\n\n                    template = parser.call(this, params);\n\n                    if (typeof callback === 'function') {\n                        callback(template);\n                    }\n                } else if (typeof errorCallback === 'function') {\n                    errorCallback(xmlhttp);\n                }\n            }\n        };\n\n        xmlhttp.open('GET', location, Boolean(params.async));\n        xmlhttp.send();\n\n        if (params.async) {\n            // TODO: return deferred promise\n            return true;\n        }\n\n        return template;\n    });\n};\n","module.exports = function (Twig) {\n    'use strict';\n\n    let fs;\n    let path;\n\n    try {\n        // Require lib dependencies at runtime\n        fs = require('fs');\n        path = require('path');\n    } catch (error) {\n        // NOTE: this is in a try/catch to avoid errors cross platform\n        console.warn('Missing fs and path modules. ' + error);\n    }\n\n    Twig.Templates.registerLoader('fs', function (location, params, callback, errorCallback) {\n        let template;\n        let data = null;\n        const {precompiled} = params;\n        const parser = this.parsers[params.parser] || this.parser.twig;\n\n        if (!fs || !path) {\n            throw new Twig.Error('Unsupported platform: Unable to load from file ' +\n                                 'because there is no \"fs\" or \"path\" implementation');\n        }\n\n        const loadTemplateFn = function (err, data) {\n            if (err) {\n                if (typeof errorCallback === 'function') {\n                    errorCallback(err);\n                }\n\n                return;\n            }\n\n            if (precompiled === true) {\n                data = JSON.parse(data);\n            }\n\n            params.data = data;\n            params.path = params.path || location;\n\n            // Template is in data\n            template = parser.call(this, params);\n\n            if (typeof callback === 'function') {\n                callback(template);\n            }\n        };\n\n        params.path = params.path || location;\n\n        if (params.async) {\n            fs.stat(params.path, (err, stats) => {\n                if (err || !stats.isFile()) {\n                    if (typeof errorCallback === 'function') {\n                        errorCallback(new Twig.Error('Unable to find template file ' + params.path));\n                    }\n\n                    return;\n                }\n\n                fs.readFile(params.path, 'utf8', loadTemplateFn);\n            });\n            // TODO: return deferred promise\n            return true;\n        }\n\n        try {\n            if (!fs.statSync(params.path).isFile()) {\n                throw new Twig.Error('Unable to find template file ' + params.path);\n            }\n        } catch (error) {\n            throw new Twig.Error('Unable to find template file ' + params.path + '. ' + error);\n        }\n\n        data = fs.readFileSync(params.path, 'utf8');\n        loadTemplateFn(undefined, data);\n        return template;\n    });\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// ## twig.logic.js\n//\n// This file handles tokenizing, compiling and parsing logic tokens. {% ... %}\nmodule.exports = function (Twig) {\n    'use strict';\n\n    /**\n     * Namespace for logic handling.\n     */\n    Twig.logic = {};\n\n    /**\n     * Logic token types.\n     */\n    Twig.logic.type = {\n        if_: 'Twig.logic.type.if',\n        endif: 'Twig.logic.type.endif',\n        for_: 'Twig.logic.type.for',\n        endfor: 'Twig.logic.type.endfor',\n        else_: 'Twig.logic.type.else',\n        elseif: 'Twig.logic.type.elseif',\n        set: 'Twig.logic.type.set',\n        setcapture: 'Twig.logic.type.setcapture',\n        endset: 'Twig.logic.type.endset',\n        filter: 'Twig.logic.type.filter',\n        endfilter: 'Twig.logic.type.endfilter',\n        apply: 'Twig.logic.type.apply',\n        endapply: 'Twig.logic.type.endapply',\n        do: 'Twig.logic.type.do',\n        shortblock: 'Twig.logic.type.shortblock',\n        block: 'Twig.logic.type.block',\n        endblock: 'Twig.logic.type.endblock',\n        extends_: 'Twig.logic.type.extends',\n        use: 'Twig.logic.type.use',\n        include: 'Twig.logic.type.include',\n        spaceless: 'Twig.logic.type.spaceless',\n        endspaceless: 'Twig.logic.type.endspaceless',\n        macro: 'Twig.logic.type.macro',\n        endmacro: 'Twig.logic.type.endmacro',\n        import_: 'Twig.logic.type.import',\n        from: 'Twig.logic.type.from',\n        embed: 'Twig.logic.type.embed',\n        endembed: 'Twig.logic.type.endembed',\n        with: 'Twig.logic.type.with',\n        endwith: 'Twig.logic.type.endwith',\n        deprecated: 'Twig.logic.type.deprecated'\n    };\n\n    // Regular expressions for handling logic tokens.\n    //\n    // Properties:\n    //\n    //      type:  The type of expression this matches\n    //\n    //      regex: A regular expression that matches the format of the token\n    //\n    //      next:  What logic tokens (if any) pop this token off the logic stack. If empty, the\n    //             logic token is assumed to not require an end tag and isn't push onto the stack.\n    //\n    //      open:  Does this tag open a logic expression or is it standalone. For example,\n    //             {% endif %} cannot exist without an opening {% if ... %} tag, so open = false.\n    //\n    //  Functions:\n    //\n    //      compile: A function that handles compiling the token into an output token ready for\n    //               parsing with the parse function.\n    //\n    //      parse:   A function that parses the compiled token into output (HTML / whatever the\n    //               template represents).\n    Twig.logic.definitions = [\n        {\n            /**\n             * If type logic tokens.\n             *\n             *  Format: {% if expression %}\n             */\n            type: Twig.logic.type.if_,\n            regex: /^if\\s?([\\s\\S]+)$/,\n            next: [\n                Twig.logic.type.else_,\n                Twig.logic.type.elseif,\n                Twig.logic.type.endif\n            ],\n            open: true,\n            compile(token) {\n                const expression = token.match[1];\n                // Compile the expression.\n                token.stack = Twig.expression.compile.call(this, {\n                    type: Twig.expression.type.expression,\n                    value: expression\n                }).stack;\n                delete token.match;\n                return token;\n            },\n            parse(token, context, chain) {\n                const state = this;\n\n                return Twig.expression.parseAsync.call(state, token.stack, context)\n                    .then(result => {\n                        chain = true;\n\n                        if (Twig.lib.boolval(result)) {\n                            chain = false;\n\n                            return state.parseAsync(token.output, context);\n                        }\n\n                        return '';\n                    })\n                    .then(output => {\n                        return {\n                            chain,\n                            output\n                        };\n                    });\n            }\n        },\n        {\n            /**\n             * Else if type logic tokens.\n             *\n             *  Format: {% elseif expression %}\n             */\n            type: Twig.logic.type.elseif,\n            regex: /^elseif\\s?([^\\s].*)$/,\n            next: [\n                Twig.logic.type.else_,\n                Twig.logic.type.elseif,\n                Twig.logic.type.endif\n            ],\n            open: false,\n            compile(token) {\n                const expression = token.match[1];\n                // Compile the expression.\n                token.stack = Twig.expression.compile.call(this, {\n                    type: Twig.expression.type.expression,\n                    value: expression\n                }).stack;\n                delete token.match;\n                return token;\n            },\n            parse(token, context, chain) {\n                const state = this;\n\n                return Twig.expression.parseAsync.call(state, token.stack, context)\n                    .then(result => {\n                        if (chain && Twig.lib.boolval(result)) {\n                            chain = false;\n\n                            return state.parseAsync(token.output, context);\n                        }\n\n                        return '';\n                    })\n                    .then(output => {\n                        return {\n                            chain,\n                            output\n                        };\n                    });\n            }\n        },\n        {\n            /**\n             * Else type logic tokens.\n             *\n             *  Format: {% else %}\n             */\n            type: Twig.logic.type.else_,\n            regex: /^else$/,\n            next: [\n                Twig.logic.type.endif,\n                Twig.logic.type.endfor\n            ],\n            open: false,\n            parse(token, context, chain) {\n                let promise = Twig.Promise.resolve('');\n                const state = this;\n\n                if (chain) {\n                    promise = state.parseAsync(token.output, context);\n                }\n\n                return promise.then(output => {\n                    return {\n                        chain,\n                        output\n                    };\n                });\n            }\n        },\n        {\n            /**\n             * End if type logic tokens.\n             *\n             *  Format: {% endif %}\n             */\n            type: Twig.logic.type.endif,\n            regex: /^endif$/,\n            next: [],\n            open: false\n        },\n        {\n            /**\n             * For type logic tokens.\n             *\n             *  Format: {% for expression %}\n             */\n            type: Twig.logic.type.for_,\n            regex: /^for\\s+([a-zA-Z0-9_,\\s]+)\\s+in\\s+([\\S\\s]+?)(?:\\s+if\\s+([^\\s].*))?$/,\n            next: [\n                Twig.logic.type.else_,\n                Twig.logic.type.endfor\n            ],\n            open: true,\n            compile(token) {\n                const keyValue = token.match[1];\n                const expression = token.match[2];\n                const conditional = token.match[3];\n                let kvSplit = null;\n\n                token.keyVar = null;\n                token.valueVar = null;\n\n                if (keyValue.includes(',')) {\n                    kvSplit = keyValue.split(',');\n                    if (kvSplit.length === 2) {\n                        token.keyVar = kvSplit[0].trim();\n                        token.valueVar = kvSplit[1].trim();\n                    } else {\n                        throw new Twig.Error('Invalid expression in for loop: ' + keyValue);\n                    }\n                } else {\n                    token.valueVar = keyValue.trim();\n                }\n\n                // Valid expressions for a for loop\n                //   for item     in expression\n                //   for key,item in expression\n\n                // Compile the expression.\n                token.expression = Twig.expression.compile.call(this, {\n                    type: Twig.expression.type.expression,\n                    value: expression\n                }).stack;\n\n                // Compile the conditional (if available)\n                if (conditional) {\n                    token.conditional = Twig.expression.compile.call(this, {\n                        type: Twig.expression.type.expression,\n                        value: conditional\n                    }).stack;\n                }\n\n                delete token.match;\n                return token;\n            },\n            parse(token, context, continueChain) {\n                // Parse expression\n                const output = [];\n                let len;\n                let index = 0;\n                let keyset;\n                const state = this;\n                const {conditional} = token;\n                const buildLoop = function (index, len) {\n                    const isConditional = conditional !== undefined;\n                    return {\n                        index: index + 1,\n                        index0: index,\n                        revindex: isConditional ? undefined : len - index,\n                        revindex0: isConditional ? undefined : len - index - 1,\n                        first: (index === 0),\n                        last: isConditional ? undefined : (index === len - 1),\n                        length: isConditional ? undefined : len,\n                        parent: context\n                    };\n                };\n\n                // Run once for each iteration of the loop\n                const loop = function (key, value) {\n                    const innerContext = {...context};\n\n                    innerContext[token.valueVar] = value;\n\n                    if (token.keyVar) {\n                        innerContext[token.keyVar] = key;\n                    }\n\n                    // Loop object\n                    innerContext.loop = buildLoop(index, len);\n\n                    const promise = conditional === undefined ?\n                        Twig.Promise.resolve(true) :\n                        Twig.expression.parseAsync.call(state, conditional, innerContext);\n\n                    return promise.then(condition => {\n                        if (!condition) {\n                            return;\n                        }\n\n                        return state.parseAsync(token.output, innerContext)\n                            .then(tokenOutput => {\n                                output.push(tokenOutput);\n                                index += 1;\n                            });\n                    })\n                        .then(() => {\n                            // Delete loop-related variables from the context\n                            delete innerContext.loop;\n                            delete innerContext[token.valueVar];\n                            delete innerContext[token.keyVar];\n\n                            // Merge in values that exist in context but have changed\n                            // in inner_context.\n                            Twig.merge(context, innerContext, true);\n                        });\n                };\n\n                return Twig.expression.parseAsync.call(state, token.expression, context)\n                    .then(result => {\n                        if (Array.isArray(result)) {\n                            len = result.length;\n                            return Twig.async.forEach(result, value => {\n                                const key = index;\n\n                                return loop(key, value);\n                            });\n                        }\n\n                        if (Twig.lib.is('Object', result)) {\n                            if (result._keys === undefined) {\n                                keyset = Object.keys(result);\n                            } else {\n                                keyset = result._keys;\n                            }\n\n                            len = keyset.length;\n                            return Twig.async.forEach(keyset, key => {\n                            // Ignore the _keys property, it's internal to twig.js\n                                if (key === '_keys') {\n                                    return;\n                                }\n\n                                return loop(key, result[key]);\n                            });\n                        }\n                    })\n                    .then(() => {\n                    // Only allow else statements if no output was generated\n                        continueChain = (output.length === 0);\n\n                        return {\n                            chain: continueChain,\n                            context,\n                            output: Twig.output.call(state.template, output)\n                        };\n                    });\n            }\n        },\n        {\n            /**\n             * End for type logic tokens.\n             *\n             *  Format: {% endfor %}\n             */\n            type: Twig.logic.type.endfor,\n            regex: /^endfor$/,\n            next: [],\n            open: false\n        },\n        {\n            /**\n             * Set type logic tokens.\n             *\n             *  Format: {% set key = expression %}\n             */\n            type: Twig.logic.type.set,\n            regex: /^set\\s+([a-zA-Z0-9_,\\s]+)\\s*=\\s*([\\s\\S]+)$/,\n            next: [],\n            open: true,\n            compile(token) { //\n                const key = token.match[1].trim();\n                const expression = token.match[2];\n                // Compile the expression.\n                const expressionStack = Twig.expression.compile.call(this, {\n                    type: Twig.expression.type.expression,\n                    value: expression\n                }).stack;\n\n                token.key = key;\n                token.expression = expressionStack;\n\n                delete token.match;\n                return token;\n            },\n            parse(token, context, continueChain) {\n                const {key} = token;\n                const state = this;\n\n                return Twig.expression.parseAsync.call(state, token.expression, context)\n                    .then(value => {\n                        if (value === context) {\n                        /*  If storing the context in a variable, it needs to be a clone of the current state of context.\n                            Otherwise we have a context with infinite recursion.\n                            Fixes #341\n                        */\n                            value = {...value};\n                        }\n\n                        context[key] = value;\n\n                        return {\n                            chain: continueChain,\n                            context\n                        };\n                    });\n            }\n        },\n        {\n            /**\n             * Set capture type logic tokens.\n             *\n             *  Format: {% set key %}\n             */\n            type: Twig.logic.type.setcapture,\n            regex: /^set\\s+([a-zA-Z0-9_,\\s]+)$/,\n            next: [\n                Twig.logic.type.endset\n            ],\n            open: true,\n            compile(token) {\n                const key = token.match[1].trim();\n\n                token.key = key;\n\n                delete token.match;\n                return token;\n            },\n            parse(token, context, continueChain) {\n                const state = this;\n                const {key} = token;\n\n                return state.parseAsync(token.output, context)\n                    .then(output => {\n                    // Set on both the global and local context\n                        state.context[key] = output;\n                        context[key] = output;\n\n                        return {\n                            chain: continueChain,\n                            context\n                        };\n                    });\n            }\n        },\n        {\n            /**\n             * End set type block logic tokens.\n             *\n             *  Format: {% endset %}\n             */\n            type: Twig.logic.type.endset,\n            regex: /^endset$/,\n            next: [],\n            open: false\n        },\n        {\n            /**\n             * Filter logic tokens.\n             *\n             *  Format: {% filter upper %} or {% filter lower|escape %}\n             */\n            type: Twig.logic.type.filter,\n            regex: /^filter\\s+(.+)$/,\n            next: [\n                Twig.logic.type.endfilter\n            ],\n            open: true,\n            compile(token) {\n                const expression = '|' + token.match[1].trim();\n                // Compile the expression.\n                token.stack = Twig.expression.compile.call(this, {\n                    type: Twig.expression.type.expression,\n                    value: expression\n                }).stack;\n                delete token.match;\n                return token;\n            },\n            parse(token, context, chain) {\n                const state = this;\n\n                return state.parseAsync(token.output, context)\n                    .then(output => {\n                        const stack = [{\n                            type: Twig.expression.type.string,\n                            value: output\n                        }].concat(token.stack);\n\n                        return Twig.expression.parseAsync.call(state, stack, context);\n                    })\n                    .then(output => {\n                        return {\n                            chain,\n                            output\n                        };\n                    });\n            }\n        },\n        {\n            /**\n             * End filter logic tokens.\n             *\n             *  Format: {% endfilter %}\n             */\n            type: Twig.logic.type.endfilter,\n            regex: /^endfilter$/,\n            next: [],\n            open: false\n        },\n        {\n            /**\n             * Apply logic tokens.\n             *\n             *  Format: {% apply upper %} or {% apply lower|escape %}\n             */\n            type: Twig.logic.type.apply,\n            regex: /^apply\\s+(.+)$/,\n            next: [\n                Twig.logic.type.endapply\n            ],\n            open: true,\n            compile(token) {\n                const expression = '|' + token.match[1].trim();\n                // Compile the expression.\n                token.stack = Twig.expression.compile.call(this, {\n                    type: Twig.expression.type.expression,\n                    value: expression\n                }).stack;\n                delete token.match;\n                return token;\n            },\n            parse(token, context, chain) {\n                const state = this;\n\n                return state.parseAsync(token.output, context)\n                    .then(output => {\n                        const stack = [{\n                            type: Twig.expression.type.string,\n                            value: output\n                        }].concat(token.stack);\n\n                        return Twig.expression.parseAsync.call(state, stack, context);\n                    })\n                    .then(output => {\n                        return {\n                            chain,\n                            output\n                        };\n                    });\n            }\n        },\n        {\n            /**\n             * End apply logic tokens.\n             *\n             *  Format: {% endapply %}\n             */\n            type: Twig.logic.type.endapply,\n            regex: /^endapply$/,\n            next: [],\n            open: false\n        },\n        {\n            /**\n             * Set type logic tokens.\n             *\n             *  Format: {% do expression %}\n             */\n            type: Twig.logic.type.do,\n            regex: /^do\\s+([\\S\\s]+)$/,\n            next: [],\n            open: true,\n            compile(token) { //\n                const expression = token.match[1];\n                // Compile the expression.\n                const expressionStack = Twig.expression.compile.call(this, {\n                    type: Twig.expression.type.expression,\n                    value: expression\n                }).stack;\n\n                token.expression = expressionStack;\n\n                delete token.match;\n                return token;\n            },\n            parse(token, context, continueChain) {\n                const state = this;\n\n                return Twig.expression.parseAsync.call(state, token.expression, context)\n                    .then(() => {\n                        return {\n                            chain: continueChain,\n                            context\n                        };\n                    });\n            }\n        },\n        {\n            /**\n             * Block logic tokens.\n             *\n             *  Format: {% block title %}\n             */\n            type: Twig.logic.type.block,\n            regex: /^block\\s+(\\w+)$/,\n            next: [\n                Twig.logic.type.endblock\n            ],\n            open: true,\n            compile(token) {\n                token.blockName = token.match[1].trim();\n                delete token.match;\n\n                return token;\n            },\n            parse(token, context, chain) {\n                const state = this;\n                let promise = Twig.Promise.resolve();\n\n                state.template.blocks.defined[token.blockName] = new Twig.Block(state.template, token);\n\n                if (\n                    state.template.parentTemplate === null ||\n                    state.template.parentTemplate instanceof Twig.Template\n                ) {\n                    promise = state.getBlock(token.blockName).render(state, context);\n                }\n\n                return promise.then(output => {\n                    return {\n                        chain,\n                        output\n                    };\n                });\n            }\n        },\n        {\n            /**\n             * Block shorthand logic tokens.\n             *\n             *  Format: {% block title expression %}\n             */\n            type: Twig.logic.type.shortblock,\n            regex: /^block\\s+(\\w+)\\s+(.+)$/,\n            next: [],\n            open: true,\n            compile(token) {\n                const template = this;\n\n                token.expression = token.match[2].trim();\n                token.output = Twig.expression.compile({\n                    type: Twig.expression.type.expression,\n                    value: token.expression\n                }).stack;\n\n                return Twig.logic.handler[Twig.logic.type.block].compile.apply(template, [token]);\n            },\n            parse(...args) {\n                const state = this;\n\n                return Twig.logic.handler[Twig.logic.type.block].parse.apply(state, args);\n            }\n        },\n        {\n            /**\n             * End block logic tokens.\n             *\n             *  Format: {% endblock %}\n             */\n            type: Twig.logic.type.endblock,\n            regex: /^endblock(?:\\s+(\\w+))?$/,\n            next: [],\n            open: false\n        },\n        {\n            /**\n             * Block logic tokens.\n             *\n             *  Format: {% extends \"template.twig\" %}\n             */\n            type: Twig.logic.type.extends_,\n            regex: /^extends\\s+(.+)$/,\n            next: [],\n            open: true,\n            compile(token) {\n                const expression = token.match[1].trim();\n                delete token.match;\n\n                token.stack = Twig.expression.compile.call(this, {\n                    type: Twig.expression.type.expression,\n                    value: expression\n                }).stack;\n\n                return token;\n            },\n            parse(token, context, chain) {\n                const state = this;\n\n                return Twig.expression.parseAsync.call(state, token.stack, context)\n                    .then(fileName => {\n                        state.template.parentTemplate = fileName;\n\n                        return {\n                            chain,\n                            output: ''\n                        };\n                    });\n            }\n        },\n        {\n            /**\n             * Block logic tokens.\n             *\n             *  Format: {% use \"template.twig\" %}\n             */\n            type: Twig.logic.type.use,\n            regex: /^use\\s+(.+)$/,\n            next: [],\n            open: true,\n            compile(token) {\n                const expression = token.match[1].trim();\n                delete token.match;\n\n                token.stack = Twig.expression.compile.call(this, {\n                    type: Twig.expression.type.expression,\n                    value: expression\n                }).stack;\n\n                return token;\n            },\n            parse(token, context, chain) {\n                const state = this;\n\n                return Twig.expression.parseAsync.call(state, token.stack, context)\n                    .then(filePath => {\n                        // Create a new state instead of using the current state\n                        // any defined blocks will be created in isolation\n\n                        const useTemplate = state.template.importFile(filePath);\n\n                        const useState = new Twig.ParseState(useTemplate);\n                        return useState.parseAsync(useTemplate.tokens)\n                            .then(() => {\n                                state.template.blocks.imported = {\n                                    ...state.template.blocks.imported,\n                                    ...useState.getBlocks()\n                                };\n                            });\n                    })\n                    .then(() => {\n                        return {\n                            chain,\n                            output: ''\n                        };\n                    });\n            }\n        },\n        {\n            /**\n             * Block logic tokens.\n             *\n             *  Format: {% includes \"template.twig\" [with {some: 'values'} only] %}\n             */\n            type: Twig.logic.type.include,\n            regex: /^include\\s+(.+?)(?:\\s|$)(ignore missing(?:\\s|$))?(?:with\\s+([\\S\\s]+?))?(?:\\s|$)(only)?$/,\n            next: [],\n            open: true,\n            compile(token) {\n                const {match} = token;\n                const expression = match[1].trim();\n                const ignoreMissing = match[2] !== undefined;\n                const withContext = match[3];\n                const only = ((match[4] !== undefined) && match[4].length);\n\n                delete token.match;\n\n                token.only = only;\n                token.ignoreMissing = ignoreMissing;\n\n                token.stack = Twig.expression.compile.call(this, {\n                    type: Twig.expression.type.expression,\n                    value: expression\n                }).stack;\n\n                if (withContext !== undefined) {\n                    token.withStack = Twig.expression.compile.call(this, {\n                        type: Twig.expression.type.expression,\n                        value: withContext.trim()\n                    }).stack;\n                }\n\n                return token;\n            },\n            parse(token, context, chain) {\n                // Resolve filename\n                let innerContext = token.only ? {} : {...context};\n                const {ignoreMissing} = token;\n                const state = this;\n                let promise = null;\n                const result = {chain, output: ''};\n\n                if (typeof token.withStack === 'undefined') {\n                    promise = Twig.Promise.resolve();\n                } else {\n                    promise = Twig.expression.parseAsync.call(state, token.withStack, context)\n                        .then(withContext => {\n                            innerContext = {\n                                ...innerContext,\n                                ...withContext\n                            };\n                        });\n                }\n\n                return promise\n                    .then(() => {\n                        return Twig.expression.parseAsync.call(state, token.stack, context);\n                    })\n                    .then(file => {\n                        let files;\n                        if (Array.isArray(file)) {\n                            files = file;\n                        } else {\n                            files = [file];\n                        }\n\n                        const result = files.reduce((acc, file) => {\n                            if (acc.render === null) {\n                                if (file instanceof Twig.Template) {\n                                    return {\n                                        render: file.renderAsync(\n                                            innerContext,\n                                            {\n                                                isInclude: true\n                                            }\n                                        ),\n                                        lastError: null\n                                    };\n                                }\n\n                                try {\n                                    return {\n                                        render: state.template.importFile(file).renderAsync(\n                                            innerContext,\n                                            {\n                                                isInclude: true\n                                            }\n                                        ),\n                                        lastError: null\n                                    };\n                                } catch (error) {\n                                    return {\n                                        render: null,\n                                        lastError: error\n                                    };\n                                }\n                            }\n\n                            return acc;\n                        }, {render: null, lastError: null});\n\n                        if (result.render !== null) {\n                            return result.render;\n                        }\n\n                        if (result.render === null && ignoreMissing) {\n                            return '';\n                        }\n\n                        throw result.lastError;\n                    })\n                    .then(output => {\n                        if (output !== '') {\n                            result.output = output;\n                        }\n\n                        return result;\n                    });\n            }\n        },\n        {\n            type: Twig.logic.type.spaceless,\n            regex: /^spaceless$/,\n            next: [\n                Twig.logic.type.endspaceless\n            ],\n            open: true,\n\n            // Parse the html and return it without any spaces between tags\n            parse(token, context, chain) {\n                const state = this;\n\n                // Parse the output without any filter\n                return state.parseAsync(token.output, context)\n                    .then(tokenOutput => {\n                        const // A regular expression to find closing and opening tags with spaces between them\n                            rBetweenTagSpaces = />\\s+</g;\n                        // Replace all space between closing and opening html tags\n                        let output = tokenOutput.replace(rBetweenTagSpaces, '><').trim();\n                        // Rewrap output as a Twig.Markup\n                        output = new Twig.Markup(output);\n                        return {\n                            chain,\n                            output\n                        };\n                    });\n            }\n        },\n\n        // Add the {% endspaceless %} token\n        {\n            type: Twig.logic.type.endspaceless,\n            regex: /^endspaceless$/,\n            next: [],\n            open: false\n        },\n        {\n            /**\n             * Macro logic tokens.\n             *\n             * Format: {% macro input(name = default, value, type, size) %}\n             *\n             */\n            type: Twig.logic.type.macro,\n            regex: /^macro\\s+(\\w+)\\s*\\(\\s*((?:\\w+(?:\\s*=\\s*([\\s\\S]+))?(?:,\\s*)?)*)\\s*\\)$/,\n            next: [\n                Twig.logic.type.endmacro\n            ],\n            open: true,\n            compile(token) {\n                const macroName = token.match[1];\n                const rawParameters = token.match[2].split(/\\s*,\\s*/);\n                const parameters = rawParameters.map(rawParameter => {\n                    return rawParameter.split(/\\s*=\\s*/)[0];\n                });\n                const parametersCount = parameters.length;\n\n                // Duplicate check\n                if (parametersCount > 1) {\n                    const uniq = {};\n                    for (let i = 0; i < parametersCount; i++) {\n                        const parameter = parameters[i];\n                        if (uniq[parameter]) {\n                            throw new Twig.Error('Duplicate arguments for parameter: ' + parameter);\n                        } else {\n                            uniq[parameter] = 1;\n                        }\n                    }\n                }\n\n                token.macroName = macroName;\n                token.parameters = parameters;\n                token.defaults = rawParameters.reduce(function (defaults, rawParameter) {\n                    const pair = rawParameter.split(/\\s*=\\s*/);\n                    const key = pair[0];\n                    const expression = pair[1];\n\n                    if (expression) {\n                        defaults[key] = Twig.expression.compile.call(this, {\n                            type: Twig.expression.type.expression,\n                            value: expression\n                        }).stack;\n                    } else {\n                        defaults[key] = undefined;\n                    }\n\n                    return defaults;\n                }, {});\n\n                delete token.match;\n                return token;\n            },\n            parse(token, context, chain) {\n                const state = this;\n\n                state.macros[token.macroName] = function (...args) {\n                    // Pass global context and other macros\n                    const macroContext = {\n                        _self: state.macros\n                    };\n                    // Save arguments\n\n                    return Twig.async.forEach(token.parameters, function (prop, i) {\n                        // Add parameters from context to macroContext\n                        if (typeof args[i] !== 'undefined') {\n                            macroContext[prop] = args[i];\n                            return true;\n                        }\n\n                        if (typeof token.defaults[prop] !== 'undefined') {\n                            return Twig.expression.parseAsync.call(this, token.defaults[prop], context)\n                                .then(value => {\n                                    macroContext[prop] = value;\n                                    return Twig.Promise.resolve();\n                                });\n                        }\n\n                        macroContext[prop] = undefined;\n                        return true;\n                    }).then(() => {\n                        // Render\n                        return state.parseAsync(token.output, macroContext);\n                    });\n                };\n\n                return {\n                    chain,\n                    output: ''\n                };\n            }\n        },\n        {\n            /**\n             * End macro logic tokens.\n             *\n             * Format: {% endmacro %}\n             */\n            type: Twig.logic.type.endmacro,\n            regex: /^endmacro$/,\n            next: [],\n            open: false\n        },\n        {\n            /*\n            * Import logic tokens.\n            *\n            * Format: {% import \"template.twig\" as form %}\n            */\n            type: Twig.logic.type.import_,\n            regex: /^import\\s+(.+)\\s+as\\s+(\\w+)$/,\n            next: [],\n            open: true,\n            compile(token) {\n                const expression = token.match[1].trim();\n                const contextName = token.match[2].trim();\n                delete token.match;\n\n                token.expression = expression;\n                token.contextName = contextName;\n\n                token.stack = Twig.expression.compile.call(this, {\n                    type: Twig.expression.type.expression,\n                    value: expression\n                }).stack;\n\n                return token;\n            },\n            parse(token, context, chain) {\n                const state = this;\n                const output = {\n                    chain,\n                    output: ''\n                };\n\n                if (token.expression === '_self') {\n                    context[token.contextName] = state.macros;\n                    return output;\n                }\n\n                return Twig.expression.parseAsync.call(state, token.stack, context)\n                    .then(filePath => {\n                        return state.template.importFile(filePath || token.expression);\n                    })\n                    .then(importTemplate => {\n                        const importState = new Twig.ParseState(importTemplate);\n\n                        return importState.parseAsync(importTemplate.tokens).then(() => {\n                            context[token.contextName] = importState.macros;\n\n                            return output;\n                        });\n                    });\n            }\n        },\n        {\n            /*\n            * From logic tokens.\n            *\n            * Format: {% from \"template.twig\" import func as form %}\n            */\n            type: Twig.logic.type.from,\n            regex: /^from\\s+(.+)\\s+import\\s+([a-zA-Z0-9_, ]+)$/,\n            next: [],\n            open: true,\n            compile(token) {\n                const expression = token.match[1].trim();\n                const macroExpressions = token.match[2].trim().split(/\\s*,\\s*/);\n                const macroNames = {};\n\n                for (const res of macroExpressions) {\n                    // Match function as variable\n                    const macroMatch = res.match(/^(\\w+)\\s+as\\s+(\\w+)$/);\n                    if (macroMatch) {\n                        macroNames[macroMatch[1].trim()] = macroMatch[2].trim();\n                    } else if (res.match(/^(\\w+)$/)) {\n                        macroNames[res] = res;\n                    } else {\n                        // ignore import\n                    }\n                }\n\n                delete token.match;\n\n                token.expression = expression;\n                token.macroNames = macroNames;\n\n                token.stack = Twig.expression.compile.call(this, {\n                    type: Twig.expression.type.expression,\n                    value: expression\n                }).stack;\n\n                return token;\n            },\n            parse(token, context, chain) {\n                const state = this;\n                let promise;\n\n                if (token.expression === '_self') {\n                    promise = Twig.Promise.resolve(state.macros);\n                } else {\n                    promise = Twig.expression.parseAsync.call(state, token.stack, context)\n                        .then(filePath => {\n                            return state.template.importFile(filePath || token.expression);\n                        })\n                        .then(importTemplate => {\n                            const importState = new Twig.ParseState(importTemplate);\n\n                            return importState.parseAsync(importTemplate.tokens).then(() => {\n                                return importState.macros;\n                            });\n                        });\n                }\n\n                return promise\n                    .then(macros => {\n                        for (const macroName in token.macroNames) {\n                            if (macros[macroName] !== undefined) {\n                                context[token.macroNames[macroName]] = macros[macroName];\n                            }\n                        }\n\n                        return {\n                            chain,\n                            output: ''\n                        };\n                    });\n            }\n        },\n        {\n            /**\n             * The embed tag combines the behaviour of include and extends.\n             * It allows you to include another template's contents, just like include does.\n             *\n             *  Format: {% embed \"template.twig\" [with {some: 'values'} only] %}\n             */\n            type: Twig.logic.type.embed,\n            regex: /^embed\\s+(.+?)(?:\\s+(ignore missing))?(?:\\s+with\\s+([\\S\\s]+?))?(?:\\s+(only))?$/,\n            next: [\n                Twig.logic.type.endembed\n            ],\n            open: true,\n            compile(token) {\n                const {match} = token;\n                const expression = match[1].trim();\n                const ignoreMissing = match[2] !== undefined;\n                const withContext = match[3];\n                const only = ((match[4] !== undefined) && match[4].length);\n\n                delete token.match;\n\n                token.only = only;\n                token.ignoreMissing = ignoreMissing;\n\n                token.stack = Twig.expression.compile.call(this, {\n                    type: Twig.expression.type.expression,\n                    value: expression\n                }).stack;\n\n                if (withContext !== undefined) {\n                    token.withStack = Twig.expression.compile.call(this, {\n                        type: Twig.expression.type.expression,\n                        value: withContext.trim()\n                    }).stack;\n                }\n\n                return token;\n            },\n            parse(token, context, chain) {\n                let embedContext = {};\n                let promise = Twig.Promise.resolve();\n                let state = this;\n\n                if (!token.only) {\n                    embedContext = {...context};\n                }\n\n                if (token.withStack !== undefined) {\n                    promise = Twig.expression.parseAsync.call(state, token.withStack, context).then(withContext => {\n                        embedContext = {...embedContext, ...withContext};\n                    });\n                }\n\n                return promise\n                    .then(() => {\n                        return Twig.expression.parseAsync.call(state, token.stack, embedContext);\n                    })\n                    .then(fileName => {\n                        const embedOverrideTemplate = new Twig.Template({\n                            data: token.output,\n                            id: state.template.id,\n                            base: state.template.base,\n                            path: state.template.path,\n                            url: state.template.url,\n                            name: state.template.name,\n                            method: state.template.method,\n                            options: state.template.options\n                        });\n\n                        try {\n                            embedOverrideTemplate.importFile(fileName);\n                        } catch (error) {\n                            if (token.ignoreMissing) {\n                                return '';\n                            }\n\n                            // Errors preserve references to variables in scope,\n                            // this removes `this` from the scope.\n                            state = null;\n\n                            throw error;\n                        }\n\n                        embedOverrideTemplate.parentTemplate = fileName;\n\n                        return embedOverrideTemplate.renderAsync(\n                            embedContext,\n                            {\n                                isInclude: true\n                            }\n                        );\n                    })\n                    .then(output => {\n                        return {\n                            chain,\n                            output\n                        };\n                    });\n            }\n        },\n        /* Add the {% endembed %} token\n         *\n         */\n        {\n            type: Twig.logic.type.endembed,\n            regex: /^endembed$/,\n            next: [],\n            open: false\n        },\n        {\n            /**\n             * Block logic tokens.\n             *\n             *  Format: {% with {some: 'values'} [only] %}\n             */\n            type: Twig.logic.type.with,\n            regex: /^(?:with\\s+([\\S\\s]+?))(?:\\s|$)(only)?$/,\n            next: [\n                Twig.logic.type.endwith\n            ],\n            open: true,\n            compile(token) {\n                const {match} = token;\n                const withContext = match[1];\n                const only = ((match[2] !== undefined) && match[2].length);\n\n                delete token.match;\n\n                token.only = only;\n\n                if (withContext !== undefined) {\n                    token.withStack = Twig.expression.compile.call(this, {\n                        type: Twig.expression.type.expression,\n                        value: withContext.trim()\n                    }).stack;\n                }\n\n                return token;\n            },\n            parse(token, context, chain) {\n                // Resolve filename\n                let innerContext = {};\n                let i;\n                const state = this;\n                let promise = Twig.Promise.resolve();\n\n                if (!token.only) {\n                    innerContext = {...context};\n                }\n\n                if (token.withStack !== undefined) {\n                    promise = Twig.expression.parseAsync.call(state, token.withStack, context)\n                        .then(withContext => {\n                            for (i in withContext) {\n                                if (Object.hasOwnProperty.call(withContext, i)) {\n                                    innerContext[i] = withContext[i];\n                                }\n                            }\n                        });\n                }\n\n                return promise\n                    .then(() => {\n                        return state.parseAsync(token.output, innerContext);\n                    })\n                    .then(output => {\n                        return {\n                            chain,\n                            output\n                        };\n                    });\n            }\n        },\n        {\n            type: Twig.logic.type.endwith,\n            regex: /^endwith$/,\n            next: [],\n            open: false\n        },\n        {\n            /**\n             * Deprecated type logic tokens.\n             *\n             *  Format: {% deprecated 'Description' %}\n             */\n            type: Twig.logic.type.deprecated,\n            regex: /^deprecated\\s+(.+)$/,\n            next: [],\n            open: true,\n            compile(token) {\n                console.warn('Deprecation notice: ' + token.match[1]);\n\n                return token;\n            },\n            parse() {\n                return {};\n            }\n        }\n\n    ];\n\n    /**\n     * Registry for logic handlers.\n     */\n    Twig.logic.handler = {};\n\n    /**\n     * Define a new token type, available at Twig.logic.type.{type}\n     */\n    Twig.logic.extendType = function (type, value) {\n        value = value || ('Twig.logic.type' + type);\n        Twig.logic.type[type] = value;\n    };\n\n    /**\n     * Extend the logic parsing functionality with a new token definition.\n     *\n     * // Define a new tag\n     * Twig.logic.extend({\n     *     type: Twig.logic.type.{type},\n     *     // The pattern to match for this token\n     *     regex: ...,\n     *     // What token types can follow this token, leave blank if any.\n     *     next: [ ... ]\n     *     // Create and return compiled version of the token\n     *     compile: function(token) { ... }\n     *     // Parse the compiled token with the context provided by the render call\n     *     //   and whether this token chain is complete.\n     *     parse: function(token, context, chain) { ... }\n     * });\n     *\n     * @param {Object} definition The new logic expression.\n     */\n    Twig.logic.extend = function (definition) {\n        if (definition.type) {\n            Twig.logic.extendType(definition.type);\n        } else {\n            throw new Twig.Error('Unable to extend logic definition. No type provided for ' + definition);\n        }\n\n        Twig.logic.handler[definition.type] = definition;\n    };\n\n    // Extend with built-in expressions\n    while (Twig.logic.definitions.length > 0) {\n        Twig.logic.extend(Twig.logic.definitions.shift());\n    }\n\n    /**\n     * Compile a logic token into an object ready for parsing.\n     *\n     * @param {Object} rawToken An uncompiled logic token.\n     *\n     * @return {Object} A compiled logic token, ready for parsing.\n     */\n    Twig.logic.compile = function (rawToken) {\n        const expression = rawToken.value.trim();\n        let token = Twig.logic.tokenize.call(this, expression);\n        const tokenTemplate = Twig.logic.handler[token.type];\n\n        // Check if the token needs compiling\n        if (tokenTemplate.compile) {\n            token = tokenTemplate.compile.call(this, token);\n            Twig.log.trace('Twig.logic.compile: ', 'Compiled logic token to ', token);\n        }\n\n        return token;\n    };\n\n    /**\n     * Tokenize logic expressions. This function matches token expressions against regular\n     * expressions provided in token definitions provided with Twig.logic.extend.\n     *\n     * @param {string} expression the logic token expression to tokenize\n     *                (i.e. what's between {% and %})\n     *\n     * @return {Object} The matched token with type set to the token type and match to the regex match.\n     */\n    Twig.logic.tokenize = function (expression) {\n        let tokenTemplateType = null;\n        let tokenType = null;\n        let tokenRegex = null;\n        let regexArray = null;\n        let regexLen = null;\n        let regexI = null;\n        let match = null;\n\n        // Ignore whitespace around expressions.\n        expression = expression.trim();\n\n        for (tokenTemplateType in Twig.logic.handler) {\n            if (Object.hasOwnProperty.call(Twig.logic.handler, tokenTemplateType)) {\n                // Get the type and regex for this template type\n                tokenType = Twig.logic.handler[tokenTemplateType].type;\n                tokenRegex = Twig.logic.handler[tokenTemplateType].regex;\n\n                // Handle multiple regular expressions per type.\n                regexArray = tokenRegex;\n                if (!Array.isArray(tokenRegex)) {\n                    regexArray = [tokenRegex];\n                }\n\n                regexLen = regexArray.length;\n                // Check regular expressions in the order they were specified in the definition.\n                for (regexI = 0; regexI < regexLen; regexI++) {\n                    match = regexArray[regexI].exec(expression);\n                    if (match !== null) {\n                        Twig.log.trace('Twig.logic.tokenize: ', 'Matched a ', tokenType, ' regular expression of ', match);\n                        return {\n                            type: tokenType,\n                            match\n                        };\n                    }\n                }\n            }\n        }\n\n        // No regex matches\n        throw new Twig.Error('Unable to parse \\'' + expression.trim() + '\\'');\n    };\n\n    /**\n     * Parse a logic token within a given context.\n     *\n     * What are logic chains?\n     *      Logic chains represent a series of tokens that are connected,\n     *          for example:\n     *          {% if ... %} {% else %} {% endif %}\n     *\n     *      The chain parameter is used to signify if a chain is open of closed.\n     *      open:\n     *          More tokens in this chain should be parsed.\n     *      closed:\n     *          This token chain has completed parsing and any additional\n     *          tokens (else, elseif, etc...) should be ignored.\n     *\n     * @param {Object} token The compiled token.\n     * @param {Object} context The render context.\n     * @param {boolean} chain Is this an open logic chain. If false, that means a\n     *                        chain is closed and no further cases should be parsed.\n     */\n    Twig.logic.parse = function (token, context, chain, allowAsync) {\n        return Twig.async.potentiallyAsync(this, allowAsync, function () {\n            Twig.log.debug('Twig.logic.parse: ', 'Parsing logic token ', token);\n\n            const tokenTemplate = Twig.logic.handler[token.type];\n            let result;\n            const state = this;\n\n            if (!tokenTemplate.parse) {\n                return '';\n            }\n\n            state.nestingStack.unshift(token);\n            result = tokenTemplate.parse.call(state, token, context || {}, chain);\n\n            if (Twig.isPromise(result)) {\n                result = result.then(result => {\n                    state.nestingStack.shift();\n\n                    return result;\n                });\n            } else {\n                state.nestingStack.shift();\n            }\n\n            return result;\n        });\n    };\n\n    return Twig;\n};\n","module.exports = function (Twig) {\n    'use strict';\n\n    Twig.Templates.registerParser('source', params => {\n        return params.data || '';\n    });\n};\n","module.exports = function (Twig) {\n    'use strict';\n\n    Twig.Templates.registerParser('twig', params => {\n        return new Twig.Template(params);\n    });\n};\n","// ## twig.path.js\n//\n// This file handles path parsing\nmodule.exports = function (Twig) {\n    'use strict';\n\n    /**\n     * Namespace for path handling.\n     */\n    Twig.path = {};\n\n    /**\n     * Generate the canonical version of a url based on the given base path and file path and in\n     * the previously registered namespaces.\n     *\n     * @param  {string} template The Twig Template\n     * @param  {string} _file    The file path, may be relative and may contain namespaces.\n     *\n     * @return {string}          The canonical version of the path\n     */\n    Twig.path.parsePath = function (template, _file) {\n        let k = null;\n        const {namespaces} = template.options;\n        let file = _file || '';\n        const hasNamespaces = namespaces && typeof namespaces === 'object';\n\n        if (hasNamespaces) {\n            for (k in namespaces) {\n                if (!file.includes(k)) {\n                    continue;\n                }\n\n                // Check if keyed namespace exists at path's start\n                const colon = new RegExp('^' + k + '::');\n                const atSign = new RegExp('^@' + k + '/');\n                // Add slash to the end of path\n                const namespacePath = namespaces[k].replace(/([^/])$/, '$1/');\n\n                if (colon.test(file)) {\n                    file = file.replace(colon, namespacePath);\n                    return file;\n                }\n\n                if (atSign.test(file)) {\n                    file = file.replace(atSign, namespacePath);\n                    return file;\n                }\n            }\n        }\n\n        return Twig.path.relativePath(template, file);\n    };\n\n    /**\n     * Generate the relative canonical version of a url based on the given base path and file path.\n     *\n     * @param {Twig.Template} template The Twig.Template.\n     * @param {string} _file The file path, relative to the base path.\n     *\n     * @return {string} The canonical version of the path.\n     */\n    Twig.path.relativePath = function (template, _file) {\n        let base;\n        let basePath;\n        let sepChr = '/';\n        const newPath = [];\n        let file = _file || '';\n        let val;\n\n        if (template.url) {\n            if (typeof template.base === 'undefined') {\n                base = template.url;\n            } else {\n                // Add slash to the end of path\n                base = template.base.replace(/([^/])$/, '$1/');\n            }\n        } else if (template.path) {\n            // Get the system-specific path separator\n            const path = require('path');\n            const sep = path.sep || sepChr;\n            const relative = new RegExp('^\\\\.{1,2}' + sep.replace('\\\\', '\\\\\\\\'));\n            file = file.replace(/\\//g, sep);\n\n            if (template.base !== undefined && file.match(relative) === null) {\n                file = file.replace(template.base, '');\n                base = template.base + sep;\n            } else {\n                base = path.normalize(template.path);\n            }\n\n            base = base.replace(sep + sep, sep);\n            sepChr = sep;\n        } else if ((template.name || template.id) && template.method && template.method !== 'fs' && template.method !== 'ajax') {\n            // Custom registered loader\n            base = template.base || template.name || template.id;\n        } else {\n            throw new Twig.Error('Cannot extend an inline template.');\n        }\n\n        basePath = base.split(sepChr);\n\n        // Remove file from url\n        basePath.pop();\n        basePath = basePath.concat(file.split(sepChr));\n\n        while (basePath.length > 0) {\n            val = basePath.shift();\n            if (val === '.') {\n                // Ignore\n            } else if (val === '..' && newPath.length > 0 && newPath[newPath.length - 1] !== '..') {\n                newPath.pop();\n            } else {\n                newPath.push(val);\n            }\n        }\n\n        return newPath.join(sepChr);\n    };\n\n    return Twig;\n};\n","// ## twig.tests.js\n//\n// This file handles expression tests. (is empty, is not defined, etc...)\nmodule.exports = function (Twig) {\n    'use strict';\n    Twig.tests = {\n        empty(value) {\n            if (value === null || value === undefined) {\n                return true;\n            }\n\n            // Handler numbers\n            if (typeof value === 'number') {\n                return false;\n            } // Numbers are never \"empty\"\n\n            // Handle strings and arrays\n            if (value.length > 0) {\n                return false;\n            }\n\n            // Handle objects\n            for (const key in value) {\n                if (Object.hasOwnProperty.call(value, key)) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n        odd(value) {\n            return value % 2 === 1;\n        },\n        even(value) {\n            return value % 2 === 0;\n        },\n        divisibleby(value, params) {\n            return value % params[0] === 0;\n        },\n        defined(value) {\n            return value !== undefined;\n        },\n        none(value) {\n            return value === null;\n        },\n        null(value) {\n            return this.none(value); // Alias of none\n        },\n        'same as'(value, params) {\n            return value === params[0];\n        },\n        sameas(value, params) {\n            console.warn('`sameas` is deprecated use `same as`');\n            return Twig.tests['same as'](value, params);\n        },\n        iterable(value) {\n            return value && (Twig.lib.is('Array', value) || Twig.lib.is('Object', value));\n        }\n        /*\n        Constant ?\n         */\n    };\n\n    Twig.test = function (test, value, params) {\n        if (!Twig.tests[test]) {\n            throw Twig.Error('Test ' + test + ' is not defined.');\n        }\n\n        return Twig.tests[test](value, params);\n    };\n\n    Twig.test.extend = function (test, definition) {\n        Twig.tests[test] = definition;\n    };\n\n    return Twig;\n};\n","// ## twig.async.js\n//\n// This file handles asynchronous tasks within twig.\nmodule.exports = function (Twig) {\n    'use strict';\n\n    const STATE_UNKNOWN = 0;\n    const STATE_RESOLVED = 1;\n    const STATE_REJECTED = 2;\n\n    Twig.ParseState.prototype.parseAsync = function (tokens, context) {\n        return this.parse(tokens, context, true);\n    };\n\n    Twig.expression.parseAsync = function (tokens, context, tokensAreParameters) {\n        const state = this;\n\n        return Twig.expression.parse.call(state, tokens, context, tokensAreParameters, true);\n    };\n\n    Twig.logic.parseAsync = function (token, context, chain) {\n        const state = this;\n\n        return Twig.logic.parse.call(state, token, context, chain, true);\n    };\n\n    Twig.Template.prototype.renderAsync = function (context, params) {\n        return this.render(context, params, true);\n    };\n\n    Twig.async = {};\n\n    /**\n     * Checks for `thenable` objects\n     */\n    Twig.isPromise = function (obj) {\n        return obj && obj.then && (typeof obj.then === 'function');\n    };\n\n    /**\n     * Handling of code paths that might either return a promise\n     * or a value depending on whether async code is used.\n     *\n     * @see https://github.com/twigjs/twig.js/blob/master/ASYNC.md#detecting-asynchronous-behaviour\n     */\n    function potentiallyAsyncSlow(that, allowAsync, action) {\n        let result = action.call(that);\n        let err = null;\n        let isAsync = true;\n\n        if (!Twig.isPromise(result)) {\n            return result;\n        }\n\n        result.then(res => {\n            result = res;\n            isAsync = false;\n        }).catch(error => {\n            err = error;\n        });\n\n        if (err !== null) {\n            throw err;\n        }\n\n        if (isAsync) {\n            throw new Twig.Error('You are using Twig.js in sync mode in combination with async extensions.');\n        }\n\n        return result;\n    }\n\n    Twig.async.potentiallyAsync = function (that, allowAsync, action) {\n        if (allowAsync) {\n            return Twig.Promise.resolve(action.call(that));\n        }\n\n        return potentiallyAsyncSlow(that, allowAsync, action);\n    };\n\n    function run(fn, resolve, reject) {\n        try {\n            fn(resolve, reject);\n        } catch (error) {\n            reject(error);\n        }\n    }\n\n    function pending(handlers, onResolved, onRejected) {\n        const h = [onResolved, onRejected, -2];\n\n        // The promise has yet to be rejected or resolved.\n        if (!handlers) {\n            handlers = h;\n        } else if (handlers[2] === -2) {\n            // Only allocate an array when there are multiple handlers\n            handlers = [handlers, h];\n        } else {\n            handlers.push(h);\n        }\n\n        return handlers;\n    }\n\n    /**\n     * Really small thenable to represent promises that resolve immediately.\n     *\n     */\n    Twig.Thenable = function (then, value, state) {\n        this.then = then;\n        this._value = state ? value : null;\n        this._state = state || STATE_UNKNOWN;\n    };\n\n    Twig.Thenable.prototype.catch = function (onRejected) {\n        // THe promise will not throw, it has already resolved.\n        if (this._state === STATE_RESOLVED) {\n            return this;\n        }\n\n        return this.then(null, onRejected);\n    };\n\n    /**\n     * The `then` method attached to a Thenable when it has resolved.\n     *\n     */\n    Twig.Thenable.resolvedThen = function (onResolved) {\n        try {\n            return Twig.Promise.resolve(onResolved(this._value));\n        } catch (error) {\n            return Twig.Promise.reject(error);\n        }\n    };\n\n    /**\n     * The `then` method attached to a Thenable when it has rejected.\n     *\n     */\n    Twig.Thenable.rejectedThen = function (onResolved, onRejected) {\n        // Shortcut for rejected twig promises\n        if (!onRejected || typeof onRejected !== 'function') {\n            return this;\n        }\n\n        const value = this._value;\n\n        let result;\n        try {\n            result = onRejected(value);\n        } catch (error) {\n            result = Twig.Promise.reject(error);\n        }\n\n        return Twig.Promise.resolve(result);\n    };\n\n    /**\n     * An alternate implementation of a Promise that does not fully follow\n     * the spec, but instead works fully synchronous while still being\n     * thenable.\n     *\n     * These promises can be mixed with regular promises at which point\n     * the synchronous behaviour is lost.\n     */\n    Twig.Promise = function (executor) {\n        let state = STATE_UNKNOWN;\n        let value = null;\n\n        let changeState = function (nextState, nextValue) {\n            state = nextState;\n            value = nextValue;\n        };\n\n        function onReady(v) {\n            changeState(STATE_RESOLVED, v);\n        }\n\n        function onReject(e) {\n            changeState(STATE_REJECTED, e);\n        }\n\n        run(executor, onReady, onReject);\n\n        // If the promise settles right after running the executor we can\n        // return a Promise with it's state already set.\n        //\n        // Twig.Promise.resolve and Twig.Promise.reject both use the more\n        // efficient `Twig.Thenable` for this purpose.\n        if (state === STATE_RESOLVED) {\n            return Twig.Promise.resolve(value);\n        }\n\n        if (state === STATE_REJECTED) {\n            return Twig.Promise.reject(value);\n        }\n        // If we managed to get here our promise is going to resolve asynchronous.\n\n        changeState = new Twig.FullPromise();\n\n        return changeState.promise;\n    };\n\n    /**\n     * Promise implementation that can handle being resolved at any later time.\n     *\n     */\n    Twig.FullPromise = function () {\n        let handlers = null;\n\n        // The state has been changed to either resolve, or reject\n        // which means we should call the handler.\n        function resolved(onResolved) {\n            onResolved(p._value);\n        }\n\n        function rejected(onResolved, onRejected) {\n            onRejected(p._value);\n        }\n\n        let append = function (onResolved, onRejected) {\n            handlers = pending(handlers, onResolved, onRejected);\n        };\n\n        function changeState(newState, v) {\n            if (p._state) {\n                return;\n            }\n\n            p._value = v;\n            p._state = newState;\n\n            append = newState === STATE_RESOLVED ? resolved : rejected;\n\n            if (!handlers) {\n                return;\n            }\n\n            if (handlers[2] === -2) {\n                append(handlers[0], handlers[1]);\n                handlers = null;\n                return;\n            }\n\n            handlers.forEach(h => {\n                append(h[0], h[1]);\n            });\n            handlers = null;\n        }\n\n        const p = new Twig.Thenable((onResolved, onRejected) => {\n            const hasResolved = typeof onResolved === 'function';\n\n            // Shortcut for resolved twig promises\n            if (p._state === STATE_RESOLVED && !hasResolved) {\n                return Twig.Promise.resolve(p._value);\n            }\n\n            if (p._state === STATE_RESOLVED) {\n                try {\n                    return Twig.Promise.resolve(onResolved(p._value));\n                } catch (error) {\n                    return Twig.Promise.reject(error);\n                }\n            }\n\n            const hasRejected = typeof onRejected === 'function';\n\n            return new Twig.Promise((resolve, reject) => {\n                append(\n                    hasResolved ? result => {\n                        try {\n                            resolve(onResolved(result));\n                        } catch (error) {\n                            reject(error);\n                        }\n                    } : resolve,\n                    hasRejected ? err => {\n                        try {\n                            resolve(onRejected(err));\n                        } catch (error) {\n                            reject(error);\n                        }\n                    } : reject\n                );\n            });\n        });\n\n        changeState.promise = p;\n\n        return changeState;\n    };\n\n    Twig.Promise.defaultResolved = new Twig.Thenable(Twig.Thenable.resolvedThen, undefined, STATE_RESOLVED);\n    Twig.Promise.emptyStringResolved = new Twig.Thenable(Twig.Thenable.resolvedThen, '', STATE_RESOLVED);\n\n    Twig.Promise.resolve = function (value) {\n        if (arguments.length === 0 || typeof value === 'undefined') {\n            return Twig.Promise.defaultResolved;\n        }\n\n        if (Twig.isPromise(value)) {\n            return value;\n        }\n\n        // Twig often resolves with an empty string, we optimize for this\n        // scenario by returning a fixed promise. This reduces the load on\n        // garbage collection.\n        if (value === '') {\n            return Twig.Promise.emptyStringResolved;\n        }\n\n        return new Twig.Thenable(Twig.Thenable.resolvedThen, value, STATE_RESOLVED);\n    };\n\n    Twig.Promise.reject = function (e) {\n        // `e` should never be a promise.\n        return new Twig.Thenable(Twig.Thenable.rejectedThen, e, STATE_REJECTED);\n    };\n\n    Twig.Promise.all = function (promises) {\n        const results = new Array(promises.length);\n\n        return Twig.async.forEach(promises, (p, index) => {\n            if (!Twig.isPromise(p)) {\n                results[index] = p;\n                return;\n            }\n\n            if (p._state === STATE_RESOLVED) {\n                results[index] = p._value;\n                return;\n            }\n\n            return p.then(v => {\n                results[index] = v;\n            });\n        }).then(() => {\n            return results;\n        });\n    };\n\n    /**\n    * Go over each item in a fashion compatible with Twig.forEach,\n    * allow the function to return a promise or call the third argument\n    * to signal it is finished.\n    *\n    * Each item in the array will be called sequentially.\n    */\n    Twig.async.forEach = function (arr, callback) {\n        const len = arr.length;\n        let index = 0;\n\n        function next() {\n            let resp = null;\n\n            do {\n                if (index === len) {\n                    return Twig.Promise.resolve();\n                }\n\n                resp = callback(arr[index], index);\n                index++;\n\n            // While the result of the callback is not a promise or it is\n            // a promise that has settled we can use a regular loop which\n            // is much faster.\n            } while (!resp || !Twig.isPromise(resp) || resp._state === STATE_RESOLVED);\n\n            return resp.then(next);\n        }\n\n        return next();\n    };\n\n    return Twig;\n};\n","// ## twig.exports.js\n//\n// This file provides extension points and other hooks into the twig functionality.\n\nmodule.exports = function (Twig) {\n    'use strict';\n    Twig.exports = {\n        VERSION: Twig.VERSION\n    };\n\n    /**\n     * Create and compile a twig.js template.\n     *\n     * @param {Object} param Paramteres for creating a Twig template.\n     *\n     * @return {Twig.Template} A Twig template ready for rendering.\n     */\n    Twig.exports.twig = function (params) {\n        'use strict';\n        const {id} = params;\n        const options = {\n            strictVariables: params.strict_variables || false,\n            // TODO: turn autoscape on in the next major version\n            autoescape: (params.autoescape !== null && params.autoescape) || false,\n            allowInlineIncludes: params.allowInlineIncludes || false,\n            rethrow: params.rethrow || false,\n            namespaces: params.namespaces\n        };\n\n        if (Twig.cache && id) {\n            Twig.validateId(id);\n        }\n\n        if (params.debug !== undefined) {\n            Twig.debug = params.debug;\n        }\n\n        if (params.trace !== undefined) {\n            Twig.trace = params.trace;\n        }\n\n        if (params.data !== undefined) {\n            return Twig.Templates.parsers.twig({\n                data: params.data,\n                path: Object.hasOwnProperty.call(params, 'path') ? params.path : undefined,\n                module: params.module,\n                id,\n                options\n            });\n        }\n\n        if (params.ref !== undefined) {\n            if (params.id !== undefined) {\n                throw new Twig.Error('Both ref and id cannot be set on a twig.js template.');\n            }\n\n            return Twig.Templates.load(params.ref);\n        }\n\n        if (params.method !== undefined) {\n            if (!Twig.Templates.isRegisteredLoader(params.method)) {\n                throw new Twig.Error('Loader for \"' + params.method + '\" is not defined.');\n            }\n\n            return Twig.Templates.loadRemote(params.name || params.href || params.path || id || undefined, {\n                id,\n                method: params.method,\n                parser: params.parser || 'twig',\n                base: params.base,\n                module: params.module,\n                precompiled: params.precompiled,\n                async: params.async,\n                options\n\n            }, params.load, params.error);\n        }\n\n        if (params.href !== undefined) {\n            return Twig.Templates.loadRemote(params.href, {\n                id,\n                method: 'ajax',\n                parser: params.parser || 'twig',\n                base: params.base,\n                module: params.module,\n                precompiled: params.precompiled,\n                async: params.async,\n                options\n\n            }, params.load, params.error);\n        }\n\n        if (params.path !== undefined) {\n            return Twig.Templates.loadRemote(params.path, {\n                id,\n                method: 'fs',\n                parser: params.parser || 'twig',\n                base: params.base,\n                module: params.module,\n                precompiled: params.precompiled,\n                async: params.async,\n                options\n            }, params.load, params.error);\n        }\n    };\n\n    // Extend Twig with a new filter.\n    Twig.exports.extendFilter = function (filter, definition) {\n        Twig.filter.extend(filter, definition);\n    };\n\n    // Extend Twig with a new function.\n    Twig.exports.extendFunction = function (fn, definition) {\n        Twig._function.extend(fn, definition);\n    };\n\n    // Extend Twig with a new test.\n    Twig.exports.extendTest = function (test, definition) {\n        Twig.test.extend(test, definition);\n    };\n\n    // Extend Twig with a new definition.\n    Twig.exports.extendTag = function (definition) {\n        Twig.logic.extend(definition);\n    };\n\n    // Provide an environment for extending Twig core.\n    // Calls fn with the internal Twig object.\n    Twig.exports.extend = function (fn) {\n        fn(Twig);\n    };\n\n    /**\n     * Provide an extension for use with express 2.\n     *\n     * @param {string} markup The template markup.\n     * @param {array} options The express options.\n     *\n     * @return {string} The rendered template.\n     */\n    Twig.exports.compile = function (markup, options) {\n        const id = options.filename;\n        const path = options.filename;\n\n        // Try to load the template from the cache\n        const template = new Twig.Template({\n            data: markup,\n            path,\n            id,\n            options: options.settings['twig options']\n        }); // Twig.Templates.load(id) ||\n\n        return function (context) {\n            return template.render(context);\n        };\n    };\n\n    /**\n     * Provide an extension for use with express 3.\n     *\n     * @param {string} path The location of the template file on disk.\n     * @param {Object|Function} The options or callback.\n     * @param {Function} fn callback.\n     *\n     * @throws Twig.Error\n     */\n    Twig.exports.renderFile = function (path, options, fn) {\n        // Handle callback in options\n        if (typeof options === 'function') {\n            fn = options;\n            options = {};\n        }\n\n        options = options || {};\n\n        const settings = options.settings || {};\n\n        // Mixin any options provided to the express app.\n        const viewOptions = settings['twig options'];\n\n        const params = {\n            path,\n            base: settings.views,\n            load(template) {\n                // Render and return template as a simple string, see https://github.com/twigjs/twig.js/pull/348 for more information\n                if (!viewOptions || !viewOptions.allowAsync) {\n                    fn(null, String(template.render(options)));\n                    return;\n                }\n\n                template.renderAsync(options)\n                    .then(out => fn(null, out), fn);\n            }\n        };\n\n        if (viewOptions) {\n            for (const option in viewOptions) {\n                if (Object.hasOwnProperty.call(viewOptions, option)) {\n                    params[option] = viewOptions[option];\n                }\n            }\n        }\n\n        Twig.exports.twig(params);\n    };\n\n    // Express 3 handler\n    Twig.exports.__express = Twig.exports.renderFile;\n\n    /**\n     * Shoud Twig.js cache templates.\n     * Disable during development to see changes to templates without\n     * reloading, and disable in production to improve performance.\n     *\n     * @param {boolean} cache\n     */\n    Twig.exports.cache = function (cache) {\n        Twig.cache = cache;\n    };\n\n    // We need to export the path module so we can effectively test it\n    Twig.exports.path = Twig.path;\n\n    // Export our filters.\n    // Resolves #307\n    Twig.exports.filters = Twig.filters;\n\n    // Export our tests.\n    Twig.exports.tests = Twig.tests;\n\n    Twig.exports.Promise = Twig.Promise;\n\n    return Twig;\n};\n"],"sourceRoot":""}